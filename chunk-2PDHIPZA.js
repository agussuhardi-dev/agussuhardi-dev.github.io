import{a as ke,b as qe,g as Ce}from"./chunk-UUTHPC7H.js";import{$ as UE,$a as gE,Da as Oe,Ia as Ie,Oa as Ne,ab as le,ca as Ae,cb as GE,xa as ae,za as Se}from"./chunk-ORLON7DP.js";import{$c as ds,Ab as ME,Cb as fe,Dc as cs,Fb as _s,Ib as Ls,Jb as xe,Kb as Ke,Lb as Je,Mb as L,Nb as c,Ob as Y,Vb as Re,Vc as us,Wc as fs,Xb as mE,ec as F,f as C,fb as B,fc as $e,g as hE,gb as ls,h as $t,hc as X,ia as Ss,ic as x,jc as K,lc as V,pa as b,qa as Os,ra as Is,tb as Cs,za as Ns}from"./chunk-RAA3AKR4.js";var J=C(_e=>{"use strict";Object.defineProperty(_e,"__esModule",{value:!0});_e.isUndefined=_e.fixName=_e.validateName=_e.validateSingleChar=_e.fixChar=_e.validateChar=void 0;function _A(t){for(var e=0;e<t.length;e++){var E=t.charCodeAt(e);if(!(E===9||E===10||E===13||E>=32&&E<=55295||E>=57344&&E<=65533)){if(e+1===t.length)return!1;var r=t.charCodeAt(e+1);if(E>=55296&&E<=56319&&r>=56320&&r<=57343){e++;continue}return!1}}return!0}_e.validateChar=_A;function LA(t){for(var e="",E=0;E<t.length;E++){var r=t.charCodeAt(E);if(r===9||r===10||r===13||r>=32&&r<=55295||r>=57344&&r<=65533){e+=t[E];continue}if(E+1===t.length)return e+="\uFFFD",e;var n=t.charCodeAt(E+1);if(r>=55296&&r<=56319&&n>=56320&&n<=57343){e+=t[E]+t[E+1],E++;continue}e+="\uFFFD"}return e}_e.fixChar=LA;function cA(t){if(t.length===0)return!1;var e=t.charCodeAt(0);if(t.length===1)return e===9||e===10||e===13||e>=32&&e<=55295||e>=57344&&e<=65533;if(t.length!==2)return!1;var E=t.charCodeAt(1);return e>=55296&&e<=56319&&E>=56320&&E<=57343}_e.validateSingleChar=cA;function uA(t){if(t.length===0)return!1;var e=t.charCodeAt(0),E=e===58||e===95||e>=65&&e<=90||e>=97&&e<=122||e>=192&&e<=214||e>=216&&e<=246||e>=248&&e<=767||e>=880&&e<=893||e>=895&&e<=8191||e>=8204&&e<=8205||e>=8304&&e<=8591||e>=11264&&e<=12271||e>=12289&&e<=55295||e>=63744&&e<=64975||e>=65008&&e<=65533;if(t.length===1)return E;var r=t.charCodeAt(1),n=e>=55296&&e<=56191&&r>=56320&&r<=57343;if(!E&&!n)return!1;for(var T=n?2:1,s=T;s<t.length;s++){var o=t.charCodeAt(s);if(!(o===58||o===95||o===45||o===46||o===183||o>=48&&o<=57||o>=65&&o<=90||o>=97&&o<=122||o>=192&&o<=214||o>=216&&o<=246||o>=248&&o<=767||o>=768&&o<=879||o>=880&&o<=893||o>=895&&o<=8191||o>=8204&&o<=8205||o>=8255&&o<=8256||o>=8304&&o<=8591||o>=11264&&o<=12271||o>=12289&&o<=55295||o>=63744&&o<=64975||o>=65008&&o<=65533)){if(s+1===t.length)return!1;var i=t.charCodeAt(s+1);if(o>=55296&&o<=56191&&i>=56320&&i<=57343){s++;continue}return!1}}return!0}_e.validateName=uA;function fA(t){var e="";if(t.length===0)return e;var E=t.charCodeAt(0),r=E===58||E===95||E>=65&&E<=90||E>=97&&E<=122||E>=192&&E<=214||E>=216&&E<=246||E>=248&&E<=767||E>=880&&E<=893||E>=895&&E<=8191||E>=8204&&E<=8205||E>=8304&&E<=8591||E>=11264&&E<=12271||E>=12289&&E<=55295||E>=63744&&E<=64975||E>=65008&&E<=65533;if(t.length===1)return r?e=t[0]:e="\uFFFD",e;var n=t.charCodeAt(1),T=E>=55296&&E<=56191&&n>=56320&&n<=57343;T?e=t[0]+t[1]:r?e=t[0]:e="\uFFFD";for(var s=T?2:1,o=s;o<t.length;o++){var i=t.charCodeAt(o);if(i===58||i===95||i===45||i===46||i===183||i>=48&&i<=57||i>=65&&i<=90||i>=97&&i<=122||i>=192&&i<=214||i>=216&&i<=246||i>=248&&i<=767||i>=768&&i<=879||i>=880&&i<=893||i>=895&&i<=8191||i>=8204&&i<=8205||i>=8255&&i<=8256||i>=8304&&i<=8591||i>=11264&&i<=12271||i>=12289&&i<=55295||i>=63744&&i<=64975||i>=65008&&i<=65533){e+=t[o];continue}if(o+1===t.length)return e+="\uFFFD",e;var R=t.charCodeAt(o+1);if(i>=55296&&i<=56191&&R>=56320&&R<=57343){e+=t[o]+t[o+1],o++;continue}e+="\uFFFD"}return e}_e.fixName=fA;function dA(t){return Object.prototype.toString.call(t)==="[object Undefined]"}_e.isUndefined=dA});var Mt=C(BE=>{"use strict";Object.defineProperty(BE,"__esModule",{value:!0});BE.StringOptions=void 0;var yE=J(),PA=function(){function t(e){this.doubleQuotes=!1,this.indent="    ",this.newline=`
`,this.pretty=!0,(0,yE.isUndefined)(e.doubleQuotes)||(this.doubleQuotes=e.doubleQuotes),(0,yE.isUndefined)(e.indent)||(this.indent=e.indent),(0,yE.isUndefined)(e.newline)||(this.newline=e.newline),(0,yE.isUndefined)(e.pretty)||(this.pretty=e.pretty)}return t}();BE.StringOptions=PA});var FE=C(de=>{"use strict";Object.defineProperty(de,"__esModule",{value:!0});de.escapeDoubleQuotes=de.escapeSingleQuotes=de.escapeRightAngleBracketsInCdataTerminator=de.escapeLeftAngleBrackets=de.escapeAmpersands=void 0;function DA(t){return t.replace(/&/g,"&amp;")}de.escapeAmpersands=DA;function pA(t){return t.replace(/</g,"&lt;")}de.escapeLeftAngleBrackets=pA;function hA(t){return t.replace(/]]>/g,"]]&gt;")}de.escapeRightAngleBracketsInCdataTerminator=hA;function MA(t){return t.replace(/'/g,"&apos;")}de.escapeSingleQuotes=MA;function mA(t){return t.replace(/"/g,"&quot;")}de.escapeDoubleQuotes=mA});var on=C(sn=>{"use strict";Object.defineProperty(sn,"__esModule",{value:!0});var UA=ee(),Ps=FE(),Tn=J(),gA=function(){function t(e,E,r){this._validation=E,(0,Tn.isUndefined)(r.replaceInvalidCharsInCharData)?this._replaceInvalidCharsInCharData=!1:this._replaceInvalidCharsInCharData=r.replaceInvalidCharsInCharData,this._parent=e,this.charData=r.charData}return Object.defineProperty(t.prototype,"charData",{get:function(){return this._charData},set:function(e){if(this._replaceInvalidCharsInCharData)e=(0,Tn.fixChar)(e);else if(this._validation&&!(0,Tn.validateChar)(e))throw new Error((0,UA.getContext)(this.up())+": attribute text"+(' "'+e+'" should not contain characters not')+" allowed in XML");this._charData=e},enumerable:!1,configurable:!0}),t.prototype.toString=function(){var e=this._charData;return e=(0,Ps.escapeAmpersands)(e),e=(0,Ps.escapeLeftAngleBrackets)(e),e},t.prototype.up=function(){return this._parent},t}();sn.default=gA});var HE=C(Rn=>{"use strict";Object.defineProperty(Rn,"__esModule",{value:!0});var Ds=ee(),ps=J(),GA=function(){function t(e,E,r){this._hex=!1,this._validation=E,this._parent=e,this.char=r.char,(0,ps.isUndefined)(r.hex)||(this.hex=r.hex)}return Object.defineProperty(t.prototype,"char",{get:function(){return this._char},set:function(e){if(this._validation&&!(0,ps.validateSingleChar)(e))throw new Error((0,Ds.getContext)(this.up())+": character reference"+(' "'+e+'" should reference a single character,')+" and this character should be allowed in XML");this._char=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"hex",{get:function(){return this._hex},set:function(e){this._hex=e},enumerable:!1,configurable:!0}),t.prototype.toString=function(){var e;if(this._char.length===1)e=this._char.charCodeAt(0);else{var E=this._char.charCodeAt(0);if(E>=55296&&E<=56319&&this._char.length>1){var r=this._char.charCodeAt(1);if(r>=56320&&r<=57343)e=(E-55296)*1024+r-56320+65536;else throw new Error((0,Ds.getContext)(this.up())+": character"+(' reference "'+this.char+'" should')+" reference a valid Unicode character")}else e=E}return this._hex?"&#x"+e.toString(16)+";":"&#"+e+";"},t.prototype.up=function(){return this._parent},t}();Rn.default=GA});var YE=C(An=>{"use strict";Object.defineProperty(An,"__esModule",{value:!0});var yA=ee(),BA=J(),FA=function(){function t(e,E,r){this._validation=E,this._parent=e,this.name=r.name}return Object.defineProperty(t.prototype,"name",{get:function(){return this._name},set:function(e){if(this._validation&&!(0,BA.validateName)(e))throw new Error((0,yA.getContext)(this.up())+": entity reference name"+(' "'+e+'" should not contain characters not')+" allowed in XML names");this._name=e},enumerable:!1,configurable:!0}),t.prototype.toString=function(){return"&"+this._name+";"},t.prototype.up=function(){return this._parent},t}();An.default=FA});var bE=C(kt=>{"use strict";var On=kt&&kt.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(kt,"__esModule",{value:!0});var an=ee(),hs=FE(),HA=Mt(),Sn=J(),YA=On(on()),bA=On(HE()),vA=On(YE()),VA=function(){function t(e,E,r){this._validation=E,(0,Sn.isUndefined)(r.replaceInvalidCharsInName)?this._replaceInvalidCharsInName=!1:this._replaceInvalidCharsInName=r.replaceInvalidCharsInName,this._children=[],this._parent=e,this.name=r.name}return Object.defineProperty(t.prototype,"name",{get:function(){return this._name},set:function(e){if(this._replaceInvalidCharsInName){if(e=(0,Sn.fixName)(e),e.length===0)throw new Error((0,an.getContext)(this.up())+": attribute name should not be empty")}else if(this._validation&&!(0,Sn.validateName)(e))throw e.length===0?new Error((0,an.getContext)(this.up())+": attribute name should not be empty"):new Error((0,an.getContext)(this.up())+": attribute name"+(' "'+e+'" should not contain characters not')+" allowed in XML names");this._name=e},enumerable:!1,configurable:!0}),t.prototype.charRef=function(e){var E=new bA.default(this,this._validation,e);return this._children.push(E),E},t.prototype.entityRef=function(e){var E=new vA.default(this,this._validation,e);return this._children.push(E),E},t.prototype.text=function(e){var E=new YA.default(this,this._validation,e);return this._children.push(E),E},t.prototype.toString=function(e){e===void 0&&(e={});for(var E=new HA.StringOptions(e),r=E.doubleQuotes?'"':"'",n=this._name+"="+r,T=0,s=this._children;T<s.length;T++){var o=s[T];E.doubleQuotes?n+=(0,hs.escapeDoubleQuotes)(o.toString()):n+=(0,hs.escapeSingleQuotes)(o.toString())}return n+=r,n},t.prototype.up=function(){return this._parent},t}();kt.default=VA});var Nn=C(In=>{"use strict";Object.defineProperty(In,"__esModule",{value:!0});var wA=ee(),WA=J(),XA=function(){function t(e,E,r){this._validation=E,this._parent=e,this.charData=r.charData}return Object.defineProperty(t.prototype,"charData",{get:function(){return this._charData},set:function(e){if(this._validation&&!(0,WA.validateChar)(e))throw new Error((0,wA.getContext)(this.up())+": attribute-list"+(' declaration "'+e+'" should not contain')+" characters not allowed in XML");this._charData=e},enumerable:!1,configurable:!0}),t.prototype.toString=function(){return"<!ATTLIST "+this._charData+">"},t.prototype.up=function(){return this._parent},t}();In.default=XA});var Cn=C(ln=>{"use strict";Object.defineProperty(ln,"__esModule",{value:!0});var xA=ee(),KA=J(),JA=function(){function t(e,E,r){this._validation=E,this._parent=e,this.charData=r.charData}return Object.defineProperty(t.prototype,"charData",{get:function(){return this._charData},set:function(e){if(this._validation&&!(0,KA.validateChar)(e))throw new Error((0,xA.getContext)(this.up())+": element declaration"+(' "'+e+'" should not contain characters')+" not allowed in XML");this._charData=e},enumerable:!1,configurable:!0}),t.prototype.toString=function(){return"<!ELEMENT "+this._charData+">"},t.prototype.up=function(){return this._parent},t}();ln.default=JA});var Ln=C(_n=>{"use strict";Object.defineProperty(_n,"__esModule",{value:!0});var $A=ee(),kA=J(),qA=function(){function t(e,E,r){this._validation=E,this._parent=e,this.charData=r.charData}return Object.defineProperty(t.prototype,"charData",{get:function(){return this._charData},set:function(e){if(this._validation&&!(0,kA.validateChar)(e))throw new Error((0,$A.getContext)(this.up())+": entity declaration"+(' "'+e+'" should not contain characters')+" not allowed in XML");this._charData=e},enumerable:!1,configurable:!0}),t.prototype.toString=function(){return"<!ENTITY "+this._charData+">"},t.prototype.up=function(){return this._parent},t}();_n.default=qA});var un=C(cn=>{"use strict";Object.defineProperty(cn,"__esModule",{value:!0});var QA=ee(),jA=J(),ZA=function(){function t(e,E,r){this._validation=E,this._parent=e,this.charData=r.charData}return Object.defineProperty(t.prototype,"charData",{get:function(){return this._charData},set:function(e){if(this._validation&&!(0,jA.validateChar)(e))throw new Error((0,QA.getContext)(this.up())+": notation declaration"+(' "'+e+'" should not contain characters')+" not allowed in XML");this._charData=e},enumerable:!1,configurable:!0}),t.prototype.toString=function(){return"<!NOTATION "+this._charData+">"},t.prototype.up=function(){return this._parent},t}();cn.default=ZA});var dn=C(fn=>{"use strict";Object.defineProperty(fn,"__esModule",{value:!0});var zA=ee(),ea=J(),ta=function(){function t(e,E,r){this._validation=E,this._parent=e,this.name=r.name}return Object.defineProperty(t.prototype,"name",{get:function(){return this._name},set:function(e){if(this._validation&&!(0,ea.validateName)(e))throw new Error((0,zA.getContext)(this.up())+": parameter entity"+(' reference name "'+e+'" should not contain')+" characters not allowed in XML names");this._name=e},enumerable:!1,configurable:!0}),t.prototype.toString=function(){return"%"+this._name+";"},t.prototype.up=function(){return this._parent},t}();fn.default=ta});var qt=C(Pn=>{"use strict";Object.defineProperty(Pn,"__esModule",{value:!0});var vE=ee(),VE=J(),Ea=function(){function t(e,E,r){this._validation=E,this._parent=e,this.content=r.content,this.target=r.target}return Object.defineProperty(t.prototype,"content",{get:function(){return this._content},set:function(e){if(!(0,VE.isUndefined)(e)){if(this._validation&&!(0,VE.validateChar)(e))throw new Error((0,vE.getContext)(this.up())+": processing"+(' instruction content "'+e+'" should')+" not contain characters not allowed in XML");if(this._validation&&e.indexOf("?>")!==-1)throw new Error((0,vE.getContext)(this.up())+": processing"+(' instruction content "'+e+'" should')+" not contain the string '?>'")}this._content=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"target",{get:function(){return this._target},set:function(e){if(this._validation&&!(0,VE.validateName)(e))throw new Error((0,vE.getContext)(this.up())+": processing"+(' instruction target "'+e+'" should')+" not contain characters not allowed in XML names");if(this._validation&&e==="xml")throw new Error((0,vE.getContext)(this.up())+": processing"+(' instruction target "'+e+'" should')+" not be the string 'xml'");this._target=e},enumerable:!1,configurable:!0}),t.prototype.toString=function(){return(0,VE.isUndefined)(this._content)?"<?"+this._target+"?>":"<?"+this._target+" "+this._content+"?>"},t.prototype.up=function(){return this._parent},t}();Pn.default=Ea});var wE=C(St=>{"use strict";var Ot=St&&St.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(St,"__esModule",{value:!0});St.validatePubId=void 0;var Qe=ee(),ra=Mt(),He=J(),na=Ot(Qt()),Ta=Ot(Nn()),sa=Ot(Cn()),ia=Ot(Ln()),oa=Ot(un()),Ra=Ot(dn()),Aa=Ot(qt()),aa=function(){function t(e,E,r){this._pubId=void 0,this._sysId=void 0,this._validation=E,this._children=[],this._parent=e,this.name=r.name,(0,He.isUndefined)(r.sysId)||(this.sysId=r.sysId),(0,He.isUndefined)(r.pubId)||(this.pubId=r.pubId)}return Object.defineProperty(t.prototype,"name",{get:function(){return this._name},set:function(e){if(this._validation&&!(0,He.validateName)(e))throw new Error((0,Qe.getContext)(this.up())+': DTD name "'+e+'" should not contain characters not allowed in XML names');this._name=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"pubId",{get:function(){return this._pubId},set:function(e){if(!(0,He.isUndefined)(e)){if(this._validation&&!Ms(e))throw new Error((0,Qe.getContext)(this.up())+": DTD public"+(' identifier "'+e+'" should not contain')+" characters not allowed in public identifiers");if(this._validation&&(0,He.isUndefined)(this._sysId))throw new Error((0,Qe.getContext)(this.up())+": DTD public"+(' identifier "'+e+'" should not be defined')+" if system identifier is undefined")}this._pubId=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"sysId",{get:function(){return this._sysId},set:function(e){if(!(0,He.isUndefined)(e)){if(this._validation&&!(0,He.validateChar)(e))throw new Error((0,Qe.getContext)(this.up())+": DTD system"+(' identifier "'+e+'" should not contain')+" characters not allowed in XML");if(this._validation&&e.indexOf("'")!==-1&&e.indexOf('"')!==-1)throw new Error((0,Qe.getContext)(this.up())+": DTD system"+(' identifier "'+e+'" should not contain')+" both single quotes and double quotes")}this._sysId=e},enumerable:!1,configurable:!0}),t.prototype.attlist=function(e){var E=new Ta.default(this,this._validation,e);return this._children.push(E),E},t.prototype.comment=function(e){var E=new na.default(this,this._validation,e);return this._children.push(E),E},t.prototype.element=function(e){var E=new sa.default(this,this._validation,e);return this._children.push(E),E},t.prototype.entity=function(e){var E=new ia.default(this,this._validation,e);return this._children.push(E),E},t.prototype.notation=function(e){var E=new oa.default(this,this._validation,e);return this._children.push(E),E},t.prototype.paramEntityRef=function(e){var E=new Ra.default(this,this._validation,e);return this._children.push(E),E},t.prototype.procInst=function(e){var E=new Aa.default(this,this._validation,e);return this._children.push(E),E},t.prototype.toString=function(e){e===void 0&&(e={});var E=new ra.StringOptions(e),r="<!DOCTYPE "+this._name;if((0,He.isUndefined)(this._pubId))(0,He.isUndefined)(this._sysId)||(r+=" ",r=this.appendId("SYSTEM",this._sysId,r,E));else{if((0,He.isUndefined)(this._sysId))throw new Error((0,Qe.getContext)(this.up())+": DTD system identifier is not undefined");r+=" ",r=this.appendId("PUBLIC",this._pubId,r,E),r=this.appendId("",this._sysId,r,E)}if(this._children.length!==0){r+=" [";for(var n=0,T=this._children;n<T.length;n++){var s=T[n];E.pretty&&(r+=E.newline+E.indent),r+=s.toString()}E.pretty&&(r+=E.newline),r+="]>"}else r+=">";return r},t.prototype.up=function(){return this._parent},t.prototype.appendId=function(e,E,r,n){if(r+=e+" ",n.doubleQuotes){if(this._validation&&E.indexOf('"')!==-1)throw new Error((0,Qe.getContext)(this.up())+": doubleQuotes option inconsistent with DTD system identifier or public identifier");r+='"'+E+'"'}else{if(this._validation&&E.indexOf("'")!==-1)throw new Error((0,Qe.getContext)(this)+": doubleQuotes option inconsistent with DTD system identifier or public identifier");r+="'"+E+"'"}return r},t}();St.default=aa;function Ms(t){for(var e=0;e<t.length;e++){var E=t.charCodeAt(e);if(!(E===10||E===13||E===32||E===33||E>=35&&E<=37||E>=39&&E<=47||E>=48&&E<=57||E===58||E===59||E===61||E===63||E>=64&&E<=90||E===95||E>=97&&E<=122))return e+1===t.length,!1}return!0}St.validatePubId=Ms});var hn=C(pn=>{"use strict";Object.defineProperty(pn,"__esModule",{value:!0});var ms=ee(),Dn=J(),Sa=function(){function t(e,E,r){this._validation=E,(0,Dn.isUndefined)(r.replaceInvalidCharsInCharData)?this._replaceInvalidCharsInCharData=!1:this._replaceInvalidCharsInCharData=r.replaceInvalidCharsInCharData,this._parent=e,this.charData=r.charData}return Object.defineProperty(t.prototype,"charData",{get:function(){return this._charData},set:function(e){if(this._replaceInvalidCharsInCharData)e=(0,Dn.fixChar)(e);else if(this._validation&&!(0,Dn.validateChar)(e))throw new Error((0,ms.getContext)(this.up())+": CDATA section"+(' "'+e+'" should not contain characters')+" not allowed in XML");if(this._replaceInvalidCharsInCharData)e=e.replace("]]>","\uFFFD\uFFFD\uFFFD");else if(this._validation&&e.indexOf("]]>")!==-1)throw new Error((0,ms.getContext)(this.up())+": CDATA section"+(' "'+e+'" should not contain the string')+" ']]>'");this._charData=e},enumerable:!1,configurable:!0}),t.prototype.toString=function(){return"<![CDATA["+this._charData+"]]>"},t.prototype.up=function(){return this._parent},t}();pn.default=Sa});var gn=C(Un=>{"use strict";Object.defineProperty(Un,"__esModule",{value:!0});var Oa=ee(),Mn=FE(),mn=J(),Ia=function(){function t(e,E,r){this._validation=E,(0,mn.isUndefined)(r.replaceInvalidCharsInCharData)?this._replaceInvalidCharsInCharData=!1:this._replaceInvalidCharsInCharData=r.replaceInvalidCharsInCharData,this._parent=e,this.charData=r.charData}return Object.defineProperty(t.prototype,"charData",{get:function(){return this._charData},set:function(e){if(this._replaceInvalidCharsInCharData)e=(0,mn.fixChar)(e);else if(this._validation&&!(0,mn.validateChar)(e))throw new Error((0,Oa.getContext)(this.up())+": character data"+('"'+e+'" should not contain characters not')+" allowed in XML");this._charData=e},enumerable:!1,configurable:!0}),t.prototype.toString=function(){var e=this._charData;return e=(0,Mn.escapeAmpersands)(e),e=(0,Mn.escapeLeftAngleBrackets)(e),e=(0,Mn.escapeRightAngleBracketsInCdataTerminator)(e),e},t.prototype.up=function(){return this._parent},t}();Un.default=Ia});var KE=C(zt=>{"use strict";var It=zt&&zt.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(zt,"__esModule",{value:!0});var WE=ee(),Na=Mt(),jt=J(),Us=It(bE()),la=It(hn()),Zt=It(gn()),XE=It(HE()),Ca=It(Qt()),xE=It(YE()),_a=It(qt()),La=function(){function t(e,E,r){this._validation=E,(0,jt.isUndefined)(r.replaceInvalidCharsInName)?this._replaceInvalidCharsInName=!1:this._replaceInvalidCharsInName=r.replaceInvalidCharsInName,(0,jt.isUndefined)(r.useSelfClosingTagIfEmpty)?this._useSelfClosingTagIfEmpty=!0:this._useSelfClosingTagIfEmpty=r.useSelfClosingTagIfEmpty,this._children=[],this._attributeNames=[],this._parent=e,this.name=r.name}return Object.defineProperty(t.prototype,"name",{get:function(){return this._name},set:function(e){if(this._replaceInvalidCharsInName){if(e=(0,jt.fixName)(e),e.length===0)throw new Error((0,WE.getContext)(this.up())+": element name should not be empty")}else if(this._validation&&!(0,jt.validateName)(e))throw e.length===0?new Error((0,WE.getContext)(this.up())+": element name should not be empty"):new Error((0,WE.getContext)(this.up())+": element name"+(' "'+e+'" should not contain characters not')+" allowed in XML names");this._name=e},enumerable:!1,configurable:!0}),t.prototype.attribute=function(e){if(this._validation&&this._attributeNames.indexOf(e.name)!==-1)throw new Error((0,WE.getContext)(this.up())+': element "'+this.name+'" already contains an attribute with the'+(' name "'+e.name+'"'));var E=new Us.default(this,this._validation,e);return this._children.push(E),this._attributeNames.push(e.name),E},t.prototype.cdata=function(e){var E=new la.default(this,this._validation,e);return this._children.push(E),E},t.prototype.charData=function(e){var E=new Zt.default(this,this._validation,e);return this._children.push(E),E},t.prototype.charRef=function(e){var E=new XE.default(this,this._validation,e);return this._children.push(E),E},t.prototype.comment=function(e){var E=new Ca.default(this,this._validation,e);return this._children.push(E),E},t.prototype.element=function(e){var E=new t(this,this._validation,e);return this._children.push(E),E},t.prototype.entityRef=function(e){var E=new xE.default(this,this._validation,e);return this._children.push(E),E},t.prototype.procInst=function(e){var E=new _a.default(this,this._validation,e);return this._children.push(E),E},t.prototype.toString=function(e){return e===void 0&&(e={}),this.toStringWithIndent(e,"")},t.prototype.up=function(){return this._parent},t.prototype.toStringWithIndent=function(e,E){for(var r=new Na.StringOptions(e),n=E+r.indent,T="<"+this._name,s=[],o=0,i=this._children;o<i.length;o++){var R=i[o];R instanceof Us.default?T+=" "+R.toString(e):s.push(R)}if(s.length>0){for(var A="",a=0;a<s.length;a++){var O=s[a],I="";O instanceof t?I+=O.toStringWithIndent(r,n):I+=O.toString();var _=a>0?s[a-1]:void 0;O instanceof Zt.default&&O.toString()===""||(r.pretty&&(this.allSameLineNodes(s)||a>0&&this.onSameLine(O,_)||(I=r.newline+n+I)),A+=I)}r.pretty&&(this.allSameLineNodes(s)||(A+=r.newline+E)),A.length===0&&this._useSelfClosingTagIfEmpty?T+="/>":T+=">"+A+"</"+this._name+">"}else this._useSelfClosingTagIfEmpty?T+="/>":T+="></"+this._name+">";return T},t.prototype.allSameLineNodes=function(e){for(var E=0,r=e;E<r.length;E++){var n=r[E];if(!(n instanceof XE.default||n instanceof xE.default||n instanceof Zt.default))return!1}return!0},t.prototype.onSameLine=function(e,E){return(e instanceof XE.default||e instanceof xE.default||e instanceof Zt.default)&&!(0,jt.isUndefined)(E)&&(E instanceof XE.default||E instanceof xE.default||E instanceof Zt.default)},t}();zt.default=La});var ee=C(mt=>{"use strict";var $E=mt&&mt.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(mt,"__esModule",{value:!0});mt.getContext=void 0;var ca=$E(bE()),ua=$E(kE()),fa=$E(wE()),da=$E(KE());function JE(t){if(t instanceof ca.default)return JE(t.up())+(' > attribute "'+t.name+'"');if(t instanceof ua.default)return"in XML document";if(t instanceof fa.default)return JE(t.up())+" > DTD";if(t instanceof da.default)return JE(t.up())+(' > element "'+t.name+'"');throw new Error("Unrecognized object of type "+Object.prototype.toString.call(t))}mt.getContext=JE});var Qt=C(Bn=>{"use strict";Object.defineProperty(Bn,"__esModule",{value:!0});var Gn=ee(),yn=J(),Pa=function(){function t(e,E,r){this._validation=E,(0,yn.isUndefined)(r.replaceInvalidCharsInCharData)?this._replaceInvalidCharsInCharData=!1:this._replaceInvalidCharsInCharData=r.replaceInvalidCharsInCharData,this._parent=e,this.charData=r.charData}return Object.defineProperty(t.prototype,"charData",{get:function(){return this._charData},set:function(e){if(this._replaceInvalidCharsInCharData)e=(0,yn.fixChar)(e);else if(this._validation&&!(0,yn.validateChar)(e))throw new Error((0,Gn.getContext)(this.up())+": comment content"+(' "'+e+'" should not contain characters')+" not allowed in XML");if(this._replaceInvalidCharsInCharData)e=e.replace("--","\uFFFD\uFFFD");else if(this._validation&&e.indexOf("--")!==-1)throw new Error((0,Gn.getContext)(this.up())+": comment content"+(' "'+e+'" should not contain the string')+" '--'");if(this._replaceInvalidCharsInCharData)e.lastIndexOf("-")===e.length-1&&(e=e.substr(0,e.length-1)+"\uFFFD");else if(this._validation&&e.lastIndexOf("-")===e.length-1)throw new Error((0,Gn.getContext)(this.up())+": comment content"+(' "'+e+'" should not end with the string')+" '-'");this._charData=e},enumerable:!1,configurable:!0}),t.prototype.toString=function(){return"<!--"+this._charData+"-->"},t.prototype.up=function(){return this._parent},t}();Bn.default=Pa});var Yn=C(Hn=>{"use strict";Object.defineProperty(Hn,"__esModule",{value:!0});var Fn=ee(),Da=Mt(),eE=J(),pa=function(){function t(e,E,r){this._version="1.0",this._validation=E,this._parent=e,this.encoding=r.encoding,this.standalone=r.standalone,(0,eE.isUndefined)(r.version)||(this.version=r.version)}return Object.defineProperty(t.prototype,"encoding",{get:function(){return this._encoding},set:function(e){if(this._validation&&!(0,eE.isUndefined)(e)&&!ha(e))throw new Error((0,Fn.getContext)(this.up())+": declaration"+(" encoding attribute "+e+" should be a")+" valid encoding");this._encoding=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"standalone",{get:function(){return this._standalone},set:function(e){if(this._validation&&!(0,eE.isUndefined)(e)&&e!=="yes"&&e!=="no")throw new Error((0,Fn.getContext)(this.up())+": declaration"+(" standalone attribute "+e+" should")+" be the string 'yes' or the string 'no'");this._standalone=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"version",{get:function(){return this._version},set:function(e){if(this._validation&&!Ma(e))throw new Error((0,Fn.getContext)(this.up())+": declaration version"+(" attribute "+e+" should be a valid XML")+" version");this._version=e},enumerable:!1,configurable:!0}),t.prototype.toString=function(e){e===void 0&&(e={});var E=new Da.StringOptions(e),r=E.doubleQuotes?'"':"'",n="<?xml version="+r+this._version+r;return(0,eE.isUndefined)(this._encoding)||(n+=" encoding="+r+this._encoding+r),(0,eE.isUndefined)(this._standalone)||(n+=" standalone="+r+this._standalone+r),n+="?>",n},t.prototype.up=function(){return this._parent},t}();Hn.default=pa;function ha(t){if(t.length===0)return!1;var e=t.charCodeAt(0);if(!(e>=65&&e<=90||e>=97&&e<=122))return!1;for(var E=1;E<t.length;E++){var r=t.charCodeAt(E);if(!(r===95||r===45||r===46||r>=48&&r<=57||r>=65&&r<=90||r>=97&&r<=122))return E+1===t.length,!1}return!0}function Ma(t){for(var e=0;e<=9;e++)if(t==="1."+e)return!0;return!1}});var kE=C(EE=>{"use strict";var rE=EE&&EE.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(EE,"__esModule",{value:!0});var ma=Mt(),Ua=J(),ga=rE(Qt()),gs=rE(Yn()),Gs=rE(wE()),tE=rE(KE()),Ga=rE(qt()),ya=function(){function t(e){this._children=[],this._validation=(0,Ua.isUndefined)(e.validation)?!0:e.validation}return t.prototype.comment=function(e){var E=new ga.default(this,this._validation,e);return this._children.push(E),E},t.prototype.decl=function(e){if(e===void 0&&(e={}),this._validation&&this._children.length!==0)throw new Error("in XML document: declaration must be the first child");var E=new gs.default(this,this._validation,e);return this._children.push(E),E},t.prototype.dtd=function(e){var E=this._children.filter(function(n){return n instanceof tE.default});if(this._validation&&E.length!==0)throw new Error("in XML document: DTD must precede the root element");var r=new Gs.default(this,this._validation,e);return this._children.push(r),r},t.prototype.element=function(e){var E=this._children.filter(function(n){return n instanceof tE.default});if(this._validation&&E.length!==0)throw new Error("in XML document: only one root element is permitted");var r=new tE.default(this,this._validation,e);return this._children.push(r),r},t.prototype.procInst=function(e){var E=new Ga.default(this,this._validation,e);return this._children.push(E),E},t.prototype.toString=function(e){e===void 0&&(e={});var E=this._children.filter(function(R){return R instanceof tE.default});if(this._validation&&E.length!==1)throw new Error("in XML document: no more than one root element is permitted");for(var r=new ma.StringOptions(e),n="",T=0,s=this._children;T<s.length;T++){var o=s[T];o instanceof gs.default||o instanceof Gs.default||o instanceof tE.default?n+=o.toString(e):n+=o.toString(),r.pretty&&(n+=r.newline)}var i=n.length-r.newline.length;return n.substr(i)===r.newline&&(n=n.substr(0,i)),n},t}();EE.default=ya});var ys=C(D=>{"use strict";var q=D&&D.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(D,"__esModule",{value:!0});D.document=D.XmlProcInst=D.XmlEntityRef=D.XmlElement=D.XmlDtdParamEntityRef=D.XmlDtdNotation=D.XmlDtdEntity=D.XmlDtdElement=D.XmlDtdAttlist=D.XmlDtd=D.XmlDocument=D.XmlDecl=D.XmlComment=D.XmlCharRef=D.XmlCharData=D.XmlCdata=D.XmlAttributeText=D.XmlAttribute=void 0;var Ba=q(kE()),Fa=bE();Object.defineProperty(D,"XmlAttribute",{enumerable:!0,get:function(){return q(Fa).default}});var Ha=on();Object.defineProperty(D,"XmlAttributeText",{enumerable:!0,get:function(){return q(Ha).default}});var Ya=hn();Object.defineProperty(D,"XmlCdata",{enumerable:!0,get:function(){return q(Ya).default}});var ba=gn();Object.defineProperty(D,"XmlCharData",{enumerable:!0,get:function(){return q(ba).default}});var va=HE();Object.defineProperty(D,"XmlCharRef",{enumerable:!0,get:function(){return q(va).default}});var Va=Qt();Object.defineProperty(D,"XmlComment",{enumerable:!0,get:function(){return q(Va).default}});var wa=Yn();Object.defineProperty(D,"XmlDecl",{enumerable:!0,get:function(){return q(wa).default}});var Wa=kE();Object.defineProperty(D,"XmlDocument",{enumerable:!0,get:function(){return q(Wa).default}});var Xa=wE();Object.defineProperty(D,"XmlDtd",{enumerable:!0,get:function(){return q(Xa).default}});var xa=Nn();Object.defineProperty(D,"XmlDtdAttlist",{enumerable:!0,get:function(){return q(xa).default}});var Ka=Cn();Object.defineProperty(D,"XmlDtdElement",{enumerable:!0,get:function(){return q(Ka).default}});var Ja=Ln();Object.defineProperty(D,"XmlDtdEntity",{enumerable:!0,get:function(){return q(Ja).default}});var $a=un();Object.defineProperty(D,"XmlDtdNotation",{enumerable:!0,get:function(){return q($a).default}});var ka=dn();Object.defineProperty(D,"XmlDtdParamEntityRef",{enumerable:!0,get:function(){return q(ka).default}});var qa=KE();Object.defineProperty(D,"XmlElement",{enumerable:!0,get:function(){return q(qa).default}});var Qa=YE();Object.defineProperty(D,"XmlEntityRef",{enumerable:!0,get:function(){return q(Qa).default}});var ja=qt();Object.defineProperty(D,"XmlProcInst",{enumerable:!0,get:function(){return q(ja).default}});function Za(t){return t===void 0&&(t={}),new Ba.default(t)}D.document=Za});var bn=C(Q=>{"use strict";Object.defineProperty(Q,"__esModule",{value:!0});Q.stringify=Q.isMap=Q.isSet=Q.isFunction=Q.isArray=Q.isObject=Q.isNull=Q.isUndefined=void 0;function Bs(t){return Object.prototype.toString.call(t)==="[object Undefined]"}Q.isUndefined=Bs;function Fs(t){return Object.prototype.toString.call(t)==="[object Null]"}Q.isNull=Fs;function za(t){return Object.prototype.toString.call(t)==="[object Object]"}Q.isObject=za;function eS(t){return Object.prototype.toString.call(t)==="[object Array]"}Q.isArray=eS;function Hs(t){return Object.prototype.toString.call(t)==="[object Function]"}Q.isFunction=Hs;function tS(t){return Object.prototype.toString.call(t)==="[object Set]"}Q.isSet=tS;function ES(t){return Object.prototype.toString.call(t)==="[object Map]"}Q.isMap=ES;function rS(t){return!Bs(t)&&!Fs(t)&&Hs(t?.toString)&&(t=t.toString()),String(t)}Q.stringify=rS});var Ws=C(Le=>{"use strict";Object.defineProperty(Le,"__esModule",{value:!0});Le.WrapHandlers=Le.TypeHandlers=Le.FormatOptions=Le.DtdOptions=Le.DeclarationOptions=Le.Options=void 0;var he=bn(),nS=function(){function t(e){e===void 0&&(e={}),this.aliasString="=",this.attributeString="@",this.cdataInvalidChars=!1,this.cdataKeys=[],this.replaceInvalidChars=!1,this.useSelfClosingTagIfEmpty=!0,this.validation=!0,this.valueString="#",(0,he.isUndefined)(e.validation)||(this.validation=e.validation),(0,he.isUndefined)(e.aliasString)||(this.aliasString=e.aliasString),(0,he.isUndefined)(e.attributeString)||(this.attributeString=e.attributeString),(0,he.isUndefined)(e.cdataInvalidChars)||(this.cdataInvalidChars=e.cdataInvalidChars),(0,he.isUndefined)(e.cdataKeys)||(this.cdataKeys=e.cdataKeys),this.declaration=new Ys(e.declaration),this.dtd=new bs(this.validation,e.dtd),this.format=new vs(e.format),(0,he.isUndefined)(e.replaceInvalidChars)||(this.replaceInvalidChars=e.replaceInvalidChars),this.typeHandlers=new Vs(e.typeHandlers),(0,he.isUndefined)(e.useSelfClosingTagIfEmpty)||(this.useSelfClosingTagIfEmpty=e.useSelfClosingTagIfEmpty),(0,he.isUndefined)(e.valueString)||(this.valueString=e.valueString),this.wrapHandlers=new ws(e.wrapHandlers)}return t}();Le.Options=nS;var Ys=function(){function t(e){e===void 0&&(e={}),this.include=!0,(0,he.isUndefined)(e.include)||(this.include=e.include),this.encoding=e.encoding,this.standalone=e.standalone,this.version=e.version}return t}();Le.DeclarationOptions=Ys;var bs=function(){function t(e,E){if(E===void 0&&(E={}),this.include=!1,(0,he.isUndefined)(E.include)||(this.include=E.include),e&&(0,he.isUndefined)(E.name)&&this.include)throw new Error("options.dtd.name should be defined if options.dtd.include is true");this.name=E.name,this.sysId=E.sysId,this.pubId=E.pubId}return t}();Le.DtdOptions=bs;var vs=function(){function t(e){e===void 0&&(e={}),this.doubleQuotes=e.doubleQuotes,this.indent=e.indent,this.newline=e.newline,this.pretty=e.pretty}return t}();Le.FormatOptions=vs;var Vs=function(){function t(e){e===void 0&&(e={});for(var E in e)Object.prototype.hasOwnProperty.call(e,E)&&(this[E]=e[E])}return t}();Le.TypeHandlers=Vs;var ws=function(){function t(e){e===void 0&&(e={});for(var E in e)Object.prototype.hasOwnProperty.call(e,E)&&(this[E]=e[E])}return t}();Le.WrapHandlers=ws});var ks=C(je=>{"use strict";Object.defineProperty(je,"__esModule",{value:!0});je.parse=je.parseToExistingElement=je.Absent=void 0;var xs=ys(),Ks=Ws(),w=bn(),qE=function(){function t(){}return Object.defineProperty(t,"instance",{get:function(){return t._instance},enumerable:!1,configurable:!0}),t._instance=new t,t}();je.Absent=qE;function QE(t,e){var E=Object.prototype.toString.call(t),r;return Object.prototype.hasOwnProperty.call(e.typeHandlers,"*")&&(r=e.typeHandlers["*"]),Object.prototype.hasOwnProperty.call(e.typeHandlers,E)&&(r=e.typeHandlers[E]),r}function Js(t,e,E){var r=function(s){return E.cdataInvalidChars&&(s.indexOf("<")!==-1||s.indexOf("&")!==-1)||E.cdataKeys.indexOf(e.name)!==-1||E.cdataKeys.indexOf("*")!==-1};if(e instanceof xs.XmlElement)if(r(t))for(var n=t.split("]]>"),T=0;T<n.length;T++)r(n[T])?e.cdata({charData:n[T],replaceInvalidCharsInCharData:E.replaceInvalidChars}):e.charData({charData:n[T],replaceInvalidCharsInCharData:E.replaceInvalidChars}),T<n.length-1&&e.charData({charData:"]]>",replaceInvalidCharsInCharData:E.replaceInvalidChars});else e.charData({charData:t,replaceInvalidCharsInCharData:E.replaceInvalidChars});else e.text({charData:t,replaceInvalidCharsInCharData:E.replaceInvalidChars})}function TS(t,e,E,r){var n=E.attribute({name:t,replaceInvalidCharsInName:r.replaceInvalidChars});Js((0,w.stringify)(e),n,r)}function Xs(t,e,E,r){if(t===r.aliasString){E.name=(0,w.stringify)(e);return}if(t.indexOf(r.attributeString)===0&&(0,w.isObject)(e)){for(var n=0,T=Object.keys(e);n<T.length;n++){var s=T[n],o=e[s],i=QE(o,r);!(0,w.isUndefined)(i)&&(o=i(o),i(e)===qE.instance)||TS(s,o,E,r)}return}if(t.indexOf(r.valueString)===0){jE(t,e,E,r);return}var R=E;if(!(0,w.isArray)(e)&&!(0,w.isSet)(e)){var i=QE(e,r);if(!(0,w.isUndefined)(i)&&i(e)===qE.instance)return;R=E.element({name:t,replaceInvalidCharsInName:r.replaceInvalidChars,useSelfClosingTagIfEmpty:r.useSelfClosingTagIfEmpty})}jE(t,e,R,r)}function sS(t,e,E){if((0,w.isMap)(t))t.forEach(function(s,o){Xs((0,w.stringify)(o),s,e,E)});else for(var r=0,n=Object.keys(t);r<n.length;r++){var T=n[r];Xs(T,t[T],e,E)}}function iS(t,e,E,r){var n;Object.prototype.hasOwnProperty.call(r.wrapHandlers,"*")&&(n=r.wrapHandlers["*"]),Object.prototype.hasOwnProperty.call(r.wrapHandlers,t)&&(n=r.wrapHandlers[t]);var T=t,s=E;if(!(0,w.isUndefined)(n)){var o=n(T,e);(0,w.isNull)(o)||(T=o,s=E.element({name:t,replaceInvalidCharsInName:r.replaceInvalidChars,useSelfClosingTagIfEmpty:r.useSelfClosingTagIfEmpty}))}e.forEach(function(i){var R=s;if(!(0,w.isArray)(i)&&!(0,w.isSet)(i)){var A=QE(i,r);if(!(0,w.isUndefined)(A)&&A(i)===qE.instance)return;R=s.element({name:T,replaceInvalidCharsInName:r.replaceInvalidChars,useSelfClosingTagIfEmpty:r.useSelfClosingTagIfEmpty})}jE(T,i,R,r)})}function jE(t,e,E,r){var n=QE(e,r);if((0,w.isUndefined)(n)||(e=n(e)),(0,w.isObject)(e)||(0,w.isMap)(e)){sS(e,E,r);return}if((0,w.isArray)(e)||(0,w.isSet)(e)){iS(t,e,E,r);return}Js((0,w.stringify)(e),E,r)}function $s(t,e,E){var r=new Ks.Options(E);jE(t.name,e,t,r)}je.parseToExistingElement=$s;function oS(t,e,E){var r=new Ks.Options(E),n=new xs.XmlDocument({validation:r.validation});r.declaration.include&&n.decl(r.declaration),r.dtd.include&&n.dtd({name:r.dtd.name,pubId:r.dtd.pubId,sysId:r.dtd.sysId});var T=n.element({name:t,replaceInvalidCharsInName:r.replaceInvalidChars,useSelfClosingTagIfEmpty:r.useSelfClosingTagIfEmpty});return $s(T,e,E),n.toString(r.format)}je.parse=oS});var yi=C((Gi,hr)=>{"use strict";(function(t,e){typeof hr=="object"&&hr.exports?hr.exports=e():t.nearley=e()})(Gi,function(){function t(i,R,A){return this.id=++t.highestId,this.name=i,this.symbols=R,this.postprocess=A,this}t.highestId=0,t.prototype.toString=function(i){var R=typeof i>"u"?this.symbols.map(o).join(" "):this.symbols.slice(0,i).map(o).join(" ")+" \u25CF "+this.symbols.slice(i).map(o).join(" ");return this.name+" \u2192 "+R};function e(i,R,A,a){this.rule=i,this.dot=R,this.reference=A,this.data=[],this.wantedBy=a,this.isComplete=this.dot===i.symbols.length}e.prototype.toString=function(){return"{"+this.rule.toString(this.dot)+"}, from: "+(this.reference||0)},e.prototype.nextState=function(i){var R=new e(this.rule,this.dot+1,this.reference,this.wantedBy);return R.left=this,R.right=i,R.isComplete&&(R.data=R.build(),R.right=void 0),R},e.prototype.build=function(){var i=[],R=this;do i.push(R.right.data),R=R.left;while(R.left);return i.reverse(),i},e.prototype.finish=function(){this.rule.postprocess&&(this.data=this.rule.postprocess(this.data,this.reference,T.fail))};function E(i,R){this.grammar=i,this.index=R,this.states=[],this.wants={},this.scannable=[],this.completed={}}E.prototype.process=function(i){for(var R=this.states,A=this.wants,a=this.completed,O=0;O<R.length;O++){var I=R[O];if(I.isComplete){if(I.finish(),I.data!==T.fail){for(var _=I.wantedBy,N=_.length;N--;){var l=_[N];this.complete(l,I)}if(I.reference===this.index){var u=I.rule.name;(this.completed[u]=this.completed[u]||[]).push(I)}}}else{var u=I.rule.symbols[I.dot];if(typeof u!="string"){this.scannable.push(I);continue}if(A[u]){if(A[u].push(I),a.hasOwnProperty(u))for(var d=a[u],N=0;N<d.length;N++){var p=d[N];this.complete(I,p)}}else A[u]=[I],this.predict(u)}}},E.prototype.predict=function(i){for(var R=this.grammar.byName[i]||[],A=0;A<R.length;A++){var a=R[A],O=this.wants[i],I=new e(a,0,this.index,O);this.states.push(I)}},E.prototype.complete=function(i,R){var A=i.nextState(R);this.states.push(A)};function r(i,R){this.rules=i,this.start=R||this.rules[0].name;var A=this.byName={};this.rules.forEach(function(a){A.hasOwnProperty(a.name)||(A[a.name]=[]),A[a.name].push(a)})}r.fromCompiled=function(a,R){var A=a.Lexer;a.ParserStart&&(R=a.ParserStart,a=a.ParserRules);var a=a.map(function(I){return new t(I.name,I.symbols,I.postprocess)}),O=new r(a,R);return O.lexer=A,O};function n(){this.reset("")}n.prototype.reset=function(i,R){this.buffer=i,this.index=0,this.line=R?R.line:1,this.lastLineBreak=R?-R.col:0},n.prototype.next=function(){if(this.index<this.buffer.length){var i=this.buffer[this.index++];return i===`
`&&(this.line+=1,this.lastLineBreak=this.index),{value:i}}},n.prototype.save=function(){return{line:this.line,col:this.index-this.lastLineBreak}},n.prototype.formatError=function(i,R){var A=this.buffer;if(typeof A=="string"){var a=A.split(`
`).slice(Math.max(0,this.line-5),this.line),O=A.indexOf(`
`,this.index);O===-1&&(O=A.length);var I=this.index-this.lastLineBreak,_=String(this.line).length;return R+=" at line "+this.line+" col "+I+`:

`,R+=a.map(function(l,u){return N(this.line-a.length+u+1,_)+" "+l},this).join(`
`),R+=`
`+N("",_+I)+`^
`,R}else return R+" at index "+(this.index-1);function N(l,u){var d=String(l);return Array(u-d.length+1).join(" ")+d}};function T(i,R,A){if(i instanceof r)var a=i,A=R;else var a=r.fromCompiled(i,R);this.grammar=a,this.options={keepHistory:!1,lexer:a.lexer||new n};for(var O in A||{})this.options[O]=A[O];this.lexer=this.options.lexer,this.lexerState=void 0;var I=new E(a,0),_=this.table=[I];I.wants[a.start]=[],I.predict(a.start),I.process(),this.current=0}T.fail={},T.prototype.feed=function(i){var R=this.lexer;R.reset(i,this.lexerState);for(var A;;){try{if(A=R.next(),!A)break}catch(g){var _=new E(this.grammar,this.current+1);this.table.push(_);var a=new Error(this.reportLexerError(g));throw a.offset=this.current,a.token=g.token,a}var O=this.table[this.current];this.options.keepHistory||delete this.table[this.current-1];var I=this.current+1,_=new E(this.grammar,I);this.table.push(_);for(var N=A.text!==void 0?A.text:A.value,l=R.constructor===n?A.value:A,u=O.scannable,d=u.length;d--;){var p=u[d],m=p.rule.symbols[p.dot];if(m.test?m.test(l):m.type?m.type===A.type:m.literal===N){var H=p.nextState({data:l,token:A,isToken:!0,reference:I-1});_.states.push(H)}}if(_.process(),_.states.length===0){var a=new Error(this.reportError(A));throw a.offset=this.current,a.token=A,a}this.options.keepHistory&&(O.lexerState=R.save()),this.current++}return O&&(this.lexerState=R.save()),this.results=this.finish(),this},T.prototype.reportLexerError=function(i){var R,A,a=i.token;return a?(R="input "+JSON.stringify(a.text[0])+" (lexer error)",A=this.lexer.formatError(a,"Syntax error")):(R="input (lexer error)",A=i.message),this.reportErrorCommon(A,R)},T.prototype.reportError=function(i){var R=(i.type?i.type+" token: ":"")+JSON.stringify(i.value!==void 0?i.value:i),A=this.lexer.formatError(i,"Syntax error");return this.reportErrorCommon(A,R)},T.prototype.reportErrorCommon=function(i,R){var A=[];A.push(i);var a=this.table.length-2,O=this.table[a],I=O.states.filter(function(N){var l=N.rule.symbols[N.dot];return l&&typeof l!="string"});if(I.length===0)A.push("Unexpected "+R+`. I did not expect any more input. Here is the state of my parse table:
`),this.displayStateStack(O.states,A);else{A.push("Unexpected "+R+`. Instead, I was expecting to see one of the following:
`);var _=I.map(function(N){return this.buildFirstStateStack(N,[])||[N]},this);_.forEach(function(N){var l=N[0],u=l.rule.symbols[l.dot],d=this.getSymbolDisplay(u);A.push("A "+d+" based on:"),this.displayStateStack(N,A)},this)}return A.push(""),A.join(`
`)},T.prototype.displayStateStack=function(i,R){for(var A,a=0,O=0;O<i.length;O++){var I=i[O],_=I.rule.toString(I.dot);_===A?a++:(a>0&&R.push("    ^ "+a+" more lines identical to this"),a=0,R.push("    "+_)),A=_}},T.prototype.getSymbolDisplay=function(i){return s(i)},T.prototype.buildFirstStateStack=function(i,R){if(R.indexOf(i)!==-1)return null;if(i.wantedBy.length===0)return[i];var A=i.wantedBy[0],a=[i].concat(R),O=this.buildFirstStateStack(A,a);return O===null?null:[i].concat(O)},T.prototype.save=function(){var i=this.table[this.current];return i.lexerState=this.lexerState,i},T.prototype.restore=function(i){var R=i.index;this.current=R,this.table[R]=i,this.table.splice(R+1),this.lexerState=i.lexerState,this.results=this.finish()},T.prototype.rewind=function(i){if(!this.options.keepHistory)throw new Error("set option `keepHistory` to enable rewinding");this.restore(this.table[i])},T.prototype.finish=function(){var i=[],R=this.grammar.start,A=this.table[this.table.length-1];return A.states.forEach(function(a){a.rule.name===R&&a.dot===a.rule.symbols.length&&a.reference===0&&a.data!==T.fail&&i.push(a)}),i.map(function(a){return a.data})};function s(i){var R=typeof i;if(R==="string")return i;if(R==="object"){if(i.literal)return JSON.stringify(i.literal);if(i instanceof RegExp)return"character matching "+i;if(i.type)return i.type+" token";if(i.test)return"token matching "+String(i.test);throw new Error("Unknown symbol type: "+i)}}function o(i){var R=typeof i;if(R==="string")return i;if(R==="object"){if(i.literal)return JSON.stringify(i.literal);if(i instanceof RegExp)return i.toString();if(i.type)return"%"+i.type;if(i.test)return"<"+String(i.test)+">";throw new Error("Unknown symbol type: "+i)}}return{Parser:T,Grammar:r,Rule:t}})});var GT=C(nt=>{"use strict";Object.defineProperty(nt,"__esModule",{value:!0});nt.FORMAT_PLAIN=nt.FORMAT_HTML=nt.FORMATS=void 0;var yo="html";nt.FORMAT_HTML=yo;var Bo="plain";nt.FORMAT_PLAIN=Bo;var Jl=[yo,Bo];nt.FORMATS=Jl});var wo=C(Te=>{"use strict";Object.defineProperty(Te,"__esModule",{value:!0});Te.UNIT_WORDS=Te.UNIT_WORD=Te.UNIT_SENTENCES=Te.UNIT_SENTENCE=Te.UNIT_PARAGRAPHS=Te.UNIT_PARAGRAPH=Te.UNITS=void 0;var Fo="words";Te.UNIT_WORDS=Fo;var Ho="word";Te.UNIT_WORD=Ho;var Yo="sentences";Te.UNIT_SENTENCES=Yo;var bo="sentence";Te.UNIT_SENTENCE=bo;var vo="paragraphs";Te.UNIT_PARAGRAPHS=vo;var Vo="paragraph";Te.UNIT_PARAGRAPH=Vo;var $l=[Fo,Ho,Yo,bo,vo,Vo];Te.UNITS=$l});var yT=C(Gr=>{"use strict";Object.defineProperty(Gr,"__esModule",{value:!0});Gr.WORDS=void 0;var kl=["ad","adipisicing","aliqua","aliquip","amet","anim","aute","cillum","commodo","consectetur","consequat","culpa","cupidatat","deserunt","do","dolor","dolore","duis","ea","eiusmod","elit","enim","esse","est","et","eu","ex","excepteur","exercitation","fugiat","id","in","incididunt","ipsum","irure","labore","laboris","laborum","Lorem","magna","minim","mollit","nisi","non","nostrud","nulla","occaecat","officia","pariatur","proident","qui","quis","reprehenderit","sint","sit","sunt","tempor","ullamco","ut","velit","veniam","voluptate"];Gr.WORDS=kl});var Wo=C(yr=>{"use strict";Object.defineProperty(yr,"__esModule",{value:!0});yr.LINE_ENDINGS=void 0;var ql={POSIX:`
`,WIN32:`\r
`};yr.LINE_ENDINGS=ql});var Xo=C(Br=>{"use strict";Object.defineProperty(Br,"__esModule",{value:!0});Br.default=void 0;var Ql=function(e){var E=e.trim();return E.charAt(0).toUpperCase()+E.slice(1)},jl=Ql;Br.default=jl});var xo=C((Fr,BT)=>{"use strict";Object.defineProperty(Fr,"__esModule",{value:!0});Fr.default=void 0;var Zl=function(){return typeof BT<"u"&&!!BT.exports},zl=Zl;Fr.default=zl});var Ko=C(Hr=>{"use strict";Object.defineProperty(Hr,"__esModule",{value:!0});Hr.default=void 0;var eC=function(){var e=!1;try{e=navigator.product==="ReactNative"}catch{e=!1}return e},tC=eC;Hr.default=tC});var Jo=C(Yr=>{"use strict";Object.defineProperty(Yr,"__esModule",{value:!0});Yr.SUPPORTED_PLATFORMS=void 0;var EC={DARWIN:"darwin",LINUX:"linux",WIN32:"win32"};Yr.SUPPORTED_PLATFORMS=EC});var $o=C(br=>{"use strict";Object.defineProperty(br,"__esModule",{value:!0});br.default=void 0;var rC=Jo(),nC=function(){var e=!1;try{e=process.platform===rC.SUPPORTED_PLATFORMS.WIN32}catch{e=!1}return e},TC=nC;br.default=TC});var FT=C(vr=>{"use strict";Object.defineProperty(vr,"__esModule",{value:!0});vr.default=void 0;var sC=function(){var e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0;return Array.apply(null,Array(e)).map(function(E,r){return r})},iC=sC;vr.default=iC});var ko=C(Vr=>{"use strict";Object.defineProperty(Vr,"__esModule",{value:!0});Vr.default=void 0;var oC=RC(FT());function RC(t){return t&&t.__esModule?t:{default:t}}var AC=function(e,E){var r=(0,oC.default)(e);return r.map(function(){return E()})},aC=AC;Vr.default=aC});var HT=C(Tt=>{"use strict";Object.defineProperty(Tt,"__esModule",{value:!0});Object.defineProperty(Tt,"capitalize",{enumerable:!0,get:function(){return SC.default}});Object.defineProperty(Tt,"isNode",{enumerable:!0,get:function(){return OC.default}});Object.defineProperty(Tt,"isReactNative",{enumerable:!0,get:function(){return IC.default}});Object.defineProperty(Tt,"isWindows",{enumerable:!0,get:function(){return NC.default}});Object.defineProperty(Tt,"makeArrayOfLength",{enumerable:!0,get:function(){return lC.default}});Object.defineProperty(Tt,"makeArrayOfStrings",{enumerable:!0,get:function(){return CC.default}});var SC=wt(Xo()),OC=wt(xo()),IC=wt(Ko()),NC=wt($o()),lC=wt(FT()),CC=wt(ko());function wt(t){return t&&t.__esModule?t:{default:t}}});var Qo=C(Wr=>{"use strict";Object.defineProperty(Wr,"__esModule",{value:!0});Wr.default=void 0;var _C=yT(),YT=HT();function LC(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function qo(t,e){for(var E=0;E<e.length;E++){var r=e[E];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function cC(t,e,E){return e&&qo(t.prototype,e),E&&qo(t,E),Object.defineProperty(t,"prototype",{writable:!1}),t}function wr(t,e,E){return e in t?Object.defineProperty(t,e,{value:E,enumerable:!0,configurable:!0,writable:!0}):t[e]=E,t}var uC=function(){function t(){var e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},E=e.sentencesPerParagraph,r=E===void 0?{max:7,min:3}:E,n=e.wordsPerSentence,T=n===void 0?{max:15,min:5}:n,s=e.random,o=e.seed,i=e.words,R=i===void 0?_C.WORDS:i;if(LC(this,t),wr(this,"sentencesPerParagraph",void 0),wr(this,"wordsPerSentence",void 0),wr(this,"random",void 0),wr(this,"words",void 0),r.min>r.max)throw new Error("Minimum number of sentences per paragraph (".concat(r.min,") cannot exceed maximum (").concat(r.max,")."));if(T.min>T.max)throw new Error("Minimum number of words per sentence (".concat(T.min,") cannot exceed maximum (").concat(T.max,")."));this.sentencesPerParagraph=r,this.words=R,this.wordsPerSentence=T,this.random=s||Math.random}return cC(t,[{key:"generateRandomInteger",value:function(E,r){return Math.floor(this.random()*(r-E+1)+E)}},{key:"generateRandomWords",value:function(E){var r=this,n=this.wordsPerSentence,T=n.min,s=n.max,o=E||this.generateRandomInteger(T,s);return(0,YT.makeArrayOfLength)(o).reduce(function(i,R){return"".concat(r.pluckRandomWord()," ").concat(i)},"").trim()}},{key:"generateRandomSentence",value:function(E){return"".concat((0,YT.capitalize)(this.generateRandomWords(E)),".")}},{key:"generateRandomParagraph",value:function(E){var r=this,n=this.sentencesPerParagraph,T=n.min,s=n.max,o=E||this.generateRandomInteger(T,s);return(0,YT.makeArrayOfLength)(o).reduce(function(i,R){return"".concat(r.generateRandomSentence()," ").concat(i)},"").trim()}},{key:"pluckRandomWord",value:function(){var E=0,r=this.words.length-1,n=this.generateRandomInteger(E,r);return this.words[n]}}]),t}(),fC=uC;Wr.default=fC});var zo=C(Kr=>{"use strict";Object.defineProperty(Kr,"__esModule",{value:!0});Kr.default=void 0;var Xr=GT(),jo=Wo(),dC=PC(Qo()),xr=HT();function PC(t){return t&&t.__esModule?t:{default:t}}function DC(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Zo(t,e){for(var E=0;E<e.length;E++){var r=e[E];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function pC(t,e,E){return e&&Zo(t.prototype,e),E&&Zo(t,E),Object.defineProperty(t,"prototype",{writable:!1}),t}function hC(t,e,E){return e in t?Object.defineProperty(t,e,{value:E,enumerable:!0,configurable:!0,writable:!0}):t[e]=E,t}var MC=function(){function t(){var e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},E=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Xr.FORMAT_PLAIN,r=arguments.length>2?arguments[2]:void 0;if(DC(this,t),this.format=E,this.suffix=r,hC(this,"generator",void 0),Xr.FORMATS.indexOf(E.toLowerCase())===-1)throw new Error("".concat(E," is an invalid format. Please use ").concat(Xr.FORMATS.join(" or "),"."));this.generator=new dC.default(e)}return pC(t,[{key:"getLineEnding",value:function(){return this.suffix?this.suffix:!(0,xr.isReactNative)()&&(0,xr.isNode)()&&(0,xr.isWindows)()?jo.LINE_ENDINGS.WIN32:jo.LINE_ENDINGS.POSIX}},{key:"formatString",value:function(E){return this.format===Xr.FORMAT_HTML?"<p>".concat(E,"</p>"):E}},{key:"formatStrings",value:function(E){var r=this;return E.map(function(n){return r.formatString(n)})}},{key:"generateWords",value:function(E){return this.formatString(this.generator.generateRandomWords(E))}},{key:"generateSentences",value:function(E){return this.formatString(this.generator.generateRandomParagraph(E))}},{key:"generateParagraphs",value:function(E){var r=this.generator.generateRandomParagraph.bind(this.generator);return this.formatStrings((0,xr.makeArrayOfStrings)(E,r)).join(this.getLineEnding())}}]),t}(),mC=MC;Kr.default=mC});var tR=C(_E=>{"use strict";Object.defineProperty(_E,"__esModule",{value:!0});Object.defineProperty(_E,"LoremIpsum",{enumerable:!0,get:function(){return eR.default}});_E.loremIpsum=void 0;var UC=GT(),dt=wo(),gC=yT(),eR=GC(zo());function GC(t){return t&&t.__esModule?t:{default:t}}var yC=function(){var e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},E=e.count,r=E===void 0?1:E,n=e.format,T=n===void 0?UC.FORMAT_PLAIN:n,s=e.paragraphLowerBound,o=s===void 0?3:s,i=e.paragraphUpperBound,R=i===void 0?7:i,A=e.random,a=e.sentenceLowerBound,O=a===void 0?5:a,I=e.sentenceUpperBound,_=I===void 0?15:I,N=e.units,l=N===void 0?dt.UNIT_SENTENCES:N,u=e.words,d=u===void 0?gC.WORDS:u,p=e.suffix,m=p===void 0?"":p,H={random:A,sentencesPerParagraph:{max:R,min:o},words:d,wordsPerSentence:{max:_,min:O}},g=new eR.default(H,T,m);switch(l){case dt.UNIT_PARAGRAPHS:case dt.UNIT_PARAGRAPH:return g.generateParagraphs(r);case dt.UNIT_SENTENCES:case dt.UNIT_SENTENCE:return g.generateSentences(r);case dt.UNIT_WORDS:case dt.UNIT_WORD:return g.generateWords(r);default:return""}};_E.loremIpsum=yC});var TR=C((Pp,nR)=>{"use strict";nR.exports=function(){return typeof Promise=="function"&&Promise.prototype&&Promise.prototype.then}});var st=C(Pt=>{"use strict";var bT,HC=[0,26,44,70,100,134,172,196,242,292,346,404,466,532,581,655,733,815,901,991,1085,1156,1258,1364,1474,1588,1706,1828,1921,2051,2185,2323,2465,2611,2761,2876,3034,3196,3362,3532,3706];Pt.getSymbolSize=function(e){if(!e)throw new Error('"version" cannot be null or undefined');if(e<1||e>40)throw new Error('"version" should be in range from 1 to 40');return e*4+17};Pt.getSymbolTotalCodewords=function(e){return HC[e]};Pt.getBCHDigit=function(t){let e=0;for(;t!==0;)e++,t>>>=1;return e};Pt.setToSJISFunction=function(e){if(typeof e!="function")throw new Error('"toSJISFunc" is not a valid function.');bT=e};Pt.isKanjiModeEnabled=function(){return typeof bT<"u"};Pt.toSJIS=function(e){return bT(e)}});var Jr=C(pe=>{"use strict";pe.L={bit:1};pe.M={bit:0};pe.Q={bit:3};pe.H={bit:2};function YC(t){if(typeof t!="string")throw new Error("Param is not a string");switch(t.toLowerCase()){case"l":case"low":return pe.L;case"m":case"medium":return pe.M;case"q":case"quartile":return pe.Q;case"h":case"high":return pe.H;default:throw new Error("Unknown EC Level: "+t)}}pe.isValid=function(e){return e&&typeof e.bit<"u"&&e.bit>=0&&e.bit<4};pe.from=function(e,E){if(pe.isValid(e))return e;try{return YC(e)}catch{return E}}});var oR=C((hp,iR)=>{"use strict";function sR(){this.buffer=[],this.length=0}sR.prototype={get:function(t){let e=Math.floor(t/8);return(this.buffer[e]>>>7-t%8&1)===1},put:function(t,e){for(let E=0;E<e;E++)this.putBit((t>>>e-E-1&1)===1)},getLengthInBits:function(){return this.length},putBit:function(t){let e=Math.floor(this.length/8);this.buffer.length<=e&&this.buffer.push(0),t&&(this.buffer[e]|=128>>>this.length%8),this.length++}};iR.exports=sR});var AR=C((Mp,RR)=>{"use strict";function LE(t){if(!t||t<1)throw new Error("BitMatrix size must be defined and greater than 0");this.size=t,this.data=new Uint8Array(t*t),this.reservedBit=new Uint8Array(t*t)}LE.prototype.set=function(t,e,E,r){let n=t*this.size+e;this.data[n]=E,r&&(this.reservedBit[n]=!0)};LE.prototype.get=function(t,e){return this.data[t*this.size+e]};LE.prototype.xor=function(t,e,E){this.data[t*this.size+e]^=E};LE.prototype.isReserved=function(t,e){return this.reservedBit[t*this.size+e]};RR.exports=LE});var aR=C($r=>{"use strict";var bC=st().getSymbolSize;$r.getRowColCoords=function(e){if(e===1)return[];let E=Math.floor(e/7)+2,r=bC(e),n=r===145?26:Math.ceil((r-13)/(2*E-2))*2,T=[r-7];for(let s=1;s<E-1;s++)T[s]=T[s-1]-n;return T.push(6),T.reverse()};$r.getPositions=function(e){let E=[],r=$r.getRowColCoords(e),n=r.length;for(let T=0;T<n;T++)for(let s=0;s<n;s++)T===0&&s===0||T===0&&s===n-1||T===n-1&&s===0||E.push([r[T],r[s]]);return E}});var NR=C(IR=>{"use strict";var vC=st().getSymbolSize,SR=7;IR.getPositions=function(e){let E=vC(e);return[[0,0],[E-SR,0],[0,E-SR]]}});var lR=C(v=>{"use strict";v.Patterns={PATTERN000:0,PATTERN001:1,PATTERN010:2,PATTERN011:3,PATTERN100:4,PATTERN101:5,PATTERN110:6,PATTERN111:7};var Dt={N1:3,N2:3,N3:40,N4:10};v.isValid=function(e){return e!=null&&e!==""&&!isNaN(e)&&e>=0&&e<=7};v.from=function(e){return v.isValid(e)?parseInt(e,10):void 0};v.getPenaltyN1=function(e){let E=e.size,r=0,n=0,T=0,s=null,o=null;for(let i=0;i<E;i++){n=T=0,s=o=null;for(let R=0;R<E;R++){let A=e.get(i,R);A===s?n++:(n>=5&&(r+=Dt.N1+(n-5)),s=A,n=1),A=e.get(R,i),A===o?T++:(T>=5&&(r+=Dt.N1+(T-5)),o=A,T=1)}n>=5&&(r+=Dt.N1+(n-5)),T>=5&&(r+=Dt.N1+(T-5))}return r};v.getPenaltyN2=function(e){let E=e.size,r=0;for(let n=0;n<E-1;n++)for(let T=0;T<E-1;T++){let s=e.get(n,T)+e.get(n,T+1)+e.get(n+1,T)+e.get(n+1,T+1);(s===4||s===0)&&r++}return r*Dt.N2};v.getPenaltyN3=function(e){let E=e.size,r=0,n=0,T=0;for(let s=0;s<E;s++){n=T=0;for(let o=0;o<E;o++)n=n<<1&2047|e.get(s,o),o>=10&&(n===1488||n===93)&&r++,T=T<<1&2047|e.get(o,s),o>=10&&(T===1488||T===93)&&r++}return r*Dt.N3};v.getPenaltyN4=function(e){let E=0,r=e.data.length;for(let T=0;T<r;T++)E+=e.data[T];return Math.abs(Math.ceil(E*100/r/5)-10)*Dt.N4};function VC(t,e,E){switch(t){case v.Patterns.PATTERN000:return(e+E)%2===0;case v.Patterns.PATTERN001:return e%2===0;case v.Patterns.PATTERN010:return E%3===0;case v.Patterns.PATTERN011:return(e+E)%3===0;case v.Patterns.PATTERN100:return(Math.floor(e/2)+Math.floor(E/3))%2===0;case v.Patterns.PATTERN101:return e*E%2+e*E%3===0;case v.Patterns.PATTERN110:return(e*E%2+e*E%3)%2===0;case v.Patterns.PATTERN111:return(e*E%3+(e+E)%2)%2===0;default:throw new Error("bad maskPattern:"+t)}}v.applyMask=function(e,E){let r=E.size;for(let n=0;n<r;n++)for(let T=0;T<r;T++)E.isReserved(T,n)||E.xor(T,n,VC(e,T,n))};v.getBestMask=function(e,E){let r=Object.keys(v.Patterns).length,n=0,T=1/0;for(let s=0;s<r;s++){E(s),v.applyMask(s,e);let o=v.getPenaltyN1(e)+v.getPenaltyN2(e)+v.getPenaltyN3(e)+v.getPenaltyN4(e);v.applyMask(s,e),o<T&&(T=o,n=s)}return n}});var VT=C(vT=>{"use strict";var it=Jr(),kr=[1,1,1,1,1,1,1,1,1,1,2,2,1,2,2,4,1,2,4,4,2,4,4,4,2,4,6,5,2,4,6,6,2,5,8,8,4,5,8,8,4,5,8,11,4,8,10,11,4,9,12,16,4,9,16,16,6,10,12,18,6,10,17,16,6,11,16,19,6,13,18,21,7,14,21,25,8,16,20,25,8,17,23,25,9,17,23,34,9,18,25,30,10,20,27,32,12,21,29,35,12,23,34,37,12,25,34,40,13,26,35,42,14,28,38,45,15,29,40,48,16,31,43,51,17,33,45,54,18,35,48,57,19,37,51,60,19,38,53,63,20,40,56,66,21,43,59,70,22,45,62,74,24,47,65,77,25,49,68,81],qr=[7,10,13,17,10,16,22,28,15,26,36,44,20,36,52,64,26,48,72,88,36,64,96,112,40,72,108,130,48,88,132,156,60,110,160,192,72,130,192,224,80,150,224,264,96,176,260,308,104,198,288,352,120,216,320,384,132,240,360,432,144,280,408,480,168,308,448,532,180,338,504,588,196,364,546,650,224,416,600,700,224,442,644,750,252,476,690,816,270,504,750,900,300,560,810,960,312,588,870,1050,336,644,952,1110,360,700,1020,1200,390,728,1050,1260,420,784,1140,1350,450,812,1200,1440,480,868,1290,1530,510,924,1350,1620,540,980,1440,1710,570,1036,1530,1800,570,1064,1590,1890,600,1120,1680,1980,630,1204,1770,2100,660,1260,1860,2220,720,1316,1950,2310,750,1372,2040,2430];vT.getBlocksCount=function(e,E){switch(E){case it.L:return kr[(e-1)*4+0];case it.M:return kr[(e-1)*4+1];case it.Q:return kr[(e-1)*4+2];case it.H:return kr[(e-1)*4+3];default:return}};vT.getTotalCodewordsCount=function(e,E){switch(E){case it.L:return qr[(e-1)*4+0];case it.M:return qr[(e-1)*4+1];case it.Q:return qr[(e-1)*4+2];case it.H:return qr[(e-1)*4+3];default:return}}});var CR=C(jr=>{"use strict";var cE=new Uint8Array(512),Qr=new Uint8Array(256);(function(){let e=1;for(let E=0;E<255;E++)cE[E]=e,Qr[e]=E,e<<=1,e&256&&(e^=285);for(let E=255;E<512;E++)cE[E]=cE[E-255]})();jr.log=function(e){if(e<1)throw new Error("log("+e+")");return Qr[e]};jr.exp=function(e){return cE[e]};jr.mul=function(e,E){return e===0||E===0?0:cE[Qr[e]+Qr[E]]}});var _R=C(uE=>{"use strict";var wT=CR();uE.mul=function(e,E){let r=new Uint8Array(e.length+E.length-1);for(let n=0;n<e.length;n++)for(let T=0;T<E.length;T++)r[n+T]^=wT.mul(e[n],E[T]);return r};uE.mod=function(e,E){let r=new Uint8Array(e);for(;r.length-E.length>=0;){let n=r[0];for(let s=0;s<E.length;s++)r[s]^=wT.mul(E[s],n);let T=0;for(;T<r.length&&r[T]===0;)T++;r=r.slice(T)}return r};uE.generateECPolynomial=function(e){let E=new Uint8Array([1]);for(let r=0;r<e;r++)E=uE.mul(E,new Uint8Array([1,wT.exp(r)]));return E}});var uR=C((Fp,cR)=>{"use strict";var LR=_R();function WT(t){this.genPoly=void 0,this.degree=t,this.degree&&this.initialize(this.degree)}WT.prototype.initialize=function(e){this.degree=e,this.genPoly=LR.generateECPolynomial(this.degree)};WT.prototype.encode=function(e){if(!this.genPoly)throw new Error("Encoder not initialized");let E=new Uint8Array(e.length+this.degree);E.set(e);let r=LR.mod(E,this.genPoly),n=this.degree-r.length;if(n>0){let T=new Uint8Array(this.degree);return T.set(r,n),T}return r};cR.exports=WT});var XT=C(fR=>{"use strict";fR.isValid=function(e){return!isNaN(e)&&e>=1&&e<=40}});var xT=C(Xe=>{"use strict";var dR="[0-9]+",wC="[A-Z $%*+\\-./:]+",fE="(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+";fE=fE.replace(/u/g,"\\u");var WC="(?:(?![A-Z0-9 $%*+\\-./:]|"+fE+`)(?:.|[\r
]))+`;Xe.KANJI=new RegExp(fE,"g");Xe.BYTE_KANJI=new RegExp("[^A-Z0-9 $%*+\\-./:]+","g");Xe.BYTE=new RegExp(WC,"g");Xe.NUMERIC=new RegExp(dR,"g");Xe.ALPHANUMERIC=new RegExp(wC,"g");var XC=new RegExp("^"+fE+"$"),xC=new RegExp("^"+dR+"$"),KC=new RegExp("^[A-Z0-9 $%*+\\-./:]+$");Xe.testKanji=function(e){return XC.test(e)};Xe.testNumeric=function(e){return xC.test(e)};Xe.testAlphanumeric=function(e){return KC.test(e)}});var ot=C(W=>{"use strict";var JC=XT(),KT=xT();W.NUMERIC={id:"Numeric",bit:1,ccBits:[10,12,14]};W.ALPHANUMERIC={id:"Alphanumeric",bit:2,ccBits:[9,11,13]};W.BYTE={id:"Byte",bit:4,ccBits:[8,16,16]};W.KANJI={id:"Kanji",bit:8,ccBits:[8,10,12]};W.MIXED={bit:-1};W.getCharCountIndicator=function(e,E){if(!e.ccBits)throw new Error("Invalid mode: "+e);if(!JC.isValid(E))throw new Error("Invalid version: "+E);return E>=1&&E<10?e.ccBits[0]:E<27?e.ccBits[1]:e.ccBits[2]};W.getBestModeForData=function(e){return KT.testNumeric(e)?W.NUMERIC:KT.testAlphanumeric(e)?W.ALPHANUMERIC:KT.testKanji(e)?W.KANJI:W.BYTE};W.toString=function(e){if(e&&e.id)return e.id;throw new Error("Invalid mode")};W.isValid=function(e){return e&&e.bit&&e.ccBits};function $C(t){if(typeof t!="string")throw new Error("Param is not a string");switch(t.toLowerCase()){case"numeric":return W.NUMERIC;case"alphanumeric":return W.ALPHANUMERIC;case"kanji":return W.KANJI;case"byte":return W.BYTE;default:throw new Error("Unknown mode: "+t)}}W.from=function(e,E){if(W.isValid(e))return e;try{return $C(e)}catch{return E}}});var MR=C(pt=>{"use strict";var Zr=st(),kC=VT(),PR=Jr(),Rt=ot(),JT=XT(),pR=7973,DR=Zr.getBCHDigit(pR);function qC(t,e,E){for(let r=1;r<=40;r++)if(e<=pt.getCapacity(r,E,t))return r}function hR(t,e){return Rt.getCharCountIndicator(t,e)+4}function QC(t,e){let E=0;return t.forEach(function(r){let n=hR(r.mode,e);E+=n+r.getBitsLength()}),E}function jC(t,e){for(let E=1;E<=40;E++)if(QC(t,E)<=pt.getCapacity(E,e,Rt.MIXED))return E}pt.from=function(e,E){return JT.isValid(e)?parseInt(e,10):E};pt.getCapacity=function(e,E,r){if(!JT.isValid(e))throw new Error("Invalid QR Code version");typeof r>"u"&&(r=Rt.BYTE);let n=Zr.getSymbolTotalCodewords(e),T=kC.getTotalCodewordsCount(e,E),s=(n-T)*8;if(r===Rt.MIXED)return s;let o=s-hR(r,e);switch(r){case Rt.NUMERIC:return Math.floor(o/10*3);case Rt.ALPHANUMERIC:return Math.floor(o/11*2);case Rt.KANJI:return Math.floor(o/13);case Rt.BYTE:default:return Math.floor(o/8)}};pt.getBestVersionForData=function(e,E){let r,n=PR.from(E,PR.M);if(Array.isArray(e)){if(e.length>1)return jC(e,n);if(e.length===0)return 1;r=e[0]}else r=e;return qC(r.mode,r.getLength(),n)};pt.getEncodedBits=function(e){if(!JT.isValid(e)||e<7)throw new Error("Invalid QR Code version");let E=e<<12;for(;Zr.getBCHDigit(E)-DR>=0;)E^=pR<<Zr.getBCHDigit(E)-DR;return e<<12|E}});var GR=C(gR=>{"use strict";var $T=st(),UR=1335,ZC=21522,mR=$T.getBCHDigit(UR);gR.getEncodedBits=function(e,E){let r=e.bit<<3|E,n=r<<10;for(;$T.getBCHDigit(n)-mR>=0;)n^=UR<<$T.getBCHDigit(n)-mR;return(r<<10|n)^ZC}});var BR=C((wp,yR)=>{"use strict";var zC=ot();function Wt(t){this.mode=zC.NUMERIC,this.data=t.toString()}Wt.getBitsLength=function(e){return 10*Math.floor(e/3)+(e%3?e%3*3+1:0)};Wt.prototype.getLength=function(){return this.data.length};Wt.prototype.getBitsLength=function(){return Wt.getBitsLength(this.data.length)};Wt.prototype.write=function(e){let E,r,n;for(E=0;E+3<=this.data.length;E+=3)r=this.data.substr(E,3),n=parseInt(r,10),e.put(n,10);let T=this.data.length-E;T>0&&(r=this.data.substr(E),n=parseInt(r,10),e.put(n,T*3+1))};yR.exports=Wt});var HR=C((Wp,FR)=>{"use strict";var e_=ot(),kT=["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"," ","$","%","*","+","-",".","/",":"];function Xt(t){this.mode=e_.ALPHANUMERIC,this.data=t}Xt.getBitsLength=function(e){return 11*Math.floor(e/2)+6*(e%2)};Xt.prototype.getLength=function(){return this.data.length};Xt.prototype.getBitsLength=function(){return Xt.getBitsLength(this.data.length)};Xt.prototype.write=function(e){let E;for(E=0;E+2<=this.data.length;E+=2){let r=kT.indexOf(this.data[E])*45;r+=kT.indexOf(this.data[E+1]),e.put(r,11)}this.data.length%2&&e.put(kT.indexOf(this.data[E]),6)};FR.exports=Xt});var bR=C((Xp,YR)=>{"use strict";YR.exports=function(e){for(var E=[],r=e.length,n=0;n<r;n++){var T=e.charCodeAt(n);if(T>=55296&&T<=56319&&r>n+1){var s=e.charCodeAt(n+1);s>=56320&&s<=57343&&(T=(T-55296)*1024+s-56320+65536,n+=1)}if(T<128){E.push(T);continue}if(T<2048){E.push(T>>6|192),E.push(T&63|128);continue}if(T<55296||T>=57344&&T<65536){E.push(T>>12|224),E.push(T>>6&63|128),E.push(T&63|128);continue}if(T>=65536&&T<=1114111){E.push(T>>18|240),E.push(T>>12&63|128),E.push(T>>6&63|128),E.push(T&63|128);continue}E.push(239,191,189)}return new Uint8Array(E).buffer}});var VR=C((xp,vR)=>{"use strict";var t_=bR(),E_=ot();function xt(t){this.mode=E_.BYTE,typeof t=="string"&&(t=t_(t)),this.data=new Uint8Array(t)}xt.getBitsLength=function(e){return e*8};xt.prototype.getLength=function(){return this.data.length};xt.prototype.getBitsLength=function(){return xt.getBitsLength(this.data.length)};xt.prototype.write=function(t){for(let e=0,E=this.data.length;e<E;e++)t.put(this.data[e],8)};vR.exports=xt});var WR=C((Kp,wR)=>{"use strict";var r_=ot(),n_=st();function Kt(t){this.mode=r_.KANJI,this.data=t}Kt.getBitsLength=function(e){return e*13};Kt.prototype.getLength=function(){return this.data.length};Kt.prototype.getBitsLength=function(){return Kt.getBitsLength(this.data.length)};Kt.prototype.write=function(t){let e;for(e=0;e<this.data.length;e++){let E=n_.toSJIS(this.data[e]);if(E>=33088&&E<=40956)E-=33088;else if(E>=57408&&E<=60351)E-=49472;else throw new Error("Invalid SJIS character: "+this.data[e]+`
Make sure your charset is UTF-8`);E=(E>>>8&255)*192+(E&255),t.put(E,13)}};wR.exports=Kt});var XR=C((Jp,qT)=>{"use strict";var dE={single_source_shortest_paths:function(t,e,E){var r={},n={};n[e]=0;var T=dE.PriorityQueue.make();T.push(e,0);for(var s,o,i,R,A,a,O,I,_;!T.empty();){s=T.pop(),o=s.value,R=s.cost,A=t[o]||{};for(i in A)A.hasOwnProperty(i)&&(a=A[i],O=R+a,I=n[i],_=typeof n[i]>"u",(_||I>O)&&(n[i]=O,T.push(i,O),r[i]=o))}if(typeof E<"u"&&typeof n[E]>"u"){var N=["Could not find a path from ",e," to ",E,"."].join("");throw new Error(N)}return r},extract_shortest_path_from_predecessor_list:function(t,e){for(var E=[],r=e,n;r;)E.push(r),n=t[r],r=t[r];return E.reverse(),E},find_path:function(t,e,E){var r=dE.single_source_shortest_paths(t,e,E);return dE.extract_shortest_path_from_predecessor_list(r,E)},PriorityQueue:{make:function(t){var e=dE.PriorityQueue,E={},r;t=t||{};for(r in e)e.hasOwnProperty(r)&&(E[r]=e[r]);return E.queue=[],E.sorter=t.sorter||e.default_sorter,E},default_sorter:function(t,e){return t.cost-e.cost},push:function(t,e){var E={value:t,cost:e};this.queue.push(E),this.queue.sort(this.sorter)},pop:function(){return this.queue.shift()},empty:function(){return this.queue.length===0}}};typeof qT<"u"&&(qT.exports=dE)});var jR=C(Jt=>{"use strict";var y=ot(),JR=BR(),$R=HR(),kR=VR(),qR=WR(),PE=xT(),zr=st(),T_=XR();function xR(t){return unescape(encodeURIComponent(t)).length}function DE(t,e,E){let r=[],n;for(;(n=t.exec(E))!==null;)r.push({data:n[0],index:n.index,mode:e,length:n[0].length});return r}function QR(t){let e=DE(PE.NUMERIC,y.NUMERIC,t),E=DE(PE.ALPHANUMERIC,y.ALPHANUMERIC,t),r,n;return zr.isKanjiModeEnabled()?(r=DE(PE.BYTE,y.BYTE,t),n=DE(PE.KANJI,y.KANJI,t)):(r=DE(PE.BYTE_KANJI,y.BYTE,t),n=[]),e.concat(E,r,n).sort(function(s,o){return s.index-o.index}).map(function(s){return{data:s.data,mode:s.mode,length:s.length}})}function QT(t,e){switch(e){case y.NUMERIC:return JR.getBitsLength(t);case y.ALPHANUMERIC:return $R.getBitsLength(t);case y.KANJI:return qR.getBitsLength(t);case y.BYTE:return kR.getBitsLength(t)}}function s_(t){return t.reduce(function(e,E){let r=e.length-1>=0?e[e.length-1]:null;return r&&r.mode===E.mode?(e[e.length-1].data+=E.data,e):(e.push(E),e)},[])}function i_(t){let e=[];for(let E=0;E<t.length;E++){let r=t[E];switch(r.mode){case y.NUMERIC:e.push([r,{data:r.data,mode:y.ALPHANUMERIC,length:r.length},{data:r.data,mode:y.BYTE,length:r.length}]);break;case y.ALPHANUMERIC:e.push([r,{data:r.data,mode:y.BYTE,length:r.length}]);break;case y.KANJI:e.push([r,{data:r.data,mode:y.BYTE,length:xR(r.data)}]);break;case y.BYTE:e.push([{data:r.data,mode:y.BYTE,length:xR(r.data)}])}}return e}function o_(t,e){let E={},r={start:{}},n=["start"];for(let T=0;T<t.length;T++){let s=t[T],o=[];for(let i=0;i<s.length;i++){let R=s[i],A=""+T+i;o.push(A),E[A]={node:R,lastCount:0},r[A]={};for(let a=0;a<n.length;a++){let O=n[a];E[O]&&E[O].node.mode===R.mode?(r[O][A]=QT(E[O].lastCount+R.length,R.mode)-QT(E[O].lastCount,R.mode),E[O].lastCount+=R.length):(E[O]&&(E[O].lastCount=R.length),r[O][A]=QT(R.length,R.mode)+4+y.getCharCountIndicator(R.mode,e))}}n=o}for(let T=0;T<n.length;T++)r[n[T]].end=0;return{map:r,table:E}}function KR(t,e){let E,r=y.getBestModeForData(t);if(E=y.from(e,r),E!==y.BYTE&&E.bit<r.bit)throw new Error('"'+t+'" cannot be encoded with mode '+y.toString(E)+`.
 Suggested mode is: `+y.toString(r));switch(E===y.KANJI&&!zr.isKanjiModeEnabled()&&(E=y.BYTE),E){case y.NUMERIC:return new JR(t);case y.ALPHANUMERIC:return new $R(t);case y.KANJI:return new qR(t);case y.BYTE:return new kR(t)}}Jt.fromArray=function(e){return e.reduce(function(E,r){return typeof r=="string"?E.push(KR(r,null)):r.data&&E.push(KR(r.data,r.mode)),E},[])};Jt.fromString=function(e,E){let r=QR(e,zr.isKanjiModeEnabled()),n=i_(r),T=o_(n,E),s=T_.find_path(T.map,"start","end"),o=[];for(let i=1;i<s.length-1;i++)o.push(T.table[s[i]].node);return Jt.fromArray(s_(o))};Jt.rawSplit=function(e){return Jt.fromArray(QR(e,zr.isKanjiModeEnabled()))}});var zR=C(ZR=>{"use strict";var tn=st(),jT=Jr(),R_=oR(),A_=AR(),a_=aR(),S_=NR(),es=lR(),ts=VT(),O_=uR(),en=MR(),I_=GR(),N_=ot(),ZT=jR();function l_(t,e){let E=t.size,r=S_.getPositions(e);for(let n=0;n<r.length;n++){let T=r[n][0],s=r[n][1];for(let o=-1;o<=7;o++)if(!(T+o<=-1||E<=T+o))for(let i=-1;i<=7;i++)s+i<=-1||E<=s+i||(o>=0&&o<=6&&(i===0||i===6)||i>=0&&i<=6&&(o===0||o===6)||o>=2&&o<=4&&i>=2&&i<=4?t.set(T+o,s+i,!0,!0):t.set(T+o,s+i,!1,!0))}}function C_(t){let e=t.size;for(let E=8;E<e-8;E++){let r=E%2===0;t.set(E,6,r,!0),t.set(6,E,r,!0)}}function __(t,e){let E=a_.getPositions(e);for(let r=0;r<E.length;r++){let n=E[r][0],T=E[r][1];for(let s=-2;s<=2;s++)for(let o=-2;o<=2;o++)s===-2||s===2||o===-2||o===2||s===0&&o===0?t.set(n+s,T+o,!0,!0):t.set(n+s,T+o,!1,!0)}}function L_(t,e){let E=t.size,r=en.getEncodedBits(e),n,T,s;for(let o=0;o<18;o++)n=Math.floor(o/3),T=o%3+E-8-3,s=(r>>o&1)===1,t.set(n,T,s,!0),t.set(T,n,s,!0)}function zT(t,e,E){let r=t.size,n=I_.getEncodedBits(e,E),T,s;for(T=0;T<15;T++)s=(n>>T&1)===1,T<6?t.set(T,8,s,!0):T<8?t.set(T+1,8,s,!0):t.set(r-15+T,8,s,!0),T<8?t.set(8,r-T-1,s,!0):T<9?t.set(8,15-T-1+1,s,!0):t.set(8,15-T-1,s,!0);t.set(r-8,8,1,!0)}function c_(t,e){let E=t.size,r=-1,n=E-1,T=7,s=0;for(let o=E-1;o>0;o-=2)for(o===6&&o--;;){for(let i=0;i<2;i++)if(!t.isReserved(n,o-i)){let R=!1;s<e.length&&(R=(e[s]>>>T&1)===1),t.set(n,o-i,R),T--,T===-1&&(s++,T=7)}if(n+=r,n<0||E<=n){n-=r,r=-r;break}}}function u_(t,e,E){let r=new R_;E.forEach(function(i){r.put(i.mode.bit,4),r.put(i.getLength(),N_.getCharCountIndicator(i.mode,t)),i.write(r)});let n=tn.getSymbolTotalCodewords(t),T=ts.getTotalCodewordsCount(t,e),s=(n-T)*8;for(r.getLengthInBits()+4<=s&&r.put(0,4);r.getLengthInBits()%8!==0;)r.putBit(0);let o=(s-r.getLengthInBits())/8;for(let i=0;i<o;i++)r.put(i%2?17:236,8);return f_(r,t,e)}function f_(t,e,E){let r=tn.getSymbolTotalCodewords(e),n=ts.getTotalCodewordsCount(e,E),T=r-n,s=ts.getBlocksCount(e,E),o=r%s,i=s-o,R=Math.floor(r/s),A=Math.floor(T/s),a=A+1,O=R-A,I=new O_(O),_=0,N=new Array(s),l=new Array(s),u=0,d=new Uint8Array(t.buffer);for(let oe=0;oe<s;oe++){let At=oe<i?A:a;N[oe]=d.slice(_,_+At),l[oe]=I.encode(N[oe]),_+=At,u=Math.max(u,At)}let p=new Uint8Array(r),m=0,H,g;for(H=0;H<u;H++)for(g=0;g<s;g++)H<N[g].length&&(p[m++]=N[g][H]);for(H=0;H<O;H++)for(g=0;g<s;g++)p[m++]=l[g][H];return p}function d_(t,e,E,r){let n;if(Array.isArray(t))n=ZT.fromArray(t);else if(typeof t=="string"){let R=e;if(!R){let A=ZT.rawSplit(t);R=en.getBestVersionForData(A,E)}n=ZT.fromString(t,R||40)}else throw new Error("Invalid data");let T=en.getBestVersionForData(n,E);if(!T)throw new Error("The amount of data is too big to be stored in a QR Code");if(!e)e=T;else if(e<T)throw new Error(`
The chosen QR Code version cannot contain this amount of data.
Minimum version required to store current data is: `+T+`.
`);let s=u_(e,E,n),o=tn.getSymbolSize(e),i=new A_(o);return l_(i,e),C_(i),__(i,e),zT(i,E,0),e>=7&&L_(i,e),c_(i,s),isNaN(r)&&(r=es.getBestMask(i,zT.bind(null,i,E))),es.applyMask(r,i),zT(i,E,r),{modules:i,version:e,errorCorrectionLevel:E,maskPattern:r,segments:n}}ZR.create=function(e,E){if(typeof e>"u"||e==="")throw new Error("No input text");let r=jT.M,n,T;return typeof E<"u"&&(r=jT.from(E.errorCorrectionLevel,jT.M),n=en.from(E.version),T=es.from(E.maskPattern),E.toSJISFunc&&tn.setToSJISFunction(E.toSJISFunc)),d_(e,n,r,T)}});var Es=C(ht=>{"use strict";function eA(t){if(typeof t=="number"&&(t=t.toString()),typeof t!="string")throw new Error("Color should be defined as hex string");let e=t.slice().replace("#","").split("");if(e.length<3||e.length===5||e.length>8)throw new Error("Invalid hex color: "+t);(e.length===3||e.length===4)&&(e=Array.prototype.concat.apply([],e.map(function(r){return[r,r]}))),e.length===6&&e.push("F","F");let E=parseInt(e.join(""),16);return{r:E>>24&255,g:E>>16&255,b:E>>8&255,a:E&255,hex:"#"+e.slice(0,6).join("")}}ht.getOptions=function(e){e||(e={}),e.color||(e.color={});let E=typeof e.margin>"u"||e.margin===null||e.margin<0?4:e.margin,r=e.width&&e.width>=21?e.width:void 0,n=e.scale||4;return{width:r,scale:r?4:n,margin:E,color:{dark:eA(e.color.dark||"#000000ff"),light:eA(e.color.light||"#ffffffff")},type:e.type,rendererOpts:e.rendererOpts||{}}};ht.getScale=function(e,E){return E.width&&E.width>=e+E.margin*2?E.width/(e+E.margin*2):E.scale};ht.getImageWidth=function(e,E){let r=ht.getScale(e,E);return Math.floor((e+E.margin*2)*r)};ht.qrToImageData=function(e,E,r){let n=E.modules.size,T=E.modules.data,s=ht.getScale(n,r),o=Math.floor((n+r.margin*2)*s),i=r.margin*s,R=[r.color.light,r.color.dark];for(let A=0;A<o;A++)for(let a=0;a<o;a++){let O=(A*o+a)*4,I=r.color.light;if(A>=i&&a>=i&&A<o-i&&a<o-i){let _=Math.floor((A-i)/s),N=Math.floor((a-i)/s);I=R[T[_*n+N]?1:0]}e[O++]=I.r,e[O++]=I.g,e[O++]=I.b,e[O]=I.a}}});var tA=C(En=>{"use strict";var rs=Es();function P_(t,e,E){t.clearRect(0,0,e.width,e.height),e.style||(e.style={}),e.height=E,e.width=E,e.style.height=E+"px",e.style.width=E+"px"}function D_(){try{return document.createElement("canvas")}catch{throw new Error("You need to specify a canvas element")}}En.render=function(e,E,r){let n=r,T=E;typeof n>"u"&&(!E||!E.getContext)&&(n=E,E=void 0),E||(T=D_()),n=rs.getOptions(n);let s=rs.getImageWidth(e.modules.size,n),o=T.getContext("2d"),i=o.createImageData(s,s);return rs.qrToImageData(i.data,e,n),P_(o,T,s),o.putImageData(i,0,0),T};En.renderToDataURL=function(e,E,r){let n=r;typeof n>"u"&&(!E||!E.getContext)&&(n=E,E=void 0),n||(n={});let T=En.render(e,E,n),s=n.type||"image/png",o=n.rendererOpts||{};return T.toDataURL(s,o.quality)}});var nA=C(rA=>{"use strict";var p_=Es();function EA(t,e){let E=t.a/255,r=e+'="'+t.hex+'"';return E<1?r+" "+e+'-opacity="'+E.toFixed(2).slice(1)+'"':r}function ns(t,e,E){let r=t+e;return typeof E<"u"&&(r+=" "+E),r}function h_(t,e,E){let r="",n=0,T=!1,s=0;for(let o=0;o<t.length;o++){let i=Math.floor(o%e),R=Math.floor(o/e);!i&&!T&&(T=!0),t[o]?(s++,o>0&&i>0&&t[o-1]||(r+=T?ns("M",i+E,.5+R+E):ns("m",n,0),n=0,T=!1),i+1<e&&t[o+1]||(r+=ns("h",s),s=0)):n++}return r}rA.render=function(e,E,r){let n=p_.getOptions(E),T=e.modules.size,s=e.modules.data,o=T+n.margin*2,i=n.color.light.a?"<path "+EA(n.color.light,"fill")+' d="M0 0h'+o+"v"+o+'H0z"/>':"",R="<path "+EA(n.color.dark,"stroke")+' d="'+h_(s,T,n.margin)+'"/>',A='viewBox="0 0 '+o+" "+o+'"',O='<svg xmlns="http://www.w3.org/2000/svg" '+(n.width?'width="'+n.width+'" height="'+n.width+'" ':"")+A+' shape-rendering="crispEdges">'+i+R+`</svg>
`;return typeof r=="function"&&r(null,O),O}});var sA=C(pE=>{"use strict";var M_=TR(),Ts=zR(),TA=tA(),m_=nA();function ss(t,e,E,r,n){let T=[].slice.call(arguments,1),s=T.length,o=typeof T[s-1]=="function";if(!o&&!M_())throw new Error("Callback required as last argument");if(o){if(s<2)throw new Error("Too few arguments provided");s===2?(n=E,E=e,e=r=void 0):s===3&&(e.getContext&&typeof n>"u"?(n=r,r=void 0):(n=r,r=E,E=e,e=void 0))}else{if(s<1)throw new Error("Too few arguments provided");return s===1?(E=e,e=r=void 0):s===2&&!e.getContext&&(r=E,E=e,e=void 0),new Promise(function(i,R){try{let A=Ts.create(E,r);i(t(A,e,r))}catch(A){R(A)}})}try{let i=Ts.create(E,r);n(null,t(i,e,r))}catch(i){n(i)}}pE.create=Ts.create;pE.toCanvas=ss.bind(null,TA.render);pE.toDataURL=ss.bind(null,TA.renderToDataURL);pE.toString=ss.bind(null,function(t,e,E){return m_.render(t,E)})});var pi=hE(ks());var ZE=Symbol.for("yaml.alias"),zE=Symbol.for("yaml.document"),Me=Symbol.for("yaml.map"),vn=Symbol.for("yaml.pair"),Nt=Symbol.for("yaml.scalar"),ve=Symbol.for("yaml.seq"),se=Symbol.for("yaml.node.type"),me=t=>!!t&&typeof t=="object"&&t[se]===ZE,Ve=t=>!!t&&typeof t=="object"&&t[se]===zE,Ue=t=>!!t&&typeof t=="object"&&t[se]===Me,M=t=>!!t&&typeof t=="object"&&t[se]===vn,h=t=>!!t&&typeof t=="object"&&t[se]===Nt,ge=t=>!!t&&typeof t=="object"&&t[se]===ve;function G(t){if(t&&typeof t=="object")switch(t[se]){case Me:case ve:return!0}return!1}function U(t){if(t&&typeof t=="object")switch(t[se]){case ZE:case Me:case Nt:case ve:return!0}return!1}var qs=t=>(h(t)||G(t))&&!!t.anchor;var ce=Symbol("break visit"),Qs=Symbol("skip children"),Ye=Symbol("remove node");function Ge(t,e){let E=js(e);Ve(t)?Ut(null,t.contents,E,Object.freeze([t]))===Ye&&(t.contents=null):Ut(null,t,E,Object.freeze([]))}Ge.BREAK=ce;Ge.SKIP=Qs;Ge.REMOVE=Ye;function Ut(t,e,E,r){let n=Zs(t,e,E,r);if(U(n)||M(n))return zs(t,r,n),Ut(t,n,E,r);if(typeof n!="symbol"){if(G(e)){r=Object.freeze(r.concat(e));for(let T=0;T<e.items.length;++T){let s=Ut(T,e.items[T],E,r);if(typeof s=="number")T=s-1;else{if(s===ce)return ce;s===Ye&&(e.items.splice(T,1),T-=1)}}}else if(M(e)){r=Object.freeze(r.concat(e));let T=Ut("key",e.key,E,r);if(T===ce)return ce;T===Ye&&(e.key=null);let s=Ut("value",e.value,E,r);if(s===ce)return ce;s===Ye&&(e.value=null)}}return n}function er(t,e){return $t(this,null,function*(){let E=js(e);Ve(t)?(yield gt(null,t.contents,E,Object.freeze([t])))===Ye&&(t.contents=null):yield gt(null,t,E,Object.freeze([]))})}er.BREAK=ce;er.SKIP=Qs;er.REMOVE=Ye;function gt(t,e,E,r){return $t(this,null,function*(){let n=yield Zs(t,e,E,r);if(U(n)||M(n))return zs(t,r,n),gt(t,n,E,r);if(typeof n!="symbol"){if(G(e)){r=Object.freeze(r.concat(e));for(let T=0;T<e.items.length;++T){let s=yield gt(T,e.items[T],E,r);if(typeof s=="number")T=s-1;else{if(s===ce)return ce;s===Ye&&(e.items.splice(T,1),T-=1)}}}else if(M(e)){r=Object.freeze(r.concat(e));let T=yield gt("key",e.key,E,r);if(T===ce)return ce;T===Ye&&(e.key=null);let s=yield gt("value",e.value,E,r);if(s===ce)return ce;s===Ye&&(e.value=null)}}return n})}function js(t){return typeof t=="object"&&(t.Collection||t.Node||t.Value)?Object.assign({Alias:t.Node,Map:t.Node,Scalar:t.Node,Seq:t.Node},t.Value&&{Map:t.Value,Scalar:t.Value,Seq:t.Value},t.Collection&&{Map:t.Collection,Seq:t.Collection},t):t}function Zs(t,e,E,r){if(typeof E=="function")return E(t,e,r);if(Ue(e))return E.Map?.(t,e,r);if(ge(e))return E.Seq?.(t,e,r);if(M(e))return E.Pair?.(t,e,r);if(h(e))return E.Scalar?.(t,e,r);if(me(e))return E.Alias?.(t,e,r)}function zs(t,e,E){let r=e[e.length-1];if(G(r))r.items[t]=E;else if(M(r))t==="key"?r.key=E:r.value=E;else if(Ve(r))r.contents=E;else{let n=me(r)?"alias":"scalar";throw new Error(`Cannot replace node with ${n} parent`)}}var RS={"!":"%21",",":"%2C","[":"%5B","]":"%5D","{":"%7B","}":"%7D"},AS=t=>t.replace(/[!,[\]{}]/g,e=>RS[e]),nE=(()=>{class t{constructor(E,r){this.docStart=null,this.docEnd=!1,this.yaml=Object.assign({},t.defaultYaml,E),this.tags=Object.assign({},t.defaultTags,r)}clone(){let E=new t(this.yaml,this.tags);return E.docStart=this.docStart,E}atDocument(){let E=new t(this.yaml,this.tags);switch(this.yaml.version){case"1.1":this.atNextDocument=!0;break;case"1.2":this.atNextDocument=!1,this.yaml={explicit:t.defaultYaml.explicit,version:"1.2"},this.tags=Object.assign({},t.defaultTags);break}return E}add(E,r){this.atNextDocument&&(this.yaml={explicit:t.defaultYaml.explicit,version:"1.1"},this.tags=Object.assign({},t.defaultTags),this.atNextDocument=!1);let n=E.trim().split(/[ \t]+/),T=n.shift();switch(T){case"%TAG":{if(n.length!==2&&(r(0,"%TAG directive should contain exactly two parts"),n.length<2))return!1;let[s,o]=n;return this.tags[s]=o,!0}case"%YAML":{if(this.yaml.explicit=!0,n.length!==1)return r(0,"%YAML directive should contain exactly one part"),!1;let[s]=n;if(s==="1.1"||s==="1.2")return this.yaml.version=s,!0;{let o=/^\d+\.\d+$/.test(s);return r(6,`Unsupported YAML version ${s}`,o),!1}}default:return r(0,`Unknown directive ${T}`,!0),!1}}tagName(E,r){if(E==="!")return"!";if(E[0]!=="!")return r(`Not a valid tag: ${E}`),null;if(E[1]==="<"){let o=E.slice(2,-1);return o==="!"||o==="!!"?(r(`Verbatim tags aren't resolved, so ${E} is invalid.`),null):(E[E.length-1]!==">"&&r("Verbatim tags must end with a >"),o)}let[,n,T]=E.match(/^(.*!)([^!]*)$/s);T||r(`The ${E} tag has no suffix`);let s=this.tags[n];if(s)try{return s+decodeURIComponent(T)}catch(o){return r(String(o)),null}return n==="!"?E:(r(`Could not resolve tag: ${E}`),null)}tagString(E){for(let[r,n]of Object.entries(this.tags))if(E.startsWith(n))return r+AS(E.substring(n.length));return E[0]==="!"?E:`!<${E}>`}toString(E){let r=this.yaml.explicit?[`%YAML ${this.yaml.version||"1.2"}`]:[],n=Object.entries(this.tags),T;if(E&&n.length>0&&U(E.contents)){let s={};Ge(E.contents,(o,i)=>{U(i)&&i.tag&&(s[i.tag]=!0)}),T=Object.keys(s)}else T=[];for(let[s,o]of n)s==="!!"&&o==="tag:yaml.org,2002:"||(!E||T.some(i=>i.startsWith(o)))&&r.push(`%TAG ${s} ${o}`);return r.join(`
`)}}return t.defaultYaml={explicit:!1,version:"1.2"},t.defaultTags={"!!":"tag:yaml.org,2002:"},t})();function tr(t){if(/[\x00-\x19\s,[\]{}]/.test(t)){let E=`Anchor must not contain whitespace or control characters: ${JSON.stringify(t)}`;throw new Error(E)}return!0}function Vn(t){let e=new Set;return Ge(t,{Value(E,r){r.anchor&&e.add(r.anchor)}}),e}function wn(t,e){for(let E=1;;++E){let r=`${t}${E}`;if(!e.has(r))return r}}function ei(t,e){let E=[],r=new Map,n=null;return{onAnchor:T=>{E.push(T),n||(n=Vn(t));let s=wn(e,n);return n.add(s),s},setAnchors:()=>{for(let T of E){let s=r.get(T);if(typeof s=="object"&&s.anchor&&(h(s.node)||G(s.node)))s.node.anchor=s.anchor;else{let o=new Error("Failed to resolve repeated object (this should not happen)");throw o.source=T,o}}},sourceObjects:r}}function Ze(t,e,E,r){if(r&&typeof r=="object")if(Array.isArray(r))for(let n=0,T=r.length;n<T;++n){let s=r[n],o=Ze(t,r,String(n),s);o===void 0?delete r[n]:o!==s&&(r[n]=o)}else if(r instanceof Map)for(let n of Array.from(r.keys())){let T=r.get(n),s=Ze(t,r,n,T);s===void 0?r.delete(n):s!==T&&r.set(n,s)}else if(r instanceof Set)for(let n of Array.from(r)){let T=Ze(t,r,n,n);T===void 0?r.delete(n):T!==n&&(r.delete(n),r.add(T))}else for(let[n,T]of Object.entries(r)){let s=Ze(t,r,n,T);s===void 0?delete r[n]:s!==T&&(r[n]=s)}return t.call(e,E,r)}function $(t,e,E){if(Array.isArray(t))return t.map((r,n)=>$(r,String(n),E));if(t&&typeof t.toJSON=="function"){if(!E||!qs(t))return t.toJSON(e,E);let r={aliasCount:0,count:1,res:void 0};E.anchors.set(t,r),E.onCreate=T=>{r.res=T,delete E.onCreate};let n=t.toJSON(e,E);return E.onCreate&&E.onCreate(n),n}return typeof t=="bigint"&&!E?.keep?Number(t):t}var ze=class{constructor(e){Object.defineProperty(this,se,{value:e})}clone(){let e=Object.create(Object.getPrototypeOf(this),Object.getOwnPropertyDescriptors(this));return this.range&&(e.range=this.range.slice()),e}toJS(e,{mapAsMap:E,maxAliasCount:r,onAnchor:n,reviver:T}={}){if(!Ve(e))throw new TypeError("A document argument is required");let s={anchors:new Map,doc:e,keep:!0,mapAsMap:E===!0,mapKeyWarned:!1,maxAliasCount:typeof r=="number"?r:100},o=$(this,"",s);if(typeof n=="function")for(let{count:i,res:R}of s.anchors.values())n(R,i);return typeof T=="function"?Ze(T,{"":o},"",o):o}};var et=class extends ze{constructor(e){super(ZE),this.source=e,Object.defineProperty(this,"tag",{set(){throw new Error("Alias nodes cannot have tags")}})}resolve(e){let E;return Ge(e,{Node:(r,n)=>{if(n===this)return Ge.BREAK;n.anchor===this.source&&(E=n)}}),E}toJSON(e,E){if(!E)return{source:this.source};let{anchors:r,doc:n,maxAliasCount:T}=E,s=this.resolve(n);if(!s){let i=`Unresolved alias (the anchor must be set before the alias): ${this.source}`;throw new ReferenceError(i)}let o=r.get(s);if(o||($(s,null,E),o=r.get(s)),!o||o.res===void 0){let i="This should not happen: Alias anchor was not resolved?";throw new ReferenceError(i)}if(T>=0&&(o.count+=1,o.aliasCount===0&&(o.aliasCount=Er(n,s,r)),o.count*o.aliasCount>T)){let i="Excessive alias count indicates a resource exhaustion attack";throw new ReferenceError(i)}return o.res}toString(e,E,r){let n=`*${this.source}`;if(e){if(tr(this.source),e.options.verifyAliasOrder&&!e.anchors.has(this.source)){let T=`Unresolved alias (the anchor must be set before the alias): ${this.source}`;throw new Error(T)}if(e.implicitKey)return`${n} `}return n}};function Er(t,e,E){if(me(e)){let r=e.resolve(t),n=E&&r&&E.get(r);return n?n.count*n.aliasCount:0}else if(G(e)){let r=0;for(let n of e.items){let T=Er(t,n,E);T>r&&(r=T)}return r}else if(M(e)){let r=Er(t,e.key,E),n=Er(t,e.value,E);return Math.max(r,n)}return 1}var rr=t=>!t||typeof t!="function"&&typeof t!="object",P=(()=>{class t extends ze{constructor(E){super(Nt),this.value=E}toJSON(E,r){return r?.keep?this.value:$(this.value,E,r)}toString(){return String(this.value)}}return t.BLOCK_FOLDED="BLOCK_FOLDED",t.BLOCK_LITERAL="BLOCK_LITERAL",t.PLAIN="PLAIN",t.QUOTE_DOUBLE="QUOTE_DOUBLE",t.QUOTE_SINGLE="QUOTE_SINGLE",t})();var aS="tag:yaml.org,2002:";function SS(t,e,E){if(e){let r=E.filter(T=>T.tag===e),n=r.find(T=>!T.format)??r[0];if(!n)throw new Error(`Tag ${e} not found`);return n}return E.find(r=>r.identify?.(t)&&!r.format)}function we(t,e,E){if(Ve(t)&&(t=t.contents),U(t))return t;if(M(t)){let a=E.schema[Me].createNode?.(E.schema,null,E);return a.items.push(t),a}(t instanceof String||t instanceof Number||t instanceof Boolean||typeof BigInt<"u"&&t instanceof BigInt)&&(t=t.valueOf());let{aliasDuplicateObjects:r,onAnchor:n,onTagObj:T,schema:s,sourceObjects:o}=E,i;if(r&&t&&typeof t=="object"){if(i=o.get(t),i)return i.anchor||(i.anchor=n(t)),new et(i.anchor);i={anchor:null,node:null},o.set(t,i)}e?.startsWith("!!")&&(e=aS+e.slice(2));let R=SS(t,e,s.tags);if(!R){if(t&&typeof t.toJSON=="function"&&(t=t.toJSON()),!t||typeof t!="object"){let a=new P(t);return i&&(i.node=a),a}R=t instanceof Map?s[Me]:Symbol.iterator in Object(t)?s[ve]:s[Me]}T&&(T(R),delete E.onTagObj);let A=R?.createNode?R.createNode(E.schema,t,E):typeof R?.nodeClass?.from=="function"?R.nodeClass.from(E.schema,t,E):new P(t);return e?A.tag=e:R.default||(A.tag=R.tag),i&&(i.node=A),A}function TE(t,e,E){let r=E;for(let n=e.length-1;n>=0;--n){let T=e[n];if(typeof T=="number"&&Number.isInteger(T)&&T>=0){let s=[];s[T]=r,r=s}else r=new Map([[T,r]])}return we(r,void 0,{aliasDuplicateObjects:!1,keepUndefined:!1,onAnchor:()=>{throw new Error("This should not happen, please report a bug.")},schema:t,sourceObjects:new Map})}var Gt=t=>t==null||typeof t=="object"&&!!t[Symbol.iterator]().next().done,nr=(()=>{class t extends ze{constructor(E,r){super(E),Object.defineProperty(this,"schema",{value:r,configurable:!0,enumerable:!1,writable:!0})}clone(E){let r=Object.create(Object.getPrototypeOf(this),Object.getOwnPropertyDescriptors(this));return E&&(r.schema=E),r.items=r.items.map(n=>U(n)||M(n)?n.clone(E):n),this.range&&(r.range=this.range.slice()),r}addIn(E,r){if(Gt(E))this.add(r);else{let[n,...T]=E,s=this.get(n,!0);if(G(s))s.addIn(T,r);else if(s===void 0&&this.schema)this.set(n,TE(this.schema,T,r));else throw new Error(`Expected YAML collection at ${n}. Remaining path: ${T}`)}}deleteIn(E){let[r,...n]=E;if(n.length===0)return this.delete(r);let T=this.get(r,!0);if(G(T))return T.deleteIn(n);throw new Error(`Expected YAML collection at ${r}. Remaining path: ${n}`)}getIn(E,r){let[n,...T]=E,s=this.get(n,!0);return T.length===0?!r&&h(s)?s.value:s:G(s)?s.getIn(T,r):void 0}hasAllNullValues(E){return this.items.every(r=>{if(!M(r))return!1;let n=r.value;return n==null||E&&h(n)&&n.value==null&&!n.commentBefore&&!n.comment&&!n.tag})}hasIn(E){let[r,...n]=E;if(n.length===0)return this.has(r);let T=this.get(r,!0);return G(T)?T.hasIn(n):!1}setIn(E,r){let[n,...T]=E;if(T.length===0)this.set(n,r);else{let s=this.get(n,!0);if(G(s))s.setIn(T,r);else if(s===void 0&&this.schema)this.set(n,TE(this.schema,T,r));else throw new Error(`Expected YAML collection at ${n}. Remaining path: ${T}`)}}}return t.maxFlowStringSingleLineLength=60,t})();var ti=t=>t.replace(/^(?!$)(?: $)?/gm,"#");function Pe(t,e){return/^\n+$/.test(t)?t.substring(1):e?t.replace(/^(?! *$)/gm,e):t}var be=(t,e,E)=>t.endsWith(`
`)?Pe(E,e):E.includes(`
`)?`
`+Pe(E,e):(t.endsWith(" ")?"":" ")+E;var Wn="flow",Tr="block",sE="quoted";function iE(t,e,E="flow",{indentAtStart:r,lineWidth:n=80,minContentWidth:T=20,onFold:s,onOverflow:o}={}){if(!n||n<0)return t;let i=Math.max(1+T,1+n-e.length);if(t.length<=i)return t;let R=[],A={},a=n-e.length;typeof r=="number"&&(r>n-Math.max(2,T)?R.push(0):a=n-r);let O,I,_=!1,N=-1,l=-1,u=-1;E===Tr&&(N=Ei(t,N,e.length),N!==-1&&(a=N+i));for(let p;p=t[N+=1];){if(E===sE&&p==="\\"){switch(l=N,t[N+1]){case"x":N+=3;break;case"u":N+=5;break;case"U":N+=9;break;default:N+=1}u=N}if(p===`
`)E===Tr&&(N=Ei(t,N,e.length)),a=N+e.length+i,O=void 0;else{if(p===" "&&I&&I!==" "&&I!==`
`&&I!=="	"){let m=t[N+1];m&&m!==" "&&m!==`
`&&m!=="	"&&(O=N)}if(N>=a)if(O)R.push(O),a=O+i,O=void 0;else if(E===sE){for(;I===" "||I==="	";)I=p,p=t[N+=1],_=!0;let m=N>u+1?N-2:l-1;if(A[m])return t;R.push(m),A[m]=!0,a=m+i,O=void 0}else _=!0}I=p}if(_&&o&&o(),R.length===0)return t;s&&s();let d=t.slice(0,R[0]);for(let p=0;p<R.length;++p){let m=R[p],H=R[p+1]||t.length;m===0?d=`
${e}${t.slice(0,H)}`:(E===sE&&A[m]&&(d+=`${t[m]}\\`),d+=`
${e}${t.slice(m+1,H)}`)}return d}function Ei(t,e,E){let r=e,n=e+1,T=t[n];for(;T===" "||T==="	";)if(e<n+E)T=t[++e];else{do T=t[++e];while(T&&T!==`
`);r=e,n=e+1,T=t[n]}return r}var ir=(t,e)=>({indentAtStart:e?t.indent.length:t.indentAtStart,lineWidth:t.options.lineWidth,minContentWidth:t.options.minContentWidth}),or=t=>/^(%|---|\.\.\.)/m.test(t);function OS(t,e,E){if(!e||e<0)return!1;let r=e-E,n=t.length;if(n<=r)return!1;for(let T=0,s=0;T<n;++T)if(t[T]===`
`){if(T-s>r)return!0;if(s=T+1,n-s<=r)return!1}return!0}function oE(t,e){let E=JSON.stringify(t);if(e.options.doubleQuotedAsJSON)return E;let{implicitKey:r}=e,n=e.options.doubleQuotedMinMultiLineLength,T=e.indent||(or(t)?"  ":""),s="",o=0;for(let i=0,R=E[i];R;R=E[++i])if(R===" "&&E[i+1]==="\\"&&E[i+2]==="n"&&(s+=E.slice(o,i)+"\\ ",i+=1,o=i,R="\\"),R==="\\")switch(E[i+1]){case"u":{s+=E.slice(o,i);let A=E.substr(i+2,4);switch(A){case"0000":s+="\\0";break;case"0007":s+="\\a";break;case"000b":s+="\\v";break;case"001b":s+="\\e";break;case"0085":s+="\\N";break;case"00a0":s+="\\_";break;case"2028":s+="\\L";break;case"2029":s+="\\P";break;default:A.substr(0,2)==="00"?s+="\\x"+A.substr(2):s+=E.substr(i,6)}i+=5,o=i+1}break;case"n":if(r||E[i+2]==='"'||E.length<n)i+=1;else{for(s+=E.slice(o,i)+`

`;E[i+2]==="\\"&&E[i+3]==="n"&&E[i+4]!=='"';)s+=`
`,i+=2;s+=T,E[i+2]===" "&&(s+="\\"),i+=1,o=i+1}break;default:i+=1}return s=o?s+E.slice(o):E,r?s:iE(s,T,sE,ir(e,!1))}function Xn(t,e){if(e.options.singleQuote===!1||e.implicitKey&&t.includes(`
`)||/[ \t]\n|\n[ \t]/.test(t))return oE(t,e);let E=e.indent||(or(t)?"  ":""),r="'"+t.replace(/'/g,"''").replace(/\n+/g,`$&
${E}`)+"'";return e.implicitKey?r:iE(r,E,Wn,ir(e,!1))}function yt(t,e){let{singleQuote:E}=e.options,r;if(E===!1)r=oE;else{let n=t.includes('"'),T=t.includes("'");n&&!T?r=Xn:T&&!n?r=oE:r=E?Xn:oE}return r(t,e)}var xn;try{xn=new RegExp(`(^|(?<!
))
+(?!
|$)`,"g")}catch{xn=/\n+(?!\n|$)/g}function sr({comment:t,type:e,value:E},r,n,T){let{blockQuote:s,commentString:o,lineWidth:i}=r.options;if(!s||/\n[\t ]+$/.test(E)||/^\s*$/.test(E))return yt(E,r);let R=r.indent||(r.forceBlockIndent||or(E)?"  ":""),A=s==="literal"?!0:s==="folded"||e===P.BLOCK_FOLDED?!1:e===P.BLOCK_LITERAL?!0:!OS(E,i,R.length);if(!E)return A?`|
`:`>
`;let a,O;for(O=E.length;O>0;--O){let g=E[O-1];if(g!==`
`&&g!=="	"&&g!==" ")break}let I=E.substring(O),_=I.indexOf(`
`);_===-1?a="-":E===I||_!==I.length-1?(a="+",T&&T()):a="",I&&(E=E.slice(0,-I.length),I[I.length-1]===`
`&&(I=I.slice(0,-1)),I=I.replace(xn,`$&${R}`));let N=!1,l,u=-1;for(l=0;l<E.length;++l){let g=E[l];if(g===" ")N=!0;else if(g===`
`)u=l;else break}let d=E.substring(0,u<l?u+1:l);d&&(E=E.substring(d.length),d=d.replace(/\n+/g,`$&${R}`));let m=(A?"|":">")+(N?R?"2":"1":"")+a;if(t&&(m+=" "+o(t.replace(/ ?[\r\n]+/g," ")),n&&n()),A)return E=E.replace(/\n+/g,`$&${R}`),`${m}
${R}${d}${E}${I}`;E=E.replace(/\n+/g,`
$&`).replace(/(?:^|\n)([\t ].*)(?:([\n\t ]*)\n(?![\n\t ]))?/g,"$1$2").replace(/\n+/g,`$&${R}`);let H=iE(`${d}${E}${I}`,R,Tr,ir(r,!0));return`${m}
${R}${H}`}function IS(t,e,E,r){let{type:n,value:T}=t,{actualString:s,implicitKey:o,indent:i,indentStep:R,inFlow:A}=e;if(o&&T.includes(`
`)||A&&/[[\]{},]/.test(T))return yt(T,e);if(!T||/^[\n\t ,[\]{}#&*!|>'"%@`]|^[?-]$|^[?-][ \t]|[\n:][ \t]|[ \t]\n|[\n\t ]#|[\n\t :]$/.test(T))return o||A||!T.includes(`
`)?yt(T,e):sr(t,e,E,r);if(!o&&!A&&n!==P.PLAIN&&T.includes(`
`))return sr(t,e,E,r);if(or(T)){if(i==="")return e.forceBlockIndent=!0,sr(t,e,E,r);if(o&&i===R)return yt(T,e)}let a=T.replace(/\n+/g,`$&
${i}`);if(s){let O=N=>N.default&&N.tag!=="tag:yaml.org,2002:str"&&N.test?.test(a),{compat:I,tags:_}=e.doc.schema;if(_.some(O)||I?.some(O))return yt(T,e)}return o?a:iE(a,i,Wn,ir(e,!1))}function lt(t,e,E,r){let{implicitKey:n,inFlow:T}=e,s=typeof t.value=="string"?t:Object.assign({},t,{value:String(t.value)}),{type:o}=t;o!==P.QUOTE_DOUBLE&&/[\x00-\x08\x0b-\x1f\x7f-\x9f\u{D800}-\u{DFFF}]/u.test(s.value)&&(o=P.QUOTE_DOUBLE);let i=A=>{switch(A){case P.BLOCK_FOLDED:case P.BLOCK_LITERAL:return n||T?yt(s.value,e):sr(s,e,E,r);case P.QUOTE_DOUBLE:return oE(s.value,e);case P.QUOTE_SINGLE:return Xn(s.value,e);case P.PLAIN:return IS(s,e,E,r);default:return null}},R=i(o);if(R===null){let{defaultKeyType:A,defaultStringType:a}=e.options,O=n&&A||a;if(R=i(O),R===null)throw new Error(`Unsupported default string type ${O}`)}return R}function Rr(t,e){let E=Object.assign({blockQuote:!0,commentString:ti,defaultKeyType:null,defaultStringType:"PLAIN",directives:null,doubleQuotedAsJSON:!1,doubleQuotedMinMultiLineLength:40,falseStr:"false",flowCollectionPadding:!0,indentSeq:!0,lineWidth:80,minContentWidth:20,nullStr:"null",simpleKeys:!1,singleQuote:null,trueStr:"true",verifyAliasOrder:!0},t.schema.toStringOptions,e),r;switch(E.collectionStyle){case"block":r=!1;break;case"flow":r=!0;break;default:r=null}return{anchors:new Set,doc:t,flowCollectionPadding:E.flowCollectionPadding?" ":"",indent:"",indentStep:typeof E.indent=="number"?" ".repeat(E.indent):"  ",inFlow:r,options:E}}function NS(t,e){if(e.tag){let n=t.filter(T=>T.tag===e.tag);if(n.length>0)return n.find(T=>T.format===e.format)??n[0]}let E,r;if(h(e)){r=e.value;let n=t.filter(T=>T.identify?.(r));E=n.find(T=>T.format===e.format)??n.find(T=>!T.format)}else r=e,E=t.find(n=>n.nodeClass&&r instanceof n.nodeClass);if(!E){let n=r?.constructor?.name??typeof r;throw new Error(`Tag not resolved for ${n} value`)}return E}function lS(t,e,{anchors:E,doc:r}){if(!r.directives)return"";let n=[],T=(h(t)||G(t))&&t.anchor;T&&tr(T)&&(E.add(T),n.push(`&${T}`));let s=t.tag?t.tag:e.default?null:e.tag;return s&&n.push(r.directives.tagString(s)),n.join(" ")}function We(t,e,E,r){if(M(t))return t.toString(e,E,r);if(me(t)){if(e.doc.directives)return t.toString(e);if(e.resolvedAliases?.has(t))throw new TypeError("Cannot stringify circular structure without alias nodes");e.resolvedAliases?e.resolvedAliases.add(t):e.resolvedAliases=new Set([t]),t=t.resolve(e.doc)}let n,T=U(t)?t:e.doc.createNode(t,{onTagObj:i=>n=i});n||(n=NS(e.doc.schema.tags,T));let s=lS(T,n,e);s.length>0&&(e.indentAtStart=(e.indentAtStart??0)+s.length+1);let o=typeof n.stringify=="function"?n.stringify(T,e,E,r):h(T)?lt(T,e,E,r):T.toString(e,E,r);return s?h(T)||o[0]==="{"||o[0]==="["?`${s} ${o}`:`${s}
${e.indent}${o}`:o}function ri({key:t,value:e},E,r,n){let{allNullValues:T,doc:s,indent:o,indentStep:i,options:{commentString:R,indentSeq:A,simpleKeys:a}}=E,O=U(t)&&t.comment||null;if(a){if(O)throw new Error("With simple keys, key nodes cannot have comments");if(G(t)||!U(t)&&typeof t=="object"){let oe="With simple keys, collection cannot be used as a key value";throw new Error(oe)}}let I=!a&&(!t||O&&e==null&&!E.inFlow||G(t)||(h(t)?t.type===P.BLOCK_FOLDED||t.type===P.BLOCK_LITERAL:typeof t=="object"));E=Object.assign({},E,{allNullValues:!1,implicitKey:!I&&(a||!T),indent:o+i});let _=!1,N=!1,l=We(t,E,()=>_=!0,()=>N=!0);if(!I&&!E.inFlow&&l.length>1024){if(a)throw new Error("With simple keys, single line scalar must not span more than 1024 characters");I=!0}if(E.inFlow){if(T||e==null)return _&&r&&r(),l===""?"?":I?`? ${l}`:l}else if(T&&!a||e==null&&I)return l=`? ${l}`,O&&!_?l+=be(l,E.indent,R(O)):N&&n&&n(),l;_&&(O=null),I?(O&&(l+=be(l,E.indent,R(O))),l=`? ${l}
${o}:`):(l=`${l}:`,O&&(l+=be(l,E.indent,R(O))));let u,d,p;U(e)?(u=!!e.spaceBefore,d=e.commentBefore,p=e.comment):(u=!1,d=null,p=null,e&&typeof e=="object"&&(e=s.createNode(e))),E.implicitKey=!1,!I&&!O&&h(e)&&(E.indentAtStart=l.length+1),N=!1,!A&&i.length>=2&&!E.inFlow&&!I&&ge(e)&&!e.flow&&!e.tag&&!e.anchor&&(E.indent=E.indent.substring(2));let m=!1,H=We(e,E,()=>m=!0,()=>N=!0),g=" ";if(O||u||d){if(g=u?`
`:"",d){let oe=R(d);g+=`
${Pe(oe,E.indent)}`}H===""&&!E.inFlow?g===`
`&&(g=`

`):g+=`
${E.indent}`}else if(!I&&G(e)){let oe=H[0],At=H.indexOf(`
`),As=At!==-1,CA=E.inFlow??e.flow??e.items.length===0;if(As||!CA){let as=!1;if(As&&(oe==="&"||oe==="!")){let at=H.indexOf(" ");oe==="&"&&at!==-1&&at<At&&H[at+1]==="!"&&(at=H.indexOf(" ",at+1)),(at===-1||At<at)&&(as=!0)}as||(g=`
${E.indent}`)}}else(H===""||H[0]===`
`)&&(g="");return l+=g+H,E.inFlow?m&&r&&r():p&&!m?l+=be(l,E.indent,R(p)):N&&n&&n(),l}function Kn(t,e){(t==="debug"||t==="warn")&&(typeof process<"u"&&process.emitWarning?process.emitWarning(e):console.warn(e))}var ni="<<";function Ar(t,e,{key:E,value:r}){if(t?.doc.schema.merge&&CS(E))if(r=me(r)?r.resolve(t.doc):r,ge(r))for(let n of r.items)Jn(t,e,n);else if(Array.isArray(r))for(let n of r)Jn(t,e,n);else Jn(t,e,r);else{let n=$(E,"",t);if(e instanceof Map)e.set(n,$(r,n,t));else if(e instanceof Set)e.add(n);else{let T=_S(E,n,t),s=$(r,T,t);T in e?Object.defineProperty(e,T,{value:s,writable:!0,enumerable:!0,configurable:!0}):e[T]=s}}return e}var CS=t=>t===ni||h(t)&&t.value===ni&&(!t.type||t.type===P.PLAIN);function Jn(t,e,E){let r=t&&me(E)?E.resolve(t.doc):E;if(!Ue(r))throw new Error("Merge sources must be maps or map aliases");let n=r.toJSON(null,t,Map);for(let[T,s]of n)e instanceof Map?e.has(T)||e.set(T,s):e instanceof Set?e.add(T):Object.prototype.hasOwnProperty.call(e,T)||Object.defineProperty(e,T,{value:s,writable:!0,enumerable:!0,configurable:!0});return e}function _S(t,e,E){if(e===null)return"";if(typeof e!="object")return String(e);if(U(t)&&E?.doc){let r=Rr(E.doc,{});r.anchors=new Set;for(let T of E.anchors.keys())r.anchors.add(T.anchor);r.inFlow=!0,r.inStringifyKey=!0;let n=t.toString(r);if(!E.mapKeyWarned){let T=JSON.stringify(n);T.length>40&&(T=T.substring(0,36)+'..."'),Kn(E.doc.options.logLevel,`Keys with collection values will be stringified due to JS Object restrictions: ${T}. Set mapAsMap: true to use object keys.`),E.mapKeyWarned=!0}return n}return JSON.stringify(e)}function Bt(t,e,E){let r=we(t,void 0,E),n=we(e,void 0,E);return new k(r,n)}var k=class t{constructor(e,E=null){Object.defineProperty(this,se,{value:vn}),this.key=e,this.value=E}clone(e){let{key:E,value:r}=this;return U(E)&&(E=E.clone(e)),U(r)&&(r=r.clone(e)),new t(E,r)}toJSON(e,E){let r=E?.mapAsMap?new Map:{};return Ar(E,r,this)}toString(e,E,r){return e?.doc?ri(this,e,E,r):JSON.stringify(this)}};function Sr(t,e,E){return(e.inFlow??t.flow?cS:LS)(t,e,E)}function LS({comment:t,items:e},E,{blockItemPrefix:r,flowChars:n,itemIndent:T,onChompKeep:s,onComment:o}){let{indent:i,options:{commentString:R}}=E,A=Object.assign({},E,{indent:T,type:null}),a=!1,O=[];for(let _=0;_<e.length;++_){let N=e[_],l=null;if(U(N))!a&&N.spaceBefore&&O.push(""),ar(E,O,N.commentBefore,a),N.comment&&(l=N.comment);else if(M(N)){let d=U(N.key)?N.key:null;d&&(!a&&d.spaceBefore&&O.push(""),ar(E,O,d.commentBefore,a))}a=!1;let u=We(N,A,()=>l=null,()=>a=!0);l&&(u+=be(u,T,R(l))),a&&l&&(a=!1),O.push(r+u)}let I;if(O.length===0)I=n.start+n.end;else{I=O[0];for(let _=1;_<O.length;++_){let N=O[_];I+=N?`
${i}${N}`:`
`}}return t?(I+=`
`+Pe(R(t),i),o&&o()):a&&s&&s(),I}function cS({items:t},e,{flowChars:E,itemIndent:r}){let{indent:n,indentStep:T,flowCollectionPadding:s,options:{commentString:o}}=e;r+=T;let i=Object.assign({},e,{indent:r,inFlow:!0,type:null}),R=!1,A=0,a=[];for(let _=0;_<t.length;++_){let N=t[_],l=null;if(U(N))N.spaceBefore&&a.push(""),ar(e,a,N.commentBefore,!1),N.comment&&(l=N.comment);else if(M(N)){let d=U(N.key)?N.key:null;d&&(d.spaceBefore&&a.push(""),ar(e,a,d.commentBefore,!1),d.comment&&(R=!0));let p=U(N.value)?N.value:null;p?(p.comment&&(l=p.comment),p.commentBefore&&(R=!0)):N.value==null&&d?.comment&&(l=d.comment)}l&&(R=!0);let u=We(N,i,()=>l=null);_<t.length-1&&(u+=","),l&&(u+=be(u,r,o(l))),!R&&(a.length>A||u.includes(`
`))&&(R=!0),a.push(u),A=a.length}let{start:O,end:I}=E;if(a.length===0)return O+I;if(!R){let _=a.reduce((N,l)=>N+l.length+2,2);R=e.options.lineWidth>0&&_>e.options.lineWidth}if(R){let _=O;for(let N of a)_+=N?`
${T}${n}${N}`:`
`;return`${_}
${n}${I}`}else return`${O}${s}${a.join(" ")}${s}${I}`}function ar({indent:t,options:{commentString:e}},E,r,n){if(r&&n&&(r=r.replace(/^\n+/,"")),r){let T=Pe(e(r),t);E.push(T.trimStart())}}function tt(t,e){let E=h(e)?e.value:e;for(let r of t)if(M(r)&&(r.key===e||r.key===E||h(r.key)&&r.key.value===E))return r}var te=class extends nr{static get tagName(){return"tag:yaml.org,2002:map"}constructor(e){super(Me,e),this.items=[]}static from(e,E,r){let{keepUndefined:n,replacer:T}=r,s=new this(e),o=(i,R)=>{if(typeof T=="function")R=T.call(E,i,R);else if(Array.isArray(T)&&!T.includes(i))return;(R!==void 0||n)&&s.items.push(Bt(i,R,r))};if(E instanceof Map)for(let[i,R]of E)o(i,R);else if(E&&typeof E=="object")for(let i of Object.keys(E))o(i,E[i]);return typeof e.sortMapEntries=="function"&&s.items.sort(e.sortMapEntries),s}add(e,E){let r;M(e)?r=e:!e||typeof e!="object"||!("key"in e)?r=new k(e,e?.value):r=new k(e.key,e.value);let n=tt(this.items,r.key),T=this.schema?.sortMapEntries;if(n){if(!E)throw new Error(`Key ${r.key} already set`);h(n.value)&&rr(r.value)?n.value.value=r.value:n.value=r.value}else if(T){let s=this.items.findIndex(o=>T(r,o)<0);s===-1?this.items.push(r):this.items.splice(s,0,r)}else this.items.push(r)}delete(e){let E=tt(this.items,e);return E?this.items.splice(this.items.indexOf(E),1).length>0:!1}get(e,E){let n=tt(this.items,e)?.value;return(!E&&h(n)?n.value:n)??void 0}has(e){return!!tt(this.items,e)}set(e,E){this.add(new k(e,E),!0)}toJSON(e,E,r){let n=r?new r:E?.mapAsMap?new Map:{};E?.onCreate&&E.onCreate(n);for(let T of this.items)Ar(E,n,T);return n}toString(e,E,r){if(!e)return JSON.stringify(this);for(let n of this.items)if(!M(n))throw new Error(`Map items must all be pairs; found ${JSON.stringify(n)} instead`);return!e.allNullValues&&this.hasAllNullValues(!1)&&(e=Object.assign({},e,{allNullValues:!0})),Sr(this,e,{blockItemPrefix:"",flowChars:{start:"{",end:"}"},itemIndent:e.indent||"",onChompKeep:r,onComment:E})}};var ye={collection:"map",default:!0,nodeClass:te,tag:"tag:yaml.org,2002:map",resolve(t,e){return Ue(t)||e("Expected a mapping for this tag"),t},createNode:(t,e,E)=>te.from(t,e,E)};var ue=class extends nr{static get tagName(){return"tag:yaml.org,2002:seq"}constructor(e){super(ve,e),this.items=[]}add(e){this.items.push(e)}delete(e){let E=Or(e);return typeof E!="number"?!1:this.items.splice(E,1).length>0}get(e,E){let r=Or(e);if(typeof r!="number")return;let n=this.items[r];return!E&&h(n)?n.value:n}has(e){let E=Or(e);return typeof E=="number"&&E<this.items.length}set(e,E){let r=Or(e);if(typeof r!="number")throw new Error(`Expected a valid index, not ${e}.`);let n=this.items[r];h(n)&&rr(E)?n.value=E:this.items[r]=E}toJSON(e,E){let r=[];E?.onCreate&&E.onCreate(r);let n=0;for(let T of this.items)r.push($(T,String(n++),E));return r}toString(e,E,r){return e?Sr(this,e,{blockItemPrefix:"- ",flowChars:{start:"[",end:"]"},itemIndent:(e.indent||"")+"  ",onChompKeep:r,onComment:E}):JSON.stringify(this)}static from(e,E,r){let{replacer:n}=r,T=new this(e);if(E&&Symbol.iterator in Object(E)){let s=0;for(let o of E){if(typeof n=="function"){let i=E instanceof Set?o:String(s++);o=n.call(E,i,o)}T.items.push(we(o,void 0,r))}}return T}};function Or(t){let e=h(t)?t.value:t;return e&&typeof e=="string"&&(e=Number(e)),typeof e=="number"&&Number.isInteger(e)&&e>=0?e:null}var Be={collection:"seq",default:!0,nodeClass:ue,tag:"tag:yaml.org,2002:seq",resolve(t,e){return ge(t)||e("Expected a sequence for this tag"),t},createNode:(t,e,E)=>ue.from(t,e,E)};var Et={identify:t=>typeof t=="string",default:!0,tag:"tag:yaml.org,2002:str",resolve:t=>t,stringify(t,e,E,r){return e=Object.assign({actualString:!0},e),lt(t,e,E,r)}};var Ct={identify:t=>t==null,createNode:()=>new P(null),default:!0,tag:"tag:yaml.org,2002:null",test:/^(?:~|[Nn]ull|NULL)?$/,resolve:()=>new P(null),stringify:({source:t},e)=>typeof t=="string"&&Ct.test.test(t)?t:e.options.nullStr};var RE={identify:t=>typeof t=="boolean",default:!0,tag:"tag:yaml.org,2002:bool",test:/^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,resolve:t=>new P(t[0]==="t"||t[0]==="T"),stringify({source:t,value:e},E){if(t&&RE.test.test(t)){let r=t[0]==="t"||t[0]==="T";if(e===r)return t}return e?E.options.trueStr:E.options.falseStr}};function ne({format:t,minFractionDigits:e,tag:E,value:r}){if(typeof r=="bigint")return String(r);let n=typeof r=="number"?r:Number(r);if(!isFinite(n))return isNaN(n)?".nan":n<0?"-.inf":".inf";let T=JSON.stringify(r);if(!t&&e&&(!E||E==="tag:yaml.org,2002:float")&&/^\d/.test(T)){let s=T.indexOf(".");s<0&&(s=T.length,T+=".");let o=e-(T.length-s-1);for(;o-- >0;)T+="0"}return T}var Ir={identify:t=>typeof t=="number",default:!0,tag:"tag:yaml.org,2002:float",test:/^(?:[-+]?\.(?:inf|Inf|INF)|\.nan|\.NaN|\.NAN)$/,resolve:t=>t.slice(-3).toLowerCase()==="nan"?NaN:t[0]==="-"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,stringify:ne},Nr={identify:t=>typeof t=="number",default:!0,tag:"tag:yaml.org,2002:float",format:"EXP",test:/^[-+]?(?:\.[0-9]+|[0-9]+(?:\.[0-9]*)?)[eE][-+]?[0-9]+$/,resolve:t=>parseFloat(t),stringify(t){let e=Number(t.value);return isFinite(e)?e.toExponential():ne(t)}},lr={identify:t=>typeof t=="number",default:!0,tag:"tag:yaml.org,2002:float",test:/^[-+]?(?:\.[0-9]+|[0-9]+\.[0-9]*)$/,resolve(t){let e=new P(parseFloat(t)),E=t.indexOf(".");return E!==-1&&t[t.length-1]==="0"&&(e.minFractionDigits=t.length-E-1),e},stringify:ne};var Cr=t=>typeof t=="bigint"||Number.isInteger(t),$n=(t,e,E,{intAsBigInt:r})=>r?BigInt(t):parseInt(t.substring(e),E);function Ti(t,e,E){let{value:r}=t;return Cr(r)&&r>=0?E+r.toString(e):ne(t)}var _r={identify:t=>Cr(t)&&t>=0,default:!0,tag:"tag:yaml.org,2002:int",format:"OCT",test:/^0o[0-7]+$/,resolve:(t,e,E)=>$n(t,2,8,E),stringify:t=>Ti(t,8,"0o")},Lr={identify:Cr,default:!0,tag:"tag:yaml.org,2002:int",test:/^[-+]?[0-9]+$/,resolve:(t,e,E)=>$n(t,0,10,E),stringify:ne},cr={identify:t=>Cr(t)&&t>=0,default:!0,tag:"tag:yaml.org,2002:int",format:"HEX",test:/^0x[0-9a-fA-F]+$/,resolve:(t,e,E)=>$n(t,2,16,E),stringify:t=>Ti(t,16,"0x")};var si=[ye,Be,Et,Ct,RE,_r,Lr,cr,Ir,Nr,lr];function ii(t){return typeof t=="bigint"||Number.isInteger(t)}var ur=({value:t})=>JSON.stringify(t),uS=[{identify:t=>typeof t=="string",default:!0,tag:"tag:yaml.org,2002:str",resolve:t=>t,stringify:ur},{identify:t=>t==null,createNode:()=>new P(null),default:!0,tag:"tag:yaml.org,2002:null",test:/^null$/,resolve:()=>null,stringify:ur},{identify:t=>typeof t=="boolean",default:!0,tag:"tag:yaml.org,2002:bool",test:/^true|false$/,resolve:t=>t==="true",stringify:ur},{identify:ii,default:!0,tag:"tag:yaml.org,2002:int",test:/^-?(?:0|[1-9][0-9]*)$/,resolve:(t,e,{intAsBigInt:E})=>E?BigInt(t):parseInt(t,10),stringify:({value:t})=>ii(t)?t.toString():JSON.stringify(t)},{identify:t=>typeof t=="number",default:!0,tag:"tag:yaml.org,2002:float",test:/^-?(?:0|[1-9][0-9]*)(?:\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,resolve:t=>parseFloat(t),stringify:ur}],fS={default:!0,tag:"",test:/^/,resolve(t,e){return e(`Unresolved plain scalar ${JSON.stringify(t)}`),t}},oi=[ye,Be].concat(uS,fS);var AE={identify:t=>t instanceof Uint8Array,default:!1,tag:"tag:yaml.org,2002:binary",resolve(t,e){if(typeof Buffer=="function")return Buffer.from(t,"base64");if(typeof atob=="function"){let E=atob(t.replace(/[\n\r]/g,"")),r=new Uint8Array(E.length);for(let n=0;n<E.length;++n)r[n]=E.charCodeAt(n);return r}else return e("This environment does not support reading binary tags; either Buffer or atob is required"),t},stringify({comment:t,type:e,value:E},r,n,T){let s=E,o;if(typeof Buffer=="function")o=s instanceof Buffer?s.toString("base64"):Buffer.from(s.buffer).toString("base64");else if(typeof btoa=="function"){let i="";for(let R=0;R<s.length;++R)i+=String.fromCharCode(s[R]);o=btoa(i)}else throw new Error("This environment does not support writing binary tags; either Buffer or btoa is required");if(e||(e=P.BLOCK_LITERAL),e!==P.QUOTE_DOUBLE){let i=Math.max(r.options.lineWidth-r.indent.length,r.options.minContentWidth),R=Math.ceil(o.length/i),A=new Array(R);for(let a=0,O=0;a<R;++a,O+=i)A[a]=o.substr(O,i);o=A.join(e===P.BLOCK_LITERAL?`
`:" ")}return lt({comment:t,type:e,value:o},r,n,T)}};function kn(t,e){if(ge(t))for(let E=0;E<t.items.length;++E){let r=t.items[E];if(!M(r)){if(Ue(r)){r.items.length>1&&e("Each pair must have its own sequence indicator");let n=r.items[0]||new k(new P(null));if(r.commentBefore&&(n.key.commentBefore=n.key.commentBefore?`${r.commentBefore}
${n.key.commentBefore}`:r.commentBefore),r.comment){let T=n.value??n.key;T.comment=T.comment?`${r.comment}
${T.comment}`:r.comment}r=n}t.items[E]=M(r)?r:new k(r)}}else e("Expected a sequence for this tag");return t}function qn(t,e,E){let{replacer:r}=E,n=new ue(t);n.tag="tag:yaml.org,2002:pairs";let T=0;if(e&&Symbol.iterator in Object(e))for(let s of e){typeof r=="function"&&(s=r.call(e,String(T++),s));let o,i;if(Array.isArray(s))if(s.length===2)o=s[0],i=s[1];else throw new TypeError(`Expected [key, value] tuple: ${s}`);else if(s&&s instanceof Object){let R=Object.keys(s);if(R.length===1)o=R[0],i=s[o];else throw new TypeError(`Expected tuple with one key, not ${R.length} keys`)}else o=s;n.items.push(Bt(o,i,E))}return n}var aE={collection:"seq",default:!1,tag:"tag:yaml.org,2002:pairs",resolve:kn,createNode:qn};var Qn=(()=>{class t extends ue{constructor(){super(),this.add=te.prototype.add.bind(this),this.delete=te.prototype.delete.bind(this),this.get=te.prototype.get.bind(this),this.has=te.prototype.has.bind(this),this.set=te.prototype.set.bind(this),this.tag=t.tag}toJSON(E,r){if(!r)return super.toJSON(E);let n=new Map;r?.onCreate&&r.onCreate(n);for(let T of this.items){let s,o;if(M(T)?(s=$(T.key,"",r),o=$(T.value,s,r)):s=$(T,"",r),n.has(s))throw new Error("Ordered maps must not include duplicate keys");n.set(s,o)}return n}static from(E,r,n){let T=qn(E,r,n),s=new this;return s.items=T.items,s}}return t.tag="tag:yaml.org,2002:omap",t})(),SE={collection:"seq",identify:t=>t instanceof Map,nodeClass:Qn,default:!1,tag:"tag:yaml.org,2002:omap",resolve(t,e){let E=kn(t,e),r=[];for(let{key:n}of E.items)h(n)&&(r.includes(n.value)?e(`Ordered maps must not include duplicate keys: ${n.value}`):r.push(n.value));return Object.assign(new Qn,E)},createNode:(t,e,E)=>Qn.from(t,e,E)};function Ri({value:t,source:e},E){return e&&(t?jn:Zn).test.test(e)?e:t?E.options.trueStr:E.options.falseStr}var jn={identify:t=>t===!0,default:!0,tag:"tag:yaml.org,2002:bool",test:/^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,resolve:()=>new P(!0),stringify:Ri},Zn={identify:t=>t===!1,default:!0,tag:"tag:yaml.org,2002:bool",test:/^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/,resolve:()=>new P(!1),stringify:Ri};var Ai={identify:t=>typeof t=="number",default:!0,tag:"tag:yaml.org,2002:float",test:/^(?:[-+]?\.(?:inf|Inf|INF)|\.nan|\.NaN|\.NAN)$/,resolve:t=>t.slice(-3).toLowerCase()==="nan"?NaN:t[0]==="-"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,stringify:ne},ai={identify:t=>typeof t=="number",default:!0,tag:"tag:yaml.org,2002:float",format:"EXP",test:/^[-+]?(?:[0-9][0-9_]*)?(?:\.[0-9_]*)?[eE][-+]?[0-9]+$/,resolve:t=>parseFloat(t.replace(/_/g,"")),stringify(t){let e=Number(t.value);return isFinite(e)?e.toExponential():ne(t)}},Si={identify:t=>typeof t=="number",default:!0,tag:"tag:yaml.org,2002:float",test:/^[-+]?(?:[0-9][0-9_]*)?\.[0-9_]*$/,resolve(t){let e=new P(parseFloat(t.replace(/_/g,""))),E=t.indexOf(".");if(E!==-1){let r=t.substring(E+1).replace(/_/g,"");r[r.length-1]==="0"&&(e.minFractionDigits=r.length)}return e},stringify:ne};var OE=t=>typeof t=="bigint"||Number.isInteger(t);function fr(t,e,E,{intAsBigInt:r}){let n=t[0];if((n==="-"||n==="+")&&(e+=1),t=t.substring(e).replace(/_/g,""),r){switch(E){case 2:t=`0b${t}`;break;case 8:t=`0o${t}`;break;case 16:t=`0x${t}`;break}let s=BigInt(t);return n==="-"?BigInt(-1)*s:s}let T=parseInt(t,E);return n==="-"?-1*T:T}function zn(t,e,E){let{value:r}=t;if(OE(r)){let n=r.toString(e);return r<0?"-"+E+n.substr(1):E+n}return ne(t)}var Oi={identify:OE,default:!0,tag:"tag:yaml.org,2002:int",format:"BIN",test:/^[-+]?0b[0-1_]+$/,resolve:(t,e,E)=>fr(t,2,2,E),stringify:t=>zn(t,2,"0b")},Ii={identify:OE,default:!0,tag:"tag:yaml.org,2002:int",format:"OCT",test:/^[-+]?0[0-7_]+$/,resolve:(t,e,E)=>fr(t,1,8,E),stringify:t=>zn(t,8,"0")},Ni={identify:OE,default:!0,tag:"tag:yaml.org,2002:int",test:/^[-+]?[0-9][0-9_]*$/,resolve:(t,e,E)=>fr(t,0,10,E),stringify:ne},li={identify:OE,default:!0,tag:"tag:yaml.org,2002:int",format:"HEX",test:/^[-+]?0x[0-9a-fA-F_]+$/,resolve:(t,e,E)=>fr(t,2,16,E),stringify:t=>zn(t,16,"0x")};var eT=(()=>{class t extends te{constructor(E){super(E),this.tag=t.tag}add(E){let r;M(E)?r=E:E&&typeof E=="object"&&"key"in E&&"value"in E&&E.value===null?r=new k(E.key,null):r=new k(E,null),tt(this.items,r.key)||this.items.push(r)}get(E,r){let n=tt(this.items,E);return!r&&M(n)?h(n.key)?n.key.value:n.key:n}set(E,r){if(typeof r!="boolean")throw new Error(`Expected boolean value for set(key, value) in a YAML set, not ${typeof r}`);let n=tt(this.items,E);n&&!r?this.items.splice(this.items.indexOf(n),1):!n&&r&&this.items.push(new k(E))}toJSON(E,r){return super.toJSON(E,r,Set)}toString(E,r,n){if(!E)return JSON.stringify(this);if(this.hasAllNullValues(!0))return super.toString(Object.assign({},E,{allNullValues:!0}),r,n);throw new Error("Set items must all have null values")}static from(E,r,n){let{replacer:T}=n,s=new this(E);if(r&&Symbol.iterator in Object(r))for(let o of r)typeof T=="function"&&(o=T.call(r,o,o)),s.items.push(Bt(o,null,n));return s}}return t.tag="tag:yaml.org,2002:set",t})(),IE={collection:"map",identify:t=>t instanceof Set,nodeClass:eT,default:!1,tag:"tag:yaml.org,2002:set",createNode:(t,e,E)=>eT.from(t,e,E),resolve(t,e){if(Ue(t)){if(t.hasAllNullValues(!0))return Object.assign(new eT,t);e("Set items must all have null values")}else e("Expected a mapping for this tag");return t}};function tT(t,e){let E=t[0],r=E==="-"||E==="+"?t.substring(1):t,n=s=>e?BigInt(s):Number(s),T=r.replace(/_/g,"").split(":").reduce((s,o)=>s*n(60)+n(o),n(0));return E==="-"?n(-1)*T:T}function Ci(t){let{value:e}=t,E=s=>s;if(typeof e=="bigint")E=s=>BigInt(s);else if(isNaN(e)||!isFinite(e))return ne(t);let r="";e<0&&(r="-",e*=E(-1));let n=E(60),T=[e%n];return e<60?T.unshift(0):(e=(e-T[0])/n,T.unshift(e%n),e>=60&&(e=(e-T[0])/n,T.unshift(e))),r+T.map(s=>String(s).padStart(2,"0")).join(":").replace(/000000\d*$/,"")}var dr={identify:t=>typeof t=="bigint"||Number.isInteger(t),default:!0,tag:"tag:yaml.org,2002:int",format:"TIME",test:/^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+$/,resolve:(t,e,{intAsBigInt:E})=>tT(t,E),stringify:Ci},Pr={identify:t=>typeof t=="number",default:!0,tag:"tag:yaml.org,2002:float",format:"TIME",test:/^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\.[0-9_]*$/,resolve:t=>tT(t,!1),stringify:Ci},Ft={identify:t=>t instanceof Date,default:!0,tag:"tag:yaml.org,2002:timestamp",test:RegExp("^([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})(?:(?:t|T|[ \\t]+)([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\.[0-9]+)?)(?:[ \\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?)?$"),resolve(t){let e=t.match(Ft.test);if(!e)throw new Error("!!timestamp expects a date, starting with yyyy-mm-dd");let[,E,r,n,T,s,o]=e.map(Number),i=e[7]?Number((e[7]+"00").substr(1,3)):0,R=Date.UTC(E,r-1,n,T||0,s||0,o||0,i),A=e[8];if(A&&A!=="Z"){let a=tT(A,!1);Math.abs(a)<30&&(a*=60),R-=6e4*a}return new Date(R)},stringify:({value:t})=>t.toISOString().replace(/((T00:00)?:00)?\.000Z$/,"")};var ET=[ye,Be,Et,Ct,jn,Zn,Oi,Ii,Ni,li,Ai,ai,Si,AE,SE,aE,IE,dr,Pr,Ft];var _i=new Map([["core",si],["failsafe",[ye,Be,Et]],["json",oi],["yaml11",ET],["yaml-1.1",ET]]),Li={binary:AE,bool:RE,float:lr,floatExp:Nr,floatNaN:Ir,floatTime:Pr,int:Lr,intHex:cr,intOct:_r,intTime:dr,map:ye,null:Ct,omap:SE,pairs:aE,seq:Be,set:IE,timestamp:Ft},ci={"tag:yaml.org,2002:binary":AE,"tag:yaml.org,2002:omap":SE,"tag:yaml.org,2002:pairs":aE,"tag:yaml.org,2002:set":IE,"tag:yaml.org,2002:timestamp":Ft};function Dr(t,e){let E=_i.get(e);if(!E)if(Array.isArray(t))E=[];else{let r=Array.from(_i.keys()).filter(n=>n!=="yaml11").map(n=>JSON.stringify(n)).join(", ");throw new Error(`Unknown schema "${e}"; use one of ${r} or define customTags array`)}if(Array.isArray(t))for(let r of t)E=E.concat(r);else typeof t=="function"&&(E=t(E.slice()));return E.map(r=>{if(typeof r!="string")return r;let n=Li[r];if(n)return n;let T=Object.keys(Li).map(s=>JSON.stringify(s)).join(", ");throw new Error(`Unknown custom tag "${r}"; use one of ${T}`)})}var dS=(t,e)=>t.key<e.key?-1:t.key>e.key?1:0,NE=class t{constructor({compat:e,customTags:E,merge:r,resolveKnownTags:n,schema:T,sortMapEntries:s,toStringDefaults:o}){this.compat=Array.isArray(e)?Dr(e,"compat"):e?Dr(null,e):null,this.merge=!!r,this.name=typeof T=="string"&&T||"core",this.knownTags=n?ci:{},this.tags=Dr(E,this.name),this.toStringOptions=o??null,Object.defineProperty(this,Me,{value:ye}),Object.defineProperty(this,Nt,{value:Et}),Object.defineProperty(this,ve,{value:Be}),this.sortMapEntries=typeof s=="function"?s:s===!0?dS:null}clone(){let e=Object.create(t.prototype,Object.getOwnPropertyDescriptors(this));return e.tags=this.tags.slice(),e}};function ui(t,e){let E=[],r=e.directives===!0;if(e.directives!==!1&&t.directives){let i=t.directives.toString(t);i?(E.push(i),r=!0):t.directives.docStart&&(r=!0)}r&&E.push("---");let n=Rr(t,e),{commentString:T}=n.options;if(t.commentBefore){E.length!==1&&E.unshift("");let i=T(t.commentBefore);E.unshift(Pe(i,""))}let s=!1,o=null;if(t.contents){if(U(t.contents)){if(t.contents.spaceBefore&&r&&E.push(""),t.contents.commentBefore){let A=T(t.contents.commentBefore);E.push(Pe(A,""))}n.forceBlockIndent=!!t.comment,o=t.contents.comment}let i=o?void 0:()=>s=!0,R=We(t.contents,n,()=>o=null,i);o&&(R+=be(R,"",T(o))),(R[0]==="|"||R[0]===">")&&E[E.length-1]==="---"?E[E.length-1]=`--- ${R}`:E.push(R)}else E.push(We(t.contents,n));if(t.directives?.docEnd)if(t.comment){let i=T(t.comment);i.includes(`
`)?(E.push("..."),E.push(Pe(i,""))):E.push(`... ${i}`)}else E.push("...");else{let i=t.comment;i&&s&&(i=i.replace(/^\n+/,"")),i&&((!s||o)&&E[E.length-1]!==""&&E.push(""),E.push(Pe(T(i),"")))}return E.join(`
`)+`
`}var _t=class t{constructor(e,E,r){this.commentBefore=null,this.comment=null,this.errors=[],this.warnings=[],Object.defineProperty(this,se,{value:zE});let n=null;typeof E=="function"||Array.isArray(E)?n=E:r===void 0&&E&&(r=E,E=void 0);let T=Object.assign({intAsBigInt:!1,keepSourceTokens:!1,logLevel:"warn",prettyErrors:!0,strict:!0,uniqueKeys:!0,version:"1.2"},r);this.options=T;let{version:s}=T;r?._directives?(this.directives=r._directives.atDocument(),this.directives.yaml.explicit&&(s=this.directives.yaml.version)):this.directives=new nE({version:s}),this.setSchema(s,r),this.contents=e===void 0?null:this.createNode(e,n,r)}clone(){let e=Object.create(t.prototype,{[se]:{value:zE}});return e.commentBefore=this.commentBefore,e.comment=this.comment,e.errors=this.errors.slice(),e.warnings=this.warnings.slice(),e.options=Object.assign({},this.options),this.directives&&(e.directives=this.directives.clone()),e.schema=this.schema.clone(),e.contents=U(this.contents)?this.contents.clone(e.schema):this.contents,this.range&&(e.range=this.range.slice()),e}add(e){Ht(this.contents)&&this.contents.add(e)}addIn(e,E){Ht(this.contents)&&this.contents.addIn(e,E)}createAlias(e,E){if(!e.anchor){let r=Vn(this);e.anchor=!E||r.has(E)?wn(E||"a",r):E}return new et(e.anchor)}createNode(e,E,r){let n;if(typeof E=="function")e=E.call({"":e},"",e),n=E;else if(Array.isArray(E)){let l=d=>typeof d=="number"||d instanceof String||d instanceof Number,u=E.filter(l).map(String);u.length>0&&(E=E.concat(u)),n=E}else r===void 0&&E&&(r=E,E=void 0);let{aliasDuplicateObjects:T,anchorPrefix:s,flow:o,keepUndefined:i,onTagObj:R,tag:A}=r??{},{onAnchor:a,setAnchors:O,sourceObjects:I}=ei(this,s||"a"),_={aliasDuplicateObjects:T??!0,keepUndefined:i??!1,onAnchor:a,onTagObj:R,replacer:n,schema:this.schema,sourceObjects:I},N=we(e,A,_);return o&&G(N)&&(N.flow=!0),O(),N}createPair(e,E,r={}){let n=this.createNode(e,null,r),T=this.createNode(E,null,r);return new k(n,T)}delete(e){return Ht(this.contents)?this.contents.delete(e):!1}deleteIn(e){return Gt(e)?this.contents==null?!1:(this.contents=null,!0):Ht(this.contents)?this.contents.deleteIn(e):!1}get(e,E){return G(this.contents)?this.contents.get(e,E):void 0}getIn(e,E){return Gt(e)?!E&&h(this.contents)?this.contents.value:this.contents:G(this.contents)?this.contents.getIn(e,E):void 0}has(e){return G(this.contents)?this.contents.has(e):!1}hasIn(e){return Gt(e)?this.contents!==void 0:G(this.contents)?this.contents.hasIn(e):!1}set(e,E){this.contents==null?this.contents=TE(this.schema,[e],E):Ht(this.contents)&&this.contents.set(e,E)}setIn(e,E){Gt(e)?this.contents=E:this.contents==null?this.contents=TE(this.schema,Array.from(e),E):Ht(this.contents)&&this.contents.setIn(e,E)}setSchema(e,E={}){typeof e=="number"&&(e=String(e));let r;switch(e){case"1.1":this.directives?this.directives.yaml.version="1.1":this.directives=new nE({version:"1.1"}),r={merge:!0,resolveKnownTags:!1,schema:"yaml-1.1"};break;case"1.2":case"next":this.directives?this.directives.yaml.version=e:this.directives=new nE({version:e}),r={merge:!1,resolveKnownTags:!0,schema:"core"};break;case null:this.directives&&delete this.directives,r=null;break;default:{let n=JSON.stringify(e);throw new Error(`Expected '1.1', '1.2' or null as first argument, but found: ${n}`)}}if(E.schema instanceof Object)this.schema=E.schema;else if(r)this.schema=new NE(Object.assign(r,E));else throw new Error("With a null YAML version, the { schema: Schema } option is required")}toJS({json:e,jsonArg:E,mapAsMap:r,maxAliasCount:n,onAnchor:T,reviver:s}={}){let o={anchors:new Map,doc:this,keep:!e,mapAsMap:r===!0,mapKeyWarned:!1,maxAliasCount:typeof n=="number"?n:100},i=$(this.contents,E??"",o);if(typeof T=="function")for(let{count:R,res:A}of o.anchors.values())T(A,R);return typeof s=="function"?Ze(s,{"":i},"",i):i}toJSON(e,E){return this.toJS({json:!0,jsonArg:e,mapAsMap:!1,onAnchor:E})}toString(e={}){if(this.errors.length>0)throw new Error("Document with errors cannot be stringified");if("indent"in e&&(!Number.isInteger(e.indent)||Number(e.indent)<=0)){let E=JSON.stringify(e.indent);throw new Error(`"indent" option must be a positive integer, not ${E}`)}return ui(this,e)}};function Ht(t){if(G(t))return!0;throw new Error("Expected a YAML collection as document contents")}var TT=Symbol("break visit"),mS=Symbol("skip children"),Pi=Symbol("remove item");function Lt(t,e){"type"in t&&t.type==="document"&&(t={start:t.start,value:t.value}),Di(Object.freeze([]),t,e)}Lt.BREAK=TT;Lt.SKIP=mS;Lt.REMOVE=Pi;Lt.itemAtPath=(t,e)=>{let E=t;for(let[r,n]of e){let T=E?.[r];if(T&&"items"in T)E=T.items[n];else return}return E};Lt.parentCollection=(t,e)=>{let E=Lt.itemAtPath(t,e.slice(0,-1)),r=e[e.length-1][0],n=E?.[r];if(n&&"items"in n)return n;throw new Error("Parent collection not found")};function Di(t,e,E){let r=E(e,t);if(typeof r=="symbol")return r;for(let n of["key","value"]){let T=e[n];if(T&&"items"in T){for(let s=0;s<T.items.length;++s){let o=Di(Object.freeze(t.concat([[n,s]])),T.items[s],E);if(typeof o=="number")s=o-1;else{if(o===TT)return TT;o===Pi&&(T.items.splice(s,1),s-=1)}}typeof r=="function"&&n==="key"&&(r=r(e,t))}}return typeof r=="function"?r(e,t):r}var dP=new Set("0123456789ABCDEFabcdef"),PP=new Set("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-#;/?:@&=+$_.!~*'()"),DP=new Set(",[]{}"),pP=new Set(` ,[]{}
\r	`);function sT(t,e,E){let r=null;if(typeof e=="function"||Array.isArray(e)?r=e:E===void 0&&e&&(E=e),typeof E=="string"&&(E=E.length),typeof E=="number"){let n=Math.round(E);E=n<1?void 0:n>8?{indent:8}:{indent:n}}if(t===void 0){let{keepUndefined:n}=E??e??{};if(!n)return}return new _t(t,r,E).toString(E)}function HS(t,e){if(t&1&&(L(0,"mat-radio-button",2),F(1),c()),t&2){let E=e.$implicit;fe("value",E),B(),$e(E)}}var hi=(()=>{let e=class e{constructor(){this.favoriteSeason="",this.seasons=["XML","YML"],this.original="",this.result=""}onChange(r){let n=JSON.parse(this.original);r==="XML"&&(this.result=this.convertXML(n)),r==="YML"&&(this.result=sT(n))}convertXML(r){return pi.parse("root",r,{format:{doubleQuotes:!0},declaration:{include:!1}})}};e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=b({type:e,selectors:[["app-dev-tools-converts-json"]],standalone:!0,features:[V],decls:9,vars:3,consts:[[2,"display","flex","flex-direction","row-reverse","padding-right","12px"],["aria-labelledby","example-radio-group-label",1,"example-radio-group",3,"ngModelChange","ngModel"],[1,"example-radio-button",3,"value"],[1,"parent"],[1,"item"],["type","text",2,"width","100%","height","100%",3,"ngModelChange","ngModel"],[1,"item","last"],["readonly","","type","text",2,"width","100%","height","100%","background-color","whitesmoke",3,"ngModelChange","ngModel"]],template:function(n,T){n&1&&(L(0,"div",0)(1,"mat-radio-group",1),Re("ngModelChange",function(o){return T.onChange(o)}),K("ngModelChange",function(o){return x(T.favoriteSeason,o)||(T.favoriteSeason=o),o}),Ke(2,HS,2,2,"mat-radio-button",2,xe),c()(),L(4,"div",3)(5,"div",4)(6,"textarea",5),K("ngModelChange",function(o){return x(T.original,o)||(T.original=o),o}),c()(),L(7,"div",6)(8,"textarea",7),K("ngModelChange",function(o){return x(T.result,o)||(T.result=o),o}),c()()()),n&2&&(B(),X("ngModel",T.favoriteSeason),B(),Je(T.seasons),B(4),X("ngModel",T.original),B(2),X("ngModel",T.result))},dependencies:[ae,Ce,Ne,Se,Oe,Ie,Ae,le,ke,qe],styles:[".parent[_ngcontent-%COMP%]{display:flex;font-family:arial,sans-serif}.item[_ngcontent-%COMP%]{width:50%;padding:2em;color:#fff;background:#eee;min-height:500px}.last[_ngcontent-%COMP%]{color:#222;background:#eee}@media screen and (max-width: 600px){.parent[_ngcontent-%COMP%]{flex-direction:column-reverse}.item[_ngcontent-%COMP%]{width:auto;min-height:200px}.last[_ngcontent-%COMP%]{background:#a00}}"]});let t=e;return t})();var Mi=(()=>{let e=class e{constructor(){}ngOnInit(){}};e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=b({type:e,selectors:[["app-dev-tools-converts-timestamp"]],standalone:!0,features:[V],decls:3,vars:0,template:function(n,T){n&1&&(Y(0,"page-header"),L(1,"p"),F(2,"timestamp works!"),c())},dependencies:[GE]});let t=e;return t})();var mi=(()=>{let e=class e{constructor(){}};e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=b({type:e,selectors:[["app-dev-tools-converts"]],standalone:!0,features:[V],decls:11,vars:0,consts:[[1,"tab-wrap"],["checked","","id","tab1","name","tabGroup2","type","radio",1,"tab"],["for","tab1"],["id","tab5","name","tabGroup2","type","radio",1,"tab"],["for","tab5"],[1,"tab__content"]],template:function(n,T){n&1&&(L(0,"div",0),Y(1,"input",1),L(2,"label",2),F(3,"JSON"),c(),Y(4,"input",3),L(5,"label",4),F(6,"Timestamp"),c(),L(7,"div",5),Y(8,"app-dev-tools-converts-json"),c(),L(9,"div",5),Y(10,"app-dev-tools-converts-timestamp"),c()())},dependencies:[hi,Mi],styles:[".tab-wrap[_ngcontent-%COMP%]{transition:.3s box-shadow ease;border-radius:6px;max-width:100%;display:flex;flex-wrap:wrap;position:relative;list-style:none;background-color:#fff;margin:0;box-shadow:0 1px 3px #0000001f,0 1px 2px #0000003d}.tab-wrap[_ngcontent-%COMP%]:hover{box-shadow:0 12px 23px #0000003b,0 10px 10px #00000030}.tab[_ngcontent-%COMP%]{display:none}.tab[_ngcontent-%COMP%]:checked:nth-of-type(1) ~ .tab__content[_ngcontent-%COMP%]:nth-of-type(1){opacity:1;transition:.5s opacity ease-in,.8s transform ease;position:relative;top:0;z-index:100;transform:translateY(0);text-shadow:0 0 0}.tab[_ngcontent-%COMP%]:checked:nth-of-type(2) ~ .tab__content[_ngcontent-%COMP%]:nth-of-type(2){opacity:1;transition:.5s opacity ease-in,.8s transform ease;position:relative;top:0;z-index:100;transform:translateY(0);text-shadow:0 0 0}.tab[_ngcontent-%COMP%]:checked:nth-of-type(3) ~ .tab__content[_ngcontent-%COMP%]:nth-of-type(3){opacity:1;transition:.5s opacity ease-in,.8s transform ease;position:relative;top:0;z-index:100;transform:translateY(0);text-shadow:0 0 0}.tab[_ngcontent-%COMP%]:checked:nth-of-type(4) ~ .tab__content[_ngcontent-%COMP%]:nth-of-type(4){opacity:1;transition:.5s opacity ease-in,.8s transform ease;position:relative;top:0;z-index:100;transform:translateY(0);text-shadow:0 0 0}.tab[_ngcontent-%COMP%]:checked:nth-of-type(5) ~ .tab__content[_ngcontent-%COMP%]:nth-of-type(5){opacity:1;transition:.5s opacity ease-in,.8s transform ease;position:relative;top:0;z-index:100;transform:translateY(0);text-shadow:0 0 0}.tab[_ngcontent-%COMP%]:first-of-type:not(:last-of-type) + label[_ngcontent-%COMP%]{border-top-right-radius:0;border-bottom-right-radius:0}.tab[_ngcontent-%COMP%]:not(:first-of-type):not(:last-of-type) + label[_ngcontent-%COMP%]{border-radius:0}.tab[_ngcontent-%COMP%]:last-of-type:not(:first-of-type) + label[_ngcontent-%COMP%]{border-top-left-radius:0;border-bottom-left-radius:0}.tab[_ngcontent-%COMP%]:checked + label[_ngcontent-%COMP%]{background-color:#fff;box-shadow:0 -1px #fff inset;cursor:default}.tab[_ngcontent-%COMP%]:checked + label[_ngcontent-%COMP%]:hover{box-shadow:0 -1px #fff inset;background-color:#fff}.tab[_ngcontent-%COMP%] + label[_ngcontent-%COMP%]{box-shadow:0 -1px #eee inset;border-radius:6px 6px 0 0;cursor:pointer;display:block;text-decoration:none;color:#333;flex-grow:3;background-color:#f2f2f2;-webkit-user-select:none;user-select:none;text-align:center;transition:.3s background-color ease,.3s box-shadow ease;height:50px;box-sizing:border-box;padding:15px}.tab[_ngcontent-%COMP%] + label[_ngcontent-%COMP%]:hover{background-color:#f9f9f9;box-shadow:0 1px #f4f4f4 inset}.tab__content[_ngcontent-%COMP%]{padding:10px 25px;background-color:transparent;position:absolute;width:100%;z-index:-1;opacity:0;left:0;transform:translateY(-3px);border-radius:6px}body[_ngcontent-%COMP%]{font-family:Helvetica,sans-serif;background-color:#e7e7e7;color:#777;padding:30px 0;font-weight:300}.container[_ngcontent-%COMP%]{margin:0 auto;display:block;max-width:800px}.container[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]:not(.tab-wrap){padding:0 80px}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%]{margin:0;color:#444;text-align:center;font-weight:400}h2[_ngcontent-%COMP%]{font-size:1em;margin-bottom:30px}h3[_ngcontent-%COMP%]{font-weight:400}p[_ngcontent-%COMP%]{line-height:1.6;margin-bottom:20px}"]});let t=e;return t})();var Ui=(()=>{let e=class e{constructor(){}ngOnInit(){}};e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=b({type:e,selectors:[["app-dev-tools-hashing"]],standalone:!0,features:[V],decls:3,vars:0,template:function(n,T){n&1&&(Y(0,"page-header"),L(1,"p"),F(2,"hashing works!"),c())},dependencies:[GE]});let t=e;return t})();function YS(t,e){if(t&1&&(L(0,"mat-radio-button",2),F(1),c()),t&2){let E=e.$implicit;fe("value",E),B(),$e(E)}}var gi=(()=>{let e=class e{constructor(){this.favoriteSeason="",this.seasons=["Prettify","Uglify"],this.original=""}onChange(r){let n=JSON.parse(this.original);r==="Prettify"?this.original=JSON.stringify(n,null,2):r==="Uglify"&&(this.original=JSON.stringify(JSON.parse(this.original)))}};e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=b({type:e,selectors:[["app-dev-tools-formatters-json"]],standalone:!0,features:[V],decls:7,vars:2,consts:[[2,"display","flex","flex-direction","row-reverse","padding-right","12px"],["aria-labelledby","example-radio-group-label",1,"example-radio-group",3,"ngModelChange","ngModel"],[1,"example-radio-button",3,"value"],[1,"parent"],[1,"item"],["type","text",2,"width","100%","height","100%","min-height","300px",3,"ngModelChange","ngModel"]],template:function(n,T){n&1&&(L(0,"div",0)(1,"mat-radio-group",1),Re("ngModelChange",function(o){return T.onChange(o)}),K("ngModelChange",function(o){return x(T.favoriteSeason,o)||(T.favoriteSeason=o),o}),Ke(2,YS,2,2,"mat-radio-button",2,xe),c()(),L(4,"div",3)(5,"div",4)(6,"textarea",5),K("ngModelChange",function(o){return x(T.original,o)||(T.original=o),o}),c()()()),n&2&&(B(),X("ngModel",T.favoriteSeason),B(),Je(T.seasons),B(4),X("ngModel",T.original))},dependencies:[ae,Ce,Ne,Se,Oe,Ie,Ae,le,ke,qe]});let t=e;return t})();var fo=hE(yi(),1),Ao=Object.defineProperty,bS=Object.defineProperties,vS=Object.getOwnPropertyDescriptors,Ur=Object.getOwnPropertySymbols,ao=Object.prototype.hasOwnProperty,So=Object.prototype.propertyIsEnumerable,Bi=(t,e,E)=>e in t?Ao(t,e,{enumerable:!0,configurable:!0,writable:!0,value:E}):t[e]=E,Ee=(t,e)=>{for(var E in e||(e={}))ao.call(e,E)&&Bi(t,E,e[E]);if(Ur)for(var E of Ur(e))So.call(e,E)&&Bi(t,E,e[E]);return t},ie=(t,e)=>bS(t,vS(e)),VS=(t,e)=>{var E={};for(var r in t)ao.call(t,r)&&e.indexOf(r)<0&&(E[r]=t[r]);if(t!=null&&Ur)for(var r of Ur(t))e.indexOf(r)<0&&So.call(t,r)&&(E[r]=t[r]);return E},wS=(t,e)=>{for(var E in e)Ao(t,E,{get:e[E],enumerable:!0})},Oo={};wS(Oo,{bigquery:()=>TO,db2:()=>_O,db2i:()=>hO,hive:()=>HO,mariadb:()=>KO,mysql:()=>eI,n1ql:()=>_I,plsql:()=>hI,postgresql:()=>YI,redshift:()=>JI,singlestoredb:()=>$N,snowflake:()=>El,spark:()=>tN,sql:()=>cN,sqlite:()=>aN,tidb:()=>RI,transactsql:()=>bN,trino:()=>mN});var S=t=>t.flatMap(WS),WS=t=>Mr(xS(t)).map(XS),XS=t=>t.replace(/ +/g," ").trim(),xS=t=>({type:"mandatory_block",items:gT(t,0)[0]}),gT=(t,e,E)=>{let r=[];for(;t[e];){let[n,T]=KS(t,e);if(r.push(n),e=T,t[e]==="|")e++;else if(t[e]==="}"||t[e]==="]"){if(E!==t[e])throw new Error(`Unbalanced parenthesis in: ${t}`);return e++,[r,e]}else if(e===t.length){if(E)throw new Error(`Unbalanced parenthesis in: ${t}`);return[r,e]}else throw new Error(`Unexpected "${t[e]}"`)}return[r,e]},KS=(t,e)=>{let E=[];for(;;){let[r,n]=JS(t,e);if(r)E.push(r),e=n;else break}return E.length===1?[E[0],e]:[{type:"concatenation",items:E},e]},JS=(t,e)=>{if(t[e]==="{")return $S(t,e+1);if(t[e]==="[")return kS(t,e+1);{let E="";for(;t[e]&&/[A-Za-z0-9_ ]/.test(t[e]);)E+=t[e],e++;return[E,e]}},$S=(t,e)=>{let[E,r]=gT(t,e,"}");return[{type:"mandatory_block",items:E},r]},kS=(t,e)=>{let[E,r]=gT(t,e,"]");return[{type:"optional_block",items:E},r]},Mr=t=>{if(typeof t=="string")return[t];if(t.type==="concatenation")return t.items.map(Mr).reduce(qS,[""]);if(t.type==="mandatory_block")return t.items.flatMap(Mr);if(t.type==="optional_block")return["",...t.items.flatMap(Mr)];throw new Error(`Unknown node type: ${t}`)},qS=(t,e)=>{let E=[];for(let r of t)for(let n of e)E.push(r+n);return E},Io=(t=>(t.QUOTED_IDENTIFIER="QUOTED_IDENTIFIER",t.IDENTIFIER="IDENTIFIER",t.STRING="STRING",t.VARIABLE="VARIABLE",t.RESERVED_DATA_TYPE="RESERVED_DATA_TYPE",t.RESERVED_PARAMETERIZED_DATA_TYPE="RESERVED_PARAMETERIZED_DATA_TYPE",t.RESERVED_KEYWORD="RESERVED_KEYWORD",t.RESERVED_FUNCTION_NAME="RESERVED_FUNCTION_NAME",t.RESERVED_PHRASE="RESERVED_PHRASE",t.RESERVED_SET_OPERATION="RESERVED_SET_OPERATION",t.RESERVED_CLAUSE="RESERVED_CLAUSE",t.RESERVED_SELECT="RESERVED_SELECT",t.RESERVED_JOIN="RESERVED_JOIN",t.ARRAY_IDENTIFIER="ARRAY_IDENTIFIER",t.ARRAY_KEYWORD="ARRAY_KEYWORD",t.CASE="CASE",t.END="END",t.WHEN="WHEN",t.ELSE="ELSE",t.THEN="THEN",t.LIMIT="LIMIT",t.BETWEEN="BETWEEN",t.AND="AND",t.OR="OR",t.XOR="XOR",t.OPERATOR="OPERATOR",t.COMMA="COMMA",t.ASTERISK="ASTERISK",t.PROPERTY_ACCESS_OPERATOR="PROPERTY_ACCESS_OPERATOR",t.OPEN_PAREN="OPEN_PAREN",t.CLOSE_PAREN="CLOSE_PAREN",t.LINE_COMMENT="LINE_COMMENT",t.BLOCK_COMMENT="BLOCK_COMMENT",t.DISABLE_COMMENT="DISABLE_COMMENT",t.NUMBER="NUMBER",t.NAMED_PARAMETER="NAMED_PARAMETER",t.QUOTED_PARAMETER="QUOTED_PARAMETER",t.NUMBERED_PARAMETER="NUMBERED_PARAMETER",t.POSITIONAL_PARAMETER="POSITIONAL_PARAMETER",t.CUSTOM_PARAMETER="CUSTOM_PARAMETER",t.DELIMITER="DELIMITER",t.EOF="EOF",t))(Io||{}),No=t=>({type:"EOF",raw:"\xABEOF\xBB",text:"\xABEOF\xBB",start:t}),Vt=No(1/0),bt=t=>e=>e.type===t.type&&e.text===t.text,ut={ARRAY:bt({text:"ARRAY",type:"RESERVED_DATA_TYPE"}),BY:bt({text:"BY",type:"RESERVED_KEYWORD"}),SET:bt({text:"SET",type:"RESERVED_CLAUSE"}),STRUCT:bt({text:"STRUCT",type:"RESERVED_DATA_TYPE"}),WINDOW:bt({text:"WINDOW",type:"RESERVED_CLAUSE"}),VALUES:bt({text:"VALUES",type:"RESERVED_CLAUSE"})},lo=t=>t==="RESERVED_DATA_TYPE"||t==="RESERVED_KEYWORD"||t==="RESERVED_FUNCTION_NAME"||t==="RESERVED_PHRASE"||t==="RESERVED_CLAUSE"||t==="RESERVED_SELECT"||t==="RESERVED_SET_OPERATION"||t==="RESERVED_JOIN"||t==="ARRAY_KEYWORD"||t==="CASE"||t==="END"||t==="WHEN"||t==="ELSE"||t==="THEN"||t==="LIMIT"||t==="BETWEEN"||t==="AND"||t==="OR"||t==="XOR",QS=t=>t==="AND"||t==="OR"||t==="XOR",jS=["KEYS.NEW_KEYSET","KEYS.ADD_KEY_FROM_RAW_BYTES","AEAD.DECRYPT_BYTES","AEAD.DECRYPT_STRING","AEAD.ENCRYPT","KEYS.KEYSET_CHAIN","KEYS.KEYSET_FROM_JSON","KEYS.KEYSET_TO_JSON","KEYS.ROTATE_KEYSET","KEYS.KEYSET_LENGTH","ANY_VALUE","ARRAY_AGG","AVG","CORR","COUNT","COUNTIF","COVAR_POP","COVAR_SAMP","MAX","MIN","ST_CLUSTERDBSCAN","STDDEV_POP","STDDEV_SAMP","STRING_AGG","SUM","VAR_POP","VAR_SAMP","ANY_VALUE","ARRAY_AGG","ARRAY_CONCAT_AGG","AVG","BIT_AND","BIT_OR","BIT_XOR","COUNT","COUNTIF","LOGICAL_AND","LOGICAL_OR","MAX","MIN","STRING_AGG","SUM","APPROX_COUNT_DISTINCT","APPROX_QUANTILES","APPROX_TOP_COUNT","APPROX_TOP_SUM","ARRAY_CONCAT","ARRAY_LENGTH","ARRAY_TO_STRING","GENERATE_ARRAY","GENERATE_DATE_ARRAY","GENERATE_TIMESTAMP_ARRAY","ARRAY_REVERSE","OFFSET","SAFE_OFFSET","ORDINAL","SAFE_ORDINAL","BIT_COUNT","PARSE_BIGNUMERIC","PARSE_NUMERIC","SAFE_CAST","CURRENT_DATE","EXTRACT","DATE","DATE_ADD","DATE_SUB","DATE_DIFF","DATE_TRUNC","DATE_FROM_UNIX_DATE","FORMAT_DATE","LAST_DAY","PARSE_DATE","UNIX_DATE","CURRENT_DATETIME","DATETIME","EXTRACT","DATETIME_ADD","DATETIME_SUB","DATETIME_DIFF","DATETIME_TRUNC","FORMAT_DATETIME","LAST_DAY","PARSE_DATETIME","ERROR","EXTERNAL_QUERY","S2_CELLIDFROMPOINT","S2_COVERINGCELLIDS","ST_ANGLE","ST_AREA","ST_ASBINARY","ST_ASGEOJSON","ST_ASTEXT","ST_AZIMUTH","ST_BOUNDARY","ST_BOUNDINGBOX","ST_BUFFER","ST_BUFFERWITHTOLERANCE","ST_CENTROID","ST_CENTROID_AGG","ST_CLOSESTPOINT","ST_CLUSTERDBSCAN","ST_CONTAINS","ST_CONVEXHULL","ST_COVEREDBY","ST_COVERS","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_DUMP","ST_DWITHIN","ST_ENDPOINT","ST_EQUALS","ST_EXTENT","ST_EXTERIORRING","ST_GEOGFROM","ST_GEOGFROMGEOJSON","ST_GEOGFROMTEXT","ST_GEOGFROMWKB","ST_GEOGPOINT","ST_GEOGPOINTFROMGEOHASH","ST_GEOHASH","ST_GEOMETRYTYPE","ST_INTERIORRINGS","ST_INTERSECTION","ST_INTERSECTS","ST_INTERSECTSBOX","ST_ISCOLLECTION","ST_ISEMPTY","ST_LENGTH","ST_MAKELINE","ST_MAKEPOLYGON","ST_MAKEPOLYGONORIENTED","ST_MAXDISTANCE","ST_NPOINTS","ST_NUMGEOMETRIES","ST_NUMPOINTS","ST_PERIMETER","ST_POINTN","ST_SIMPLIFY","ST_SNAPTOGRID","ST_STARTPOINT","ST_TOUCHES","ST_UNION","ST_UNION_AGG","ST_WITHIN","ST_X","ST_Y","FARM_FINGERPRINT","MD5","SHA1","SHA256","SHA512","HLL_COUNT.INIT","HLL_COUNT.MERGE","HLL_COUNT.MERGE_PARTIAL","HLL_COUNT.EXTRACT","MAKE_INTERVAL","EXTRACT","JUSTIFY_DAYS","JUSTIFY_HOURS","JUSTIFY_INTERVAL","JSON_EXTRACT","JSON_QUERY","JSON_EXTRACT_SCALAR","JSON_VALUE","JSON_EXTRACT_ARRAY","JSON_QUERY_ARRAY","JSON_EXTRACT_STRING_ARRAY","JSON_VALUE_ARRAY","TO_JSON_STRING","ABS","SIGN","IS_INF","IS_NAN","IEEE_DIVIDE","RAND","SQRT","POW","POWER","EXP","LN","LOG","LOG10","GREATEST","LEAST","DIV","SAFE_DIVIDE","SAFE_MULTIPLY","SAFE_NEGATE","SAFE_ADD","SAFE_SUBTRACT","MOD","ROUND","TRUNC","CEIL","CEILING","FLOOR","COS","COSH","ACOS","ACOSH","SIN","SINH","ASIN","ASINH","TAN","TANH","ATAN","ATANH","ATAN2","RANGE_BUCKET","FIRST_VALUE","LAST_VALUE","NTH_VALUE","LEAD","LAG","PERCENTILE_CONT","PERCENTILE_DISC","NET.IP_FROM_STRING","NET.SAFE_IP_FROM_STRING","NET.IP_TO_STRING","NET.IP_NET_MASK","NET.IP_TRUNC","NET.IPV4_FROM_INT64","NET.IPV4_TO_INT64","NET.HOST","NET.PUBLIC_SUFFIX","NET.REG_DOMAIN","RANK","DENSE_RANK","PERCENT_RANK","CUME_DIST","NTILE","ROW_NUMBER","SESSION_USER","CORR","COVAR_POP","COVAR_SAMP","STDDEV_POP","STDDEV_SAMP","STDDEV","VAR_POP","VAR_SAMP","VARIANCE","ASCII","BYTE_LENGTH","CHAR_LENGTH","CHARACTER_LENGTH","CHR","CODE_POINTS_TO_BYTES","CODE_POINTS_TO_STRING","CONCAT","CONTAINS_SUBSTR","ENDS_WITH","FORMAT","FROM_BASE32","FROM_BASE64","FROM_HEX","INITCAP","INSTR","LEFT","LENGTH","LPAD","LOWER","LTRIM","NORMALIZE","NORMALIZE_AND_CASEFOLD","OCTET_LENGTH","REGEXP_CONTAINS","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","REPLACE","REPEAT","REVERSE","RIGHT","RPAD","RTRIM","SAFE_CONVERT_BYTES_TO_STRING","SOUNDEX","SPLIT","STARTS_WITH","STRPOS","SUBSTR","SUBSTRING","TO_BASE32","TO_BASE64","TO_CODE_POINTS","TO_HEX","TRANSLATE","TRIM","UNICODE","UPPER","CURRENT_TIME","TIME","EXTRACT","TIME_ADD","TIME_SUB","TIME_DIFF","TIME_TRUNC","FORMAT_TIME","PARSE_TIME","CURRENT_TIMESTAMP","EXTRACT","STRING","TIMESTAMP","TIMESTAMP_ADD","TIMESTAMP_SUB","TIMESTAMP_DIFF","TIMESTAMP_TRUNC","FORMAT_TIMESTAMP","PARSE_TIMESTAMP","TIMESTAMP_SECONDS","TIMESTAMP_MILLIS","TIMESTAMP_MICROS","UNIX_SECONDS","UNIX_MILLIS","UNIX_MICROS","GENERATE_UUID","COALESCE","IF","IFNULL","NULLIF","AVG","BIT_AND","BIT_OR","BIT_XOR","CORR","COUNT","COVAR_POP","COVAR_SAMP","EXACT_COUNT_DISTINCT","FIRST","GROUP_CONCAT","GROUP_CONCAT_UNQUOTED","LAST","MAX","MIN","NEST","NTH","QUANTILES","STDDEV","STDDEV_POP","STDDEV_SAMP","SUM","TOP","UNIQUE","VARIANCE","VAR_POP","VAR_SAMP","BIT_COUNT","BOOLEAN","BYTES","CAST","FLOAT","HEX_STRING","INTEGER","STRING","COALESCE","GREATEST","IFNULL","IS_INF","IS_NAN","IS_EXPLICITLY_DEFINED","LEAST","NVL","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATE","DATE_ADD","DATEDIFF","DAY","DAYOFWEEK","DAYOFYEAR","FORMAT_UTC_USEC","HOUR","MINUTE","MONTH","MSEC_TO_TIMESTAMP","NOW","PARSE_UTC_USEC","QUARTER","SEC_TO_TIMESTAMP","SECOND","STRFTIME_UTC_USEC","TIME","TIMESTAMP","TIMESTAMP_TO_MSEC","TIMESTAMP_TO_SEC","TIMESTAMP_TO_USEC","USEC_TO_TIMESTAMP","UTC_USEC_TO_DAY","UTC_USEC_TO_HOUR","UTC_USEC_TO_MONTH","UTC_USEC_TO_WEEK","UTC_USEC_TO_YEAR","WEEK","YEAR","FORMAT_IP","PARSE_IP","FORMAT_PACKED_IP","PARSE_PACKED_IP","JSON_EXTRACT","JSON_EXTRACT_SCALAR","ABS","ACOS","ACOSH","ASIN","ASINH","ATAN","ATANH","ATAN2","CEIL","COS","COSH","DEGREES","EXP","FLOOR","LN","LOG","LOG2","LOG10","PI","POW","RADIANS","RAND","ROUND","SIN","SINH","SQRT","TAN","TANH","REGEXP_MATCH","REGEXP_EXTRACT","REGEXP_REPLACE","CONCAT","INSTR","LEFT","LENGTH","LOWER","LPAD","LTRIM","REPLACE","RIGHT","RPAD","RTRIM","SPLIT","SUBSTR","UPPER","TABLE_DATE_RANGE","TABLE_DATE_RANGE_STRICT","TABLE_QUERY","HOST","DOMAIN","TLD","AVG","COUNT","MAX","MIN","STDDEV","SUM","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","RANK","RATIO_TO_REPORT","ROW_NUMBER","CURRENT_USER","EVERY","FROM_BASE64","HASH","FARM_FINGERPRINT","IF","POSITION","SHA1","SOME","TO_BASE64","BQ.JOBS.CANCEL","BQ.REFRESH_MATERIALIZED_VIEW","OPTIONS","PIVOT","UNPIVOT"],ZS=["ALL","AND","ANY","AS","ASC","ASSERT_ROWS_MODIFIED","AT","BETWEEN","BY","CASE","CAST","COLLATE","CONTAINS","CREATE","CROSS","CUBE","CURRENT","DEFAULT","DEFINE","DESC","DISTINCT","ELSE","END","ENUM","ESCAPE","EXCEPT","EXCLUDE","EXISTS","EXTRACT","FALSE","FETCH","FOLLOWING","FOR","FROM","FULL","GROUP","GROUPING","GROUPS","HASH","HAVING","IF","IGNORE","IN","INNER","INTERSECT","INTO","IS","JOIN","LATERAL","LEFT","LIMIT","LOOKUP","MERGE","NATURAL","NEW","NO","NOT","NULL","NULLS","OF","ON","OR","ORDER","OUTER","OVER","PARTITION","PRECEDING","PROTO","RANGE","RECURSIVE","RESPECT","RIGHT","ROLLUP","ROWS","SELECT","SET","SOME","TABLE","TABLESAMPLE","THEN","TO","TREAT","TRUE","UNBOUNDED","UNION","UNNEST","USING","WHEN","WHERE","WINDOW","WITH","WITHIN","SAFE","LIKE","COPY","CLONE","IN","OUT","INOUT","RETURNS","LANGUAGE","CASCADE","RESTRICT","DETERMINISTIC"],zS=["ARRAY","BOOL","BYTES","DATE","DATETIME","GEOGRAPHY","INTERVAL","INT64","INT","SMALLINT","INTEGER","BIGINT","TINYINT","BYTEINT","NUMERIC","DECIMAL","BIGNUMERIC","BIGDECIMAL","FLOAT64","STRING","STRUCT","TIME","TIMEZONE"],eO=S(["SELECT [ALL | DISTINCT] [AS STRUCT | AS VALUE]"]),tO=S(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","QUALIFY","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","OMIT RECORD IF","INSERT [INTO]","VALUES","SET","MERGE [INTO]","WHEN [NOT] MATCHED [BY SOURCE | BY TARGET] [THEN]","UPDATE SET","CLUSTER BY","FOR SYSTEM_TIME AS OF","WITH CONNECTION","WITH PARTITION COLUMNS","REMOTE WITH CONNECTION"]),Fi=S(["CREATE [OR REPLACE] [TEMP|TEMPORARY|SNAPSHOT|EXTERNAL] TABLE [IF NOT EXISTS]"]),iT=S(["CREATE [OR REPLACE] [MATERIALIZED] VIEW [IF NOT EXISTS]","UPDATE","DELETE [FROM]","DROP [SNAPSHOT | EXTERNAL] TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS]","ADD COLUMN [IF NOT EXISTS]","DROP COLUMN [IF EXISTS]","RENAME TO","ALTER COLUMN [IF EXISTS]","SET DEFAULT COLLATE","SET OPTIONS","DROP NOT NULL","SET DATA TYPE","ALTER SCHEMA [IF EXISTS]","ALTER [MATERIALIZED] VIEW [IF EXISTS]","ALTER BI_CAPACITY","TRUNCATE TABLE","CREATE SCHEMA [IF NOT EXISTS]","DEFAULT COLLATE","CREATE [OR REPLACE] [TEMP|TEMPORARY|TABLE] FUNCTION [IF NOT EXISTS]","CREATE [OR REPLACE] PROCEDURE [IF NOT EXISTS]","CREATE [OR REPLACE] ROW ACCESS POLICY [IF NOT EXISTS]","GRANT TO","FILTER USING","CREATE CAPACITY","AS JSON","CREATE RESERVATION","CREATE ASSIGNMENT","CREATE SEARCH INDEX [IF NOT EXISTS]","DROP SCHEMA [IF EXISTS]","DROP [MATERIALIZED] VIEW [IF EXISTS]","DROP [TABLE] FUNCTION [IF EXISTS]","DROP PROCEDURE [IF EXISTS]","DROP ROW ACCESS POLICY","DROP ALL ROW ACCESS POLICIES","DROP CAPACITY [IF EXISTS]","DROP RESERVATION [IF EXISTS]","DROP ASSIGNMENT [IF EXISTS]","DROP SEARCH INDEX [IF EXISTS]","DROP [IF EXISTS]","GRANT","REVOKE","DECLARE","EXECUTE IMMEDIATE","LOOP","END LOOP","REPEAT","END REPEAT","WHILE","END WHILE","BREAK","LEAVE","CONTINUE","ITERATE","FOR","END FOR","BEGIN","BEGIN TRANSACTION","COMMIT TRANSACTION","ROLLBACK TRANSACTION","RAISE","RETURN","CALL","ASSERT","EXPORT DATA"]),EO=S(["UNION {ALL | DISTINCT}","EXCEPT DISTINCT","INTERSECT DISTINCT"]),rO=S(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN"]),nO=S(["TABLESAMPLE SYSTEM","ANY TYPE","ALL COLUMNS","NOT DETERMINISTIC","{ROWS | RANGE} BETWEEN","IS [NOT] DISTINCT FROM"]),TO={name:"bigquery",tokenizerOptions:{reservedSelect:eO,reservedClauses:[...tO,...iT,...Fi],reservedSetOperations:EO,reservedJoins:rO,reservedPhrases:nO,reservedKeywords:ZS,reservedDataTypes:zS,reservedFunctionNames:jS,extraParens:["[]"],stringTypes:[{quote:'""".."""',prefixes:["R","B","RB","BR"]},{quote:"'''..'''",prefixes:["R","B","RB","BR"]},'""-bs',"''-bs",{quote:'""-raw',prefixes:["R","B","RB","BR"],requirePrefix:!0},{quote:"''-raw",prefixes:["R","B","RB","BR"],requirePrefix:!0}],identTypes:["``"],identChars:{dashes:!0},paramTypes:{positional:!0,named:["@"],quoted:["@"]},variableTypes:[{regex:String.raw`@@\w+`}],lineCommentTypes:["--","#"],operators:["&","|","^","~",">>","<<","||","=>"],postProcess:sO},formatOptions:{onelineClauses:[...Fi,...iT],tabularOnelineClauses:iT}};function sO(t){return iO(oO(t))}function iO(t){let e=Vt;return t.map(E=>E.text==="OFFSET"&&e.text==="["?(e=E,ie(Ee({},E),{type:"RESERVED_FUNCTION_NAME"})):(e=E,E))}function oO(t){var e;let E=[];for(let r=0;r<t.length;r++){let n=t[r];if((ut.ARRAY(n)||ut.STRUCT(n))&&((e=t[r+1])==null?void 0:e.text)==="<"){let T=RO(t,r+1),s=t.slice(r,T+1);E.push({type:"IDENTIFIER",raw:s.map(Hi("raw")).join(""),text:s.map(Hi("text")).join(""),start:n.start}),r=T}else E.push(n)}return E}var Hi=t=>e=>e.type==="IDENTIFIER"||e.type==="COMMA"?e[t]+" ":e[t];function RO(t,e){let E=0;for(let r=e;r<t.length;r++){let n=t[r];if(n.text==="<"?E++:n.text===">"?E--:n.text===">>"&&(E-=2),E===0)return r}return t.length-1}var AO=["ARRAY_AGG","AVG","CORRELATION","COUNT","COUNT_BIG","COVARIANCE","COVARIANCE_SAMP","CUME_DIST","GROUPING","LISTAGG","MAX","MEDIAN","MIN","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_ICPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","STDDEV","STDDEV_SAMP","SUM","VARIANCE","VARIANCE_SAMP","XMLAGG","XMLGROUP","ABS","ABSVAL","ACOS","ADD_DAYS","ADD_HOURS","ADD_MINUTES","ADD_MONTHS","ADD_SECONDS","ADD_YEARS","AGE","ARRAY_DELETE","ARRAY_FIRST","ARRAY_LAST","ARRAY_NEXT","ARRAY_PRIOR","ASCII","ASCII_STR","ASIN","ATAN","ATAN2","ATANH","BITAND","BITANDNOT","BITOR","BITXOR","BITNOT","BPCHAR","BSON_TO_JSON","BTRIM","CARDINALITY","CEILING","CEIL","CHARACTER_LENGTH","CHR","COALESCE","COLLATION_KEY","COLLATION_KEY_BIT","COMPARE_DECFLOAT","CONCAT","COS","COSH","COT","CURSOR_ROWCOUNT","DATAPARTITIONNUM","DATE_PART","DATE_TRUNC","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFWEEK_ISO","DAYOFYEAR","DAYS","DAYS_BETWEEN","DAYS_TO_END_OF_MONTH","DBPARTITIONNUM","DECFLOAT","DECFLOAT_FORMAT","DECODE","DECRYPT_BIN","DECRYPT_CHAR","DEGREES","DEREF","DIFFERENCE","DIGITS","DOUBLE_PRECISION","EMPTY_BLOB","EMPTY_CLOB","EMPTY_DBCLOB","EMPTY_NCLOB","ENCRYPT","EVENT_MON_STATE","EXP","EXTRACT","FIRST_DAY","FLOOR","FROM_UTC_TIMESTAMP","GENERATE_UNIQUE","GETHINT","GREATEST","HASH","HASH4","HASH8","HASHEDVALUE","HEX","HEXTORAW","HOUR","HOURS_BETWEEN","IDENTITY_VAL_LOCAL","IFNULL","INITCAP","INSERT","INSTR","INSTR2","INSTR4","INSTRB","INTNAND","INTNOR","INTNXOR","INTNNOT","ISNULL","JSON_ARRAY","JSON_OBJECT","JSON_QUERY","JSON_TO_BSON","JSON_VALUE","JULIAN_DAY","LAST_DAY","LCASE","LEAST","LEFT","LENGTH","LENGTH2","LENGTH4","LENGTHB","LN","LOCATE","LOCATE_IN_STRING","LOG10","LONG_VARCHAR","LONG_VARGRAPHIC","LOWER","LPAD","LTRIM","MAX","MAX_CARDINALITY","MICROSECOND","MIDNIGHT_SECONDS","MIN","MINUTE","MINUTES_BETWEEN","MOD","MONTH","MONTHNAME","MONTHS_BETWEEN","MULTIPLY_ALT","NEXT_DAY","NEXT_MONTH","NEXT_QUARTER","NEXT_WEEK","NEXT_YEAR","NORMALIZE_DECFLOAT","NOW","NULLIF","NVL","NVL2","OCTET_LENGTH","OVERLAY","PARAMETER","POSITION","POSSTR","POW","POWER","QUANTIZE","QUARTER","QUOTE_IDENT","QUOTE_LITERAL","RADIANS","RAISE_ERROR","RAND","RANDOM","RAWTOHEX","REC2XML","REGEXP_COUNT","REGEXP_EXTRACT","REGEXP_INSTR","REGEXP_LIKE","REGEXP_MATCH_COUNT","REGEXP_REPLACE","REGEXP_SUBSTR","REPEAT","REPLACE","RID","RID_BIT","RIGHT","ROUND","ROUND_TIMESTAMP","RPAD","RTRIM","SECLABEL","SECLABEL_BY_NAME","SECLABEL_TO_CHAR","SECOND","SECONDS_BETWEEN","SIGN","SIN","SINH","SOUNDEX","SPACE","SQRT","STRIP","STRLEFT","STRPOS","STRRIGHT","SUBSTR","SUBSTR2","SUBSTR4","SUBSTRB","SUBSTRING","TABLE_NAME","TABLE_SCHEMA","TAN","TANH","THIS_MONTH","THIS_QUARTER","THIS_WEEK","THIS_YEAR","TIMESTAMP_FORMAT","TIMESTAMP_ISO","TIMESTAMPDIFF","TIMEZONE","TO_CHAR","TO_CLOB","TO_DATE","TO_HEX","TO_MULTI_BYTE","TO_NCHAR","TO_NCLOB","TO_NUMBER","TO_SINGLE_BYTE","TO_TIMESTAMP","TO_UTC_TIMESTAMP","TOTALORDER","TRANSLATE","TRIM","TRIM_ARRAY","TRUNC_TIMESTAMP","TRUNCATE","TRUNC","TYPE_ID","TYPE_NAME","TYPE_SCHEMA","UCASE","UNICODE_STR","UPPER","VALUE","VARCHAR_BIT_FORMAT","VARCHAR_FORMAT","VARCHAR_FORMAT_BIT","VERIFY_GROUP_FOR_USER","VERIFY_ROLE_FOR_USER","VERIFY_TRUSTED_CONTEXT_ROLE_FOR_USER","WEEK","WEEK_ISO","WEEKS_BETWEEN","WIDTH_BUCKET","XMLATTRIBUTES","XMLCOMMENT","XMLCONCAT","XMLDOCUMENT","XMLELEMENT","XMLFOREST","XMLNAMESPACES","XMLPARSE","XMLPI","XMLQUERY","XMLROW","XMLSERIALIZE","XMLTEXT","XMLVALIDATE","XMLXSROBJECTID","XSLTRANSFORM","YEAR","YEARS_BETWEEN","YMD_BETWEEN","BASE_TABLE","JSON_TABLE","UNNEST","XMLTABLE","RANK","DENSE_RANK","NTILE","LAG","LEAD","ROW_NUMBER","FIRST_VALUE","LAST_VALUE","NTH_VALUE","RATIO_TO_REPORT","CAST"],aO=["ACTIVATE","ADD","AFTER","ALIAS","ALL","ALLOCATE","ALLOW","ALTER","AND","ANY","AS","ASENSITIVE","ASSOCIATE","ASUTIME","AT","ATTRIBUTES","AUDIT","AUTHORIZATION","AUX","AUXILIARY","BEFORE","BEGIN","BETWEEN","BINARY","BUFFERPOOL","BY","CACHE","CALL","CALLED","CAPTURE","CARDINALITY","CASCADED","CASE","CAST","CHECK","CLONE","CLOSE","CLUSTER","COLLECTION","COLLID","COLUMN","COMMENT","COMMIT","CONCAT","CONDITION","CONNECT","CONNECTION","CONSTRAINT","CONTAINS","CONTINUE","COUNT","COUNT_BIG","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_LC_CTYPE","CURRENT_PATH","CURRENT_SCHEMA","CURRENT_SERVER","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_USER","CURSOR","CYCLE","DATA","DATABASE","DATAPARTITIONNAME","DATAPARTITIONNUM","DAY","DAYS","DB2GENERAL","DB2GENRL","DB2SQL","DBINFO","DBPARTITIONNAME","DBPARTITIONNUM","DEALLOCATE","DECLARE","DEFAULT","DEFAULTS","DEFINITION","DELETE","DENSERANK","DENSE_RANK","DESCRIBE","DESCRIPTOR","DETERMINISTIC","DIAGNOSTICS","DISABLE","DISALLOW","DISCONNECT","DISTINCT","DO","DOCUMENT","DROP","DSSIZE","DYNAMIC","EACH","EDITPROC","ELSE","ELSEIF","ENABLE","ENCODING","ENCRYPTION","END","END-EXEC","ENDING","ERASE","ESCAPE","EVERY","EXCEPT","EXCEPTION","EXCLUDING","EXCLUSIVE","EXECUTE","EXISTS","EXIT","EXPLAIN","EXTENDED","EXTERNAL","EXTRACT","FENCED","FETCH","FIELDPROC","FILE","FINAL","FIRST1","FOR","FOREIGN","FREE","FROM","FULL","FUNCTION","GENERAL","GENERATED","GET","GLOBAL","GO","GOTO","GRANT","GRAPHIC","GROUP","HANDLER","HASH","HASHED_VALUE","HAVING","HINT","HOLD","HOUR","HOURS","IDENTITY","IF","IMMEDIATE","IMPORT","IN","INCLUDING","INCLUSIVE","INCREMENT","INDEX","INDICATOR","INDICATORS","INF","INFINITY","INHERIT","INNER","INOUT","INSENSITIVE","INSERT","INTEGRITY","INTERSECT","INTO","IS","ISNULL","ISOBID","ISOLATION","ITERATE","JAR","JAVA","JOIN","KEEP","KEY","LABEL","LANGUAGE","LAST3","LATERAL","LC_CTYPE","LEAVE","LEFT","LIKE","LIMIT","LINKTYPE","LOCAL","LOCALDATE","LOCALE","LOCALTIME","LOCALTIMESTAMP","LOCATOR","LOCATORS","LOCK","LOCKMAX","LOCKSIZE","LOOP","MAINTAINED","MATERIALIZED","MAXVALUE","MICROSECOND","MICROSECONDS","MINUTE","MINUTES","MINVALUE","MODE","MODIFIES","MONTH","MONTHS","NAN","NEW","NEW_TABLE","NEXTVAL","NO","NOCACHE","NOCYCLE","NODENAME","NODENUMBER","NOMAXVALUE","NOMINVALUE","NONE","NOORDER","NORMALIZED","NOT2","NOTNULL","NULL","NULLS","NUMPARTS","OBID","OF","OFF","OFFSET","OLD","OLD_TABLE","ON","OPEN","OPTIMIZATION","OPTIMIZE","OPTION","OR","ORDER","OUT","OUTER","OVER","OVERRIDING","PACKAGE","PADDED","PAGESIZE","PARAMETER","PART","PARTITION","PARTITIONED","PARTITIONING","PARTITIONS","PASSWORD","PATH","PERCENT","PIECESIZE","PLAN","POSITION","PRECISION","PREPARE","PREVVAL","PRIMARY","PRIQTY","PRIVILEGES","PROCEDURE","PROGRAM","PSID","PUBLIC","QUERY","QUERYNO","RANGE","RANK","READ","READS","RECOVERY","REFERENCES","REFERENCING","REFRESH","RELEASE","RENAME","REPEAT","RESET","RESIGNAL","RESTART","RESTRICT","RESULT","RESULT_SET_LOCATOR","RETURN","RETURNS","REVOKE","RIGHT","ROLE","ROLLBACK","ROUND_CEILING","ROUND_DOWN","ROUND_FLOOR","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_UP","ROUND_UP","ROUTINE","ROW","ROWNUMBER","ROWS","ROWSET","ROW_NUMBER","RRN","RUN","SAVEPOINT","SCHEMA","SCRATCHPAD","SCROLL","SEARCH","SECOND","SECONDS","SECQTY","SECURITY","SELECT","SENSITIVE","SEQUENCE","SESSION","SESSION_USER","SET","SIGNAL","SIMPLE","SNAN","SOME","SOURCE","SPECIFIC","SQL","SQLID","STACKED","STANDARD","START","STARTING","STATEMENT","STATIC","STATMENT","STAY","STOGROUP","STORES","STYLE","SUBSTRING","SUMMARY","SYNONYM","SYSFUN","SYSIBM","SYSPROC","SYSTEM","SYSTEM_USER","TABLE","TABLESPACE","THEN","TO","TRANSACTION","TRIGGER","TRIM","TRUNCATE","TYPE","UNDO","UNION","UNIQUE","UNTIL","UPDATE","USAGE","USER","USING","VALIDPROC","VALUE","VALUES","VARIABLE","VARIANT","VCAT","VERSION","VIEW","VOLATILE","VOLUMES","WHEN","WHENEVER","WHERE","WHILE","WITH","WITHOUT","WLM","WRITE","XMLELEMENT","XMLEXISTS","XMLNAMESPACES","YEAR","YEARS"],SO=["ARRAY","BIGINT","BINARY","BLOB","BOOLEAN","CCSID","CHAR","CHARACTER","CLOB","DATE","DATETIME","DBCLOB","DEC","DECIMAL","DOUBLE","DOUBLE PRECISION","FLOAT","FLOAT4","FLOAT8","GRAPHIC","INT","INT2","INT4","INT8","INTEGER","INTERVAL","LONG VARCHAR","LONG VARGRAPHIC","NCHAR","NCHR","NCLOB","NVARCHAR","NUMERIC","SMALLINT","REAL","TIME","TIMESTAMP","VARBINARY","VARCHAR","VARGRAPHIC"],OO=S(["SELECT [ALL | DISTINCT]"]),IO=S(["WITH","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY [INPUT SEQUENCE]","LIMIT","OFFSET","FETCH NEXT","FOR UPDATE [OF]","FOR {READ | FETCH} ONLY","FOR {RR | CS | UR | RS} [USE AND KEEP {SHARE | UPDATE | EXCLUSIVE} LOCKS]","WAIT FOR OUTCOME","SKIP LOCKED DATA","INTO","INSERT INTO","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED [THEN]","UPDATE SET","INSERT"]),Yi=S(["CREATE [GLOBAL TEMPORARY | EXTERNAL] TABLE [IF NOT EXISTS]"]),oT=S(["CREATE [OR REPLACE] VIEW","UPDATE","WHERE CURRENT OF","WITH {RR | RS | CS | UR}","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD [COLUMN]","DROP [COLUMN]","RENAME COLUMN","ALTER [COLUMN]","SET DATA TYPE","SET NOT NULL","DROP {DEFAULT | GENERATED | NOT NULL}","TRUNCATE [TABLE]","ALLOCATE","ALTER AUDIT POLICY","ALTER BUFFERPOOL","ALTER DATABASE PARTITION GROUP","ALTER DATABASE","ALTER EVENT MONITOR","ALTER FUNCTION","ALTER HISTOGRAM TEMPLATE","ALTER INDEX","ALTER MASK","ALTER METHOD","ALTER MODULE","ALTER NICKNAME","ALTER PACKAGE","ALTER PERMISSION","ALTER PROCEDURE","ALTER SCHEMA","ALTER SECURITY LABEL COMPONENT","ALTER SECURITY POLICY","ALTER SEQUENCE","ALTER SERVER","ALTER SERVICE CLASS","ALTER STOGROUP","ALTER TABLESPACE","ALTER THRESHOLD","ALTER TRIGGER","ALTER TRUSTED CONTEXT","ALTER TYPE","ALTER USAGE LIST","ALTER USER MAPPING","ALTER VIEW","ALTER WORK ACTION SET","ALTER WORK CLASS SET","ALTER WORKLOAD","ALTER WRAPPER","ALTER XSROBJECT","ALTER STOGROUP","ALTER TABLESPACE","ALTER TRIGGER","ALTER TRUSTED CONTEXT","ALTER VIEW","ASSOCIATE [RESULT SET] {LOCATOR | LOCATORS}","AUDIT","BEGIN DECLARE SECTION","CALL","CLOSE","COMMENT ON","COMMIT [WORK]","CONNECT","CREATE [OR REPLACE] [PUBLIC] ALIAS","CREATE AUDIT POLICY","CREATE BUFFERPOOL","CREATE DATABASE PARTITION GROUP","CREATE EVENT MONITOR","CREATE [OR REPLACE] FUNCTION","CREATE FUNCTION MAPPING","CREATE HISTOGRAM TEMPLATE","CREATE [UNIQUE] INDEX","CREATE INDEX EXTENSION","CREATE [OR REPLACE] MASK","CREATE [SPECIFIC] METHOD","CREATE [OR REPLACE] MODULE","CREATE [OR REPLACE] NICKNAME","CREATE [OR REPLACE] PERMISSION","CREATE [OR REPLACE] PROCEDURE","CREATE ROLE","CREATE SCHEMA","CREATE SECURITY LABEL [COMPONENT]","CREATE SECURITY POLICY","CREATE [OR REPLACE] SEQUENCE","CREATE SERVICE CLASS","CREATE SERVER","CREATE STOGROUP","CREATE SYNONYM","CREATE [LARGE | REGULAR | {SYSTEM | USER} TEMPORARY] TABLESPACE","CREATE THRESHOLD","CREATE {TRANSFORM | TRANSFORMS} FOR","CREATE [OR REPLACE] TRIGGER","CREATE TRUSTED CONTEXT","CREATE [OR REPLACE] TYPE","CREATE TYPE MAPPING","CREATE USAGE LIST","CREATE USER MAPPING FOR","CREATE [OR REPLACE] VARIABLE","CREATE WORK ACTION SET","CREATE WORK CLASS SET","CREATE WORKLOAD","CREATE WRAPPER","DECLARE","DECLARE GLOBAL TEMPORARY TABLE","DESCRIBE [INPUT | OUTPUT]","DISCONNECT","DROP [PUBLIC] ALIAS","DROP AUDIT POLICY","DROP BUFFERPOOL","DROP DATABASE PARTITION GROUP","DROP EVENT MONITOR","DROP [SPECIFIC] FUNCTION","DROP FUNCTION MAPPING","DROP HISTOGRAM TEMPLATE","DROP INDEX [EXTENSION]","DROP MASK","DROP [SPECIFIC] METHOD","DROP MODULE","DROP NICKNAME","DROP PACKAGE","DROP PERMISSION","DROP [SPECIFIC] PROCEDURE","DROP ROLE","DROP SCHEMA","DROP SECURITY LABEL [COMPONENT]","DROP SECURITY POLICY","DROP SEQUENCE","DROP SERVER","DROP SERVICE CLASS","DROP STOGROUP","DROP TABLE HIERARCHY","DROP {TABLESPACE | TABLESPACES}","DROP {TRANSFORM | TRANSFORMS}","DROP THRESHOLD","DROP TRIGGER","DROP TRUSTED CONTEXT","DROP TYPE [MAPPING]","DROP USAGE LIST","DROP USER MAPPING FOR","DROP VARIABLE","DROP VIEW [HIERARCHY]","DROP WORK {ACTION | CLASS} SET","DROP WORKLOAD","DROP WRAPPER","DROP XSROBJECT","END DECLARE SECTION","EXECUTE [IMMEDIATE]","EXPLAIN {PLAN [SECTION] | ALL}","FETCH [FROM]","FLUSH {BUFFERPOOL | BUFFERPOOLS} ALL","FLUSH EVENT MONITOR","FLUSH FEDERATED CACHE","FLUSH OPTIMIZATION PROFILE CACHE","FLUSH PACKAGE CACHE [DYNAMIC]","FLUSH AUTHENTICATION CACHE [FOR ALL]","FREE LOCATOR","GET DIAGNOSTICS","GOTO","GRANT","INCLUDE","ITERATE","LEAVE","LOCK TABLE","LOOP","OPEN","PIPE","PREPARE","REFRESH TABLE","RELEASE","RELEASE [TO] SAVEPOINT","RENAME [TABLE | INDEX | STOGROUP | TABLESPACE]","REPEAT","RESIGNAL","RETURN","REVOKE","ROLLBACK [WORK] [TO SAVEPOINT]","SAVEPOINT","SET COMPILATION ENVIRONMENT","SET CONNECTION","SET CURRENT","SET ENCRYPTION PASSWORD","SET EVENT MONITOR STATE","SET INTEGRITY","SET PASSTHRU","SET PATH","SET ROLE","SET SCHEMA","SET SERVER OPTION","SET {SESSION AUTHORIZATION | SESSION_USER}","SET USAGE LIST","SIGNAL","TRANSFER OWNERSHIP OF","WHENEVER {NOT FOUND | SQLERROR | SQLWARNING}","WHILE"]),NO=S(["UNION [ALL]","EXCEPT [ALL]","INTERSECT [ALL]"]),lO=S(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN"]),CO=S(["ON DELETE","ON UPDATE","SET NULL","{ROWS | RANGE} BETWEEN"]),_O={name:"db2",tokenizerOptions:{reservedSelect:OO,reservedClauses:[...IO,...Yi,...oT],reservedSetOperations:NO,reservedJoins:lO,reservedPhrases:CO,reservedKeywords:aO,reservedDataTypes:SO,reservedFunctionNames:AO,extraParens:["[]"],stringTypes:[{quote:"''-qq",prefixes:["G","N","U&"]},{quote:"''-raw",prefixes:["X","BX","GX","UX"],requirePrefix:!0}],identTypes:['""-qq'],identChars:{first:"@#$",rest:"@#$"},paramTypes:{positional:!0,named:[":"]},paramChars:{first:"@#$",rest:"@#$"},operators:["**","%","|","&","^","~","\xAC=","\xAC>","\xAC<","!>","!<","^=","^>","^<","||","->","=>"]},formatOptions:{onelineClauses:[...Yi,...oT],tabularOnelineClauses:oT}},LO=["ARRAY_AGG","AVG","CORR","CORRELATION","COUNT","COUNT_BIG","COVAR_POP","COVARIANCE","COVAR","COVAR_SAMP","COVARIANCE_SAMP","EVERY","GROUPING","JSON_ARRAYAGG","JSON_OBJECTAGG","LISTAGG","MAX","MEDIAN","MIN","PERCENTILE_CONT","PERCENTILE_DISC","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","SOME","STDDEV_POP","STDDEV","STDDEV_SAMP","SUM","VAR_POP","VARIANCE","VAR","VAR_SAMP","VARIANCE_SAMP","XMLAGG","XMLGROUP","ABS","ABSVAL","ACOS","ADD_DAYS","ADD_HOURS","ADD_MINUTES","ADD_MONTHS","ADD_SECONDS","ADD_YEARS","ANTILOG","ARRAY_MAX_CARDINALITY","ARRAY_TRIM","ASCII","ASIN","ATAN","ATAN2","ATANH","BASE64_DECODE","BASE64_ENCODE","BIT_LENGTH","BITAND","BITANDNOT","BITNOT","BITOR","BITXOR","BSON_TO_JSON","CARDINALITY","CEIL","CEILING","CHAR_LENGTH","CHARACTER_LENGTH","CHR","COALESCE","COMPARE_DECFLOAT","CONCAT","CONTAINS","COS","COSH","COT","CURDATE","CURTIME","DATABASE","DATAPARTITIONNAME","DATAPARTITIONNUM","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK_ISO","DAYOFWEEK","DAYOFYEAR","DAYS","DBPARTITIONNAME","DBPARTITIONNUM","DECFLOAT_FORMAT","DECFLOAT_SORTKEY","DECRYPT_BINARY","DECRYPT_BIT","DECRYPT_CHAR","DECRYPT_DB","DEGREES","DIFFERENCE","DIGITS","DLCOMMENT","DLLINKTYPE","DLURLCOMPLETE","DLURLPATH","DLURLPATHONLY","DLURLSCHEME","DLURLSERVER","DLVALUE","DOUBLE_PRECISION","DOUBLE","ENCRPYT","ENCRYPT_AES","ENCRYPT_AES256","ENCRYPT_RC2","ENCRYPT_TDES","EXP","EXTRACT","FIRST_DAY","FLOOR","GENERATE_UNIQUE","GET_BLOB_FROM_FILE","GET_CLOB_FROM_FILE","GET_DBCLOB_FROM_FILE","GET_XML_FILE","GETHINT","GREATEST","HASH_MD5","HASH_ROW","HASH_SHA1","HASH_SHA256","HASH_SHA512","HASH_VALUES","HASHED_VALUE","HEX","HEXTORAW","HOUR","HTML_ENTITY_DECODE","HTML_ENTITY_ENCODE","HTTP_DELETE_BLOB","HTTP_DELETE","HTTP_GET_BLOB","HTTP_GET","HTTP_PATCH_BLOB","HTTP_PATCH","HTTP_POST_BLOB","HTTP_POST","HTTP_PUT_BLOB","HTTP_PUT","IDENTITY_VAL_LOCAL","IFNULL","INSERT","INSTR","INTERPRET","ISFALSE","ISNOTFALSE","ISNOTTRUE","ISTRUE","JSON_ARRAY","JSON_OBJECT","JSON_QUERY","JSON_TO_BSON","JSON_UPDATE","JSON_VALUE","JULIAN_DAY","LAND","LAST_DAY","LCASE","LEAST","LEFT","LENGTH","LN","LNOT","LOCATE_IN_STRING","LOCATE","LOG10","LOR","LOWER","LPAD","LTRIM","MAX_CARDINALITY","MAX","MICROSECOND","MIDNIGHT_SECONDS","MIN","MINUTE","MOD","MONTH","MONTHNAME","MONTHS_BETWEEN","MQREAD","MQREADCLOB","MQRECEIVE","MQRECEIVECLOB","MQSEND","MULTIPLY_ALT","NEXT_DAY","NORMALIZE_DECFLOAT","NOW","NULLIF","NVL","OCTET_LENGTH","OVERLAY","PI","POSITION","POSSTR","POW","POWER","QUANTIZE","QUARTER","RADIANS","RAISE_ERROR","RANDOM","RAND","REGEXP_COUNT","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","REPEAT","REPLACE","RID","RIGHT","ROUND_TIMESTAMP","ROUND","RPAD","RRN","RTRIM","SCORE","SECOND","SIGN","SIN","SINH","SOUNDEX","SPACE","SQRT","STRIP","STRLEFT","STRPOS","STRRIGHT","SUBSTR","SUBSTRING","TABLE_NAME","TABLE_SCHEMA","TAN","TANH","TIMESTAMP_FORMAT","TIMESTAMP_ISO","TIMESTAMPDIFF_BIG","TIMESTAMPDIFF","TO_CHAR","TO_CLOB","TO_DATE","TO_NUMBER","TO_TIMESTAMP","TOTALORDER","TRANSLATE","TRIM_ARRAY","TRIM","TRUNC_TIMESTAMP","TRUNC","TRUNCATE","UCASE","UPPER","URL_DECODE","URL_ENCODE","VALUE","VARBINARY_FORMAT","VARCHAR_BIT_FORMAT","VARCHAR_FORMAT_BINARY","VARCHAR_FORMAT","VERIFY_GROUP_FOR_USER","WEEK_ISO","WEEK","WRAP","XMLATTRIBUTES","XMLCOMMENT","XMLCONCAT","XMLDOCUMENT","XMLELEMENT","XMLFOREST","XMLNAMESPACES","XMLPARSE","XMLPI","XMLROW","XMLSERIALIZE","XMLTEXT","XMLVALIDATE","XOR","XSLTRANSFORM","YEAR","ZONED","BASE_TABLE","HTTP_DELETE_BLOB_VERBOSE","HTTP_DELETE_VERBOSE","HTTP_GET_BLOB_VERBOSE","HTTP_GET_VERBOSE","HTTP_PATCH_BLOB_VERBOSE","HTTP_PATCH_VERBOSE","HTTP_POST_BLOB_VERBOSE","HTTP_POST_VERBOSE","HTTP_PUT_BLOB_VERBOSE","HTTP_PUT_VERBOSE","JSON_TABLE","MQREADALL","MQREADALLCLOB","MQRECEIVEALL","MQRECEIVEALLCLOB","XMLTABLE","UNPACK","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","RANK","RATIO_TO_REPORT","ROW_NUMBER","CAST"],cO=["ABSENT","ACCORDING","ACCTNG","ACTION","ACTIVATE","ADD","ALIAS","ALL","ALLOCATE","ALLOW","ALTER","AND","ANY","APPEND","APPLNAME","ARRAY","ARRAY_AGG","ARRAY_TRIM","AS","ASC","ASENSITIVE","ASSOCIATE","ATOMIC","ATTACH","ATTRIBUTES","AUTHORIZATION","AUTONOMOUS","BEFORE","BEGIN","BETWEEN","BIND","BSON","BUFFERPOOL","BY","CACHE","CALL","CALLED","CARDINALITY","CASE","CAST","CHECK","CL","CLOSE","CLUSTER","COLLECT","COLLECTION","COLUMN","COMMENT","COMMIT","COMPACT","COMPARISONS","COMPRESS","CONCAT","CONCURRENT","CONDITION","CONNECT","CONNECT_BY_ROOT","CONNECTION","CONSTANT","CONSTRAINT","CONTAINS","CONTENT","CONTINUE","COPY","COUNT","COUNT_BIG","CREATE","CREATEIN","CROSS","CUBE","CUME_DIST","CURRENT","CURRENT_DATE","CURRENT_PATH","CURRENT_SCHEMA","CURRENT_SERVER","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_USER","CURSOR","CYCLE","DATABASE","DATAPARTITIONNAME","DATAPARTITIONNUM","DAY","DAYS","DB2GENERAL","DB2GENRL","DB2SQL","DBINFO","DBPARTITIONNAME","DBPARTITIONNUM","DEACTIVATE","DEALLOCATE","DECLARE","DEFAULT","DEFAULTS","DEFER","DEFINE","DEFINITION","DELETE","DELETING","DENSE_RANK","DENSERANK","DESC","DESCRIBE","DESCRIPTOR","DETACH","DETERMINISTIC","DIAGNOSTICS","DISABLE","DISALLOW","DISCONNECT","DISTINCT","DO","DOCUMENT","DROP","DYNAMIC","EACH","ELSE","ELSEIF","EMPTY","ENABLE","ENCODING","ENCRYPTION","END","END-EXEC","ENDING","ENFORCED","ERROR","ESCAPE","EVERY","EXCEPT","EXCEPTION","EXCLUDING","EXCLUSIVE","EXECUTE","EXISTS","EXIT","EXTEND","EXTERNAL","EXTRACT","FALSE","FENCED","FETCH","FIELDPROC","FILE","FINAL","FIRST_VALUE","FOR","FOREIGN","FORMAT","FREE","FREEPAGE","FROM","FULL","FUNCTION","GBPCACHE","GENERAL","GENERATED","GET","GLOBAL","GO","GOTO","GRANT","GROUP","HANDLER","HASH","HASH_ROW","HASHED_VALUE","HAVING","HINT","HOLD","HOUR","HOURS","IDENTITY","IF","IGNORE","IMMEDIATE","IMPLICITLY","IN","INCLUDE","INCLUDING","INCLUSIVE","INCREMENT","INDEX","INDEXBP","INDICATOR","INF","INFINITY","INHERIT","INLINE","INNER","INOUT","INSENSITIVE","INSERT","INSERTING","INTEGRITY","INTERPRET","INTERSECT","INTO","IS","ISNULL","ISOLATION","ITERATE","JAVA","JOIN","JSON","JSON_ARRAY","JSON_ARRAYAGG","JSON_EXISTS","JSON_OBJECT","JSON_OBJECTAGG","JSON_QUERY","JSON_TABLE","JSON_VALUE","KEEP","KEY","KEYS","LABEL","LAG","LANGUAGE","LAST_VALUE","LATERAL","LEAD","LEAVE","LEFT","LEVEL2","LIKE","LIMIT","LINKTYPE","LISTAGG","LOCAL","LOCALDATE","LOCALTIME","LOCALTIMESTAMP","LOCATION","LOCATOR","LOCK","LOCKSIZE","LOG","LOGGED","LOOP","MAINTAINED","MASK","MATCHED","MATERIALIZED","MAXVALUE","MERGE","MICROSECOND","MICROSECONDS","MINPCTUSED","MINUTE","MINUTES","MINVALUE","MIRROR","MIXED","MODE","MODIFIES","MONTH","MONTHS","NAMESPACE","NAN","NATIONAL","NCHAR","NCLOB","NESTED","NEW","NEW_TABLE","NEXTVAL","NO","NOCACHE","NOCYCLE","NODENAME","NODENUMBER","NOMAXVALUE","NOMINVALUE","NONE","NOORDER","NORMALIZED","NOT","NOTNULL","NTH_VALUE","NTILE","NULL","NULLS","NVARCHAR","OBID","OBJECT","OF","OFF","OFFSET","OLD","OLD_TABLE","OMIT","ON","ONLY","OPEN","OPTIMIZE","OPTION","OR","ORDER","ORDINALITY","ORGANIZE","OUT","OUTER","OVER","OVERLAY","OVERRIDING","PACKAGE","PADDED","PAGE","PAGESIZE","PARAMETER","PART","PARTITION","PARTITIONED","PARTITIONING","PARTITIONS","PASSING","PASSWORD","PATH","PCTFREE","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","PERIOD","PERMISSION","PIECESIZE","PIPE","PLAN","POSITION","PREPARE","PREVVAL","PRIMARY","PRIOR","PRIQTY","PRIVILEGES","PROCEDURE","PROGRAM","PROGRAMID","QUERY","RANGE","RANK","RATIO_TO_REPORT","RCDFMT","READ","READS","RECOVERY","REFERENCES","REFERENCING","REFRESH","REGEXP_LIKE","RELEASE","RENAME","REPEAT","RESET","RESIGNAL","RESTART","RESULT","RESULT_SET_LOCATOR","RETURN","RETURNING","RETURNS","REVOKE","RID","RIGHT","ROLLBACK","ROLLUP","ROUTINE","ROW","ROW_NUMBER","ROWNUMBER","ROWS","RRN","RUN","SAVEPOINT","SBCS","SCALAR","SCHEMA","SCRATCHPAD","SCROLL","SEARCH","SECOND","SECONDS","SECQTY","SECURED","SELECT","SENSITIVE","SEQUENCE","SESSION","SESSION_USER","SET","SIGNAL","SIMPLE","SKIP","SNAN","SOME","SOURCE","SPECIFIC","SQL","SQLID","SQLIND_DEFAULT","SQLIND_UNASSIGNED","STACKED","START","STARTING","STATEMENT","STATIC","STOGROUP","SUBSTRING","SUMMARY","SYNONYM","SYSTEM_TIME","SYSTEM_USER","TABLE","TABLESPACE","TABLESPACES","TAG","THEN","THREADSAFE","TO","TRANSACTION","TRANSFER","TRIGGER","TRIM","TRIM_ARRAY","TRUE","TRUNCATE","TRY_CAST","TYPE","UNDO","UNION","UNIQUE","UNIT","UNKNOWN","UNNEST","UNTIL","UPDATE","UPDATING","URI","USAGE","USE","USER","USERID","USING","VALUE","VALUES","VARIABLE","VARIANT","VCAT","VERSION","VERSIONING","VIEW","VOLATILE","WAIT","WHEN","WHENEVER","WHERE","WHILE","WITH","WITHIN","WITHOUT","WRAPPED","WRAPPER","WRITE","WRKSTNNAME","XMLAGG","XMLATTRIBUTES","XMLCAST","XMLCOMMENT","XMLCONCAT","XMLDOCUMENT","XMLELEMENT","XMLFOREST","XMLGROUP","XMLNAMESPACES","XMLPARSE","XMLPI","XMLROW","XMLSERIALIZE","XMLTABLE","XMLTEXT","XMLVALIDATE","XSLTRANSFORM","XSROBJECT","YEAR","YEARS","YES","ZONE"],uO=["ARRAY","BIGINT","BINARY","BIT","BLOB","BOOLEAN","CCSID","CHAR","CHARACTER","CLOB","DATA","DATALINK","DATE","DBCLOB","DECFLOAT","DECIMAL","DEC","DOUBLE","DOUBLE PRECISION","FLOAT","GRAPHIC","INT","INTEGER","LONG","NUMERIC","REAL","ROWID","SMALLINT","TIME","TIMESTAMP","VARBINARY","VARCHAR","VARGRAPHIC","XML"],fO=S(["SELECT [ALL | DISTINCT]"]),dO=S(["WITH [RECURSIVE]","INTO","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER [SIBLINGS] BY [INPUT SEQUENCE]","LIMIT","OFFSET","FETCH {FIRST | NEXT}","FOR UPDATE [OF]","FOR READ ONLY","OPTIMIZE FOR","INSERT INTO","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED [THEN]","UPDATE SET","DELETE","INSERT","FOR SYSTEM NAME"]),bi=S(["CREATE [OR REPLACE] TABLE"]),RT=S(["CREATE [OR REPLACE] [RECURSIVE] VIEW","UPDATE","WHERE CURRENT OF","WITH {NC | RR | RS | CS | UR}","DELETE FROM","DROP TABLE","ALTER TABLE","ADD [COLUMN]","ALTER [COLUMN]","DROP [COLUMN]","SET DATA TYPE","SET {GENERATED ALWAYS | GENERATED BY DEFAULT}","SET NOT NULL","SET {NOT HIDDEN | IMPLICITLY HIDDEN}","SET FIELDPROC","DROP {DEFAULT | NOT NULL | GENERATED | IDENTITY | ROW CHANGE TIMESTAMP | FIELDPROC}","TRUNCATE [TABLE]","SET [CURRENT] SCHEMA","SET CURRENT_SCHEMA","ALLOCATE CURSOR","ALLOCATE [SQL] DESCRIPTOR [LOCAL | GLOBAL] SQL","ALTER [SPECIFIC] {FUNCTION | PROCEDURE}","ALTER {MASK | PERMISSION | SEQUENCE | TRIGGER}","ASSOCIATE [RESULT SET] {LOCATOR | LOCATORS}","BEGIN DECLARE SECTION","CALL","CLOSE","COMMENT ON {ALIAS | COLUMN | CONSTRAINT | INDEX | MASK | PACKAGE | PARAMETER | PERMISSION | SEQUENCE | TABLE | TRIGGER | VARIABLE | XSROBJECT}","COMMENT ON [SPECIFIC] {FUNCTION | PROCEDURE | ROUTINE}","COMMENT ON PARAMETER SPECIFIC {FUNCTION | PROCEDURE | ROUTINE}","COMMENT ON [TABLE FUNCTION] RETURN COLUMN","COMMENT ON [TABLE FUNCTION] RETURN COLUMN SPECIFIC [PROCEDURE | ROUTINE]","COMMIT [WORK] [HOLD]","CONNECT [TO | RESET] USER","CREATE [OR REPLACE] {ALIAS | FUNCTION | MASK | PERMISSION | PROCEDURE | SEQUENCE | TRIGGER | VARIABLE}","CREATE [ENCODED VECTOR] INDEX","CREATE UNIQUE [WHERE NOT NULL] INDEX","CREATE SCHEMA","CREATE TYPE","DEALLOCATE [SQL] DESCRIPTOR [LOCAL | GLOBAL]","DECLARE CURSOR","DECLARE GLOBAL TEMPORARY TABLE","DECLARE","DESCRIBE CURSOR","DESCRIBE INPUT","DESCRIBE [OUTPUT]","DESCRIBE {PROCEDURE | ROUTINE}","DESCRIBE TABLE","DISCONNECT ALL [SQL]","DISCONNECT [CURRENT]","DROP {ALIAS | INDEX | MASK | PACKAGE | PERMISSION | SCHEMA | SEQUENCE | TABLE | TYPE | VARIABLE | XSROBJECT} [IF EXISTS]","DROP [SPECIFIC] {FUNCTION | PROCEDURE | ROUTINE} [IF EXISTS]","END DECLARE SECTION","EXECUTE [IMMEDIATE]","FREE LOCATOR","GET [SQL] DESCRIPTOR [LOCAL | GLOBAL]","GET [CURRENT | STACKED] DIAGNOSTICS","GRANT {ALL [PRIVILEGES] | ALTER | EXECUTE} ON {FUNCTION | PROCEDURE | ROUTINE | PACKAGE | SCHEMA | SEQUENCE | TABLE | TYPE | VARIABLE | XSROBJECT}","HOLD LOCATOR","INCLUDE","LABEL ON {ALIAS | COLUMN | CONSTRAINT | INDEX | MASK | PACKAGE | PERMISSION | SEQUENCE | TABLE | TRIGGER | VARIABLE | XSROBJECT}","LABEL ON [SPECIFIC] {FUNCTION | PROCEDURE | ROUTINE}","LOCK TABLE","OPEN","PREPARE","REFRESH TABLE","RELEASE","RELEASE [TO] SAVEPOINT","RENAME [TABLE | INDEX] TO","REVOKE {ALL [PRIVILEGES] | ALTER | EXECUTE} ON {FUNCTION | PROCEDURE | ROUTINE | PACKAGE | SCHEMA | SEQUENCE | TABLE | TYPE | VARIABLE | XSROBJECT}","ROLLBACK [WORK] [HOLD | TO SAVEPOINT]","SAVEPOINT","SET CONNECTION","SET CURRENT {DEBUG MODE | DECFLOAT ROUNDING MODE | DEGREE | IMPLICIT XMLPARSE OPTION | TEMPORAL SYSTEM_TIME}","SET [SQL] DESCRIPTOR [LOCAL | GLOBAL]","SET ENCRYPTION PASSWORD","SET OPTION","SET {[CURRENT [FUNCTION]] PATH | CURRENT_PATH}","SET RESULT SETS [WITH RETURN [TO CALLER | TO CLIENT]]","SET SESSION AUTHORIZATION","SET SESSION_USER","SET TRANSACTION","SIGNAL SQLSTATE [VALUE]","TAG","TRANSFER OWNERSHIP OF","WHENEVER {NOT FOUND | SQLERROR | SQLWARNING}"]),PO=S(["UNION [ALL]","EXCEPT [ALL]","INTERSECT [ALL]"]),DO=S(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","[LEFT | RIGHT] EXCEPTION JOIN","{INNER | CROSS} JOIN"]),pO=S(["ON DELETE","ON UPDATE","SET NULL","{ROWS | RANGE} BETWEEN"]),hO={name:"db2i",tokenizerOptions:{reservedSelect:fO,reservedClauses:[...dO,...bi,...RT],reservedSetOperations:PO,reservedJoins:DO,reservedPhrases:pO,reservedKeywords:cO,reservedDataTypes:uO,reservedFunctionNames:LO,nestedBlockComments:!0,extraParens:["[]"],stringTypes:[{quote:"''-qq",prefixes:["G","N"]},{quote:"''-raw",prefixes:["X","BX","GX","UX"],requirePrefix:!0}],identTypes:['""-qq'],identChars:{first:"@#$",rest:"@#$"},paramTypes:{positional:!0,named:[":"]},paramChars:{first:"@#$",rest:"@#$"},operators:["**","\xAC=","\xAC>","\xAC<","!>","!<","||","=>"]},formatOptions:{onelineClauses:[...bi,...RT],tabularOnelineClauses:RT}},MO=["ABS","ACOS","ASIN","ATAN","BIN","BROUND","CBRT","CEIL","CEILING","CONV","COS","DEGREES","EXP","FACTORIAL","FLOOR","GREATEST","HEX","LEAST","LN","LOG","LOG10","LOG2","NEGATIVE","PI","PMOD","POSITIVE","POW","POWER","RADIANS","RAND","ROUND","SHIFTLEFT","SHIFTRIGHT","SHIFTRIGHTUNSIGNED","SIGN","SIN","SQRT","TAN","UNHEX","WIDTH_BUCKET","ARRAY_CONTAINS","MAP_KEYS","MAP_VALUES","SIZE","SORT_ARRAY","BINARY","CAST","ADD_MONTHS","DATE","DATE_ADD","DATE_FORMAT","DATE_SUB","DATEDIFF","DAY","DAYNAME","DAYOFMONTH","DAYOFYEAR","EXTRACT","FROM_UNIXTIME","FROM_UTC_TIMESTAMP","HOUR","LAST_DAY","MINUTE","MONTH","MONTHS_BETWEEN","NEXT_DAY","QUARTER","SECOND","TIMESTAMP","TO_DATE","TO_UTC_TIMESTAMP","TRUNC","UNIX_TIMESTAMP","WEEKOFYEAR","YEAR","ASSERT_TRUE","COALESCE","IF","ISNOTNULL","ISNULL","NULLIF","NVL","ASCII","BASE64","CHARACTER_LENGTH","CHR","CONCAT","CONCAT_WS","CONTEXT_NGRAMS","DECODE","ELT","ENCODE","FIELD","FIND_IN_SET","FORMAT_NUMBER","GET_JSON_OBJECT","IN_FILE","INITCAP","INSTR","LCASE","LENGTH","LEVENSHTEIN","LOCATE","LOWER","LPAD","LTRIM","NGRAMS","OCTET_LENGTH","PARSE_URL","PRINTF","QUOTE","REGEXP_EXTRACT","REGEXP_REPLACE","REPEAT","REVERSE","RPAD","RTRIM","SENTENCES","SOUNDEX","SPACE","SPLIT","STR_TO_MAP","SUBSTR","SUBSTRING","TRANSLATE","TRIM","UCASE","UNBASE64","UPPER","MASK","MASK_FIRST_N","MASK_HASH","MASK_LAST_N","MASK_SHOW_FIRST_N","MASK_SHOW_LAST_N","AES_DECRYPT","AES_ENCRYPT","CRC32","CURRENT_DATABASE","CURRENT_USER","HASH","JAVA_METHOD","LOGGED_IN_USER","MD5","REFLECT","SHA","SHA1","SHA2","SURROGATE_KEY","VERSION","AVG","COLLECT_LIST","COLLECT_SET","CORR","COUNT","COVAR_POP","COVAR_SAMP","HISTOGRAM_NUMERIC","MAX","MIN","NTILE","PERCENTILE","PERCENTILE_APPROX","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","STDDEV_POP","STDDEV_SAMP","SUM","VAR_POP","VAR_SAMP","VARIANCE","EXPLODE","INLINE","JSON_TUPLE","PARSE_URL_TUPLE","POSEXPLODE","STACK","LEAD","LAG","FIRST_VALUE","LAST_VALUE","RANK","ROW_NUMBER","DENSE_RANK","CUME_DIST","PERCENT_RANK","NTILE"],mO=["ADD","ADMIN","AFTER","ANALYZE","ARCHIVE","ASC","BEFORE","BUCKET","BUCKETS","CASCADE","CHANGE","CLUSTER","CLUSTERED","CLUSTERSTATUS","COLLECTION","COLUMNS","COMMENT","COMPACT","COMPACTIONS","COMPUTE","CONCATENATE","CONTINUE","DATA","DATABASES","DATETIME","DAY","DBPROPERTIES","DEFERRED","DEFINED","DELIMITED","DEPENDENCY","DESC","DIRECTORIES","DIRECTORY","DISABLE","DISTRIBUTE","ELEM_TYPE","ENABLE","ESCAPED","EXCLUSIVE","EXPLAIN","EXPORT","FIELDS","FILE","FILEFORMAT","FIRST","FORMAT","FORMATTED","FUNCTIONS","HOLD_DDLTIME","HOUR","IDXPROPERTIES","IGNORE","INDEX","INDEXES","INPATH","INPUTDRIVER","INPUTFORMAT","ITEMS","JAR","KEYS","KEY_TYPE","LIMIT","LINES","LOAD","LOCATION","LOCK","LOCKS","LOGICAL","LONG","MAPJOIN","MATERIALIZED","METADATA","MINUS","MINUTE","MONTH","MSCK","NOSCAN","NO_DROP","OFFLINE","OPTION","OUTPUTDRIVER","OUTPUTFORMAT","OVERWRITE","OWNER","PARTITIONED","PARTITIONS","PLUS","PRETTY","PRINCIPALS","PROTECTION","PURGE","READ","READONLY","REBUILD","RECORDREADER","RECORDWRITER","RELOAD","RENAME","REPAIR","REPLACE","REPLICATION","RESTRICT","REWRITE","ROLE","ROLES","SCHEMA","SCHEMAS","SECOND","SEMI","SERDE","SERDEPROPERTIES","SERVER","SETS","SHARED","SHOW","SHOW_DATABASE","SKEWED","SORT","SORTED","SSL","STATISTICS","STORED","STREAMTABLE","STRING","TABLES","TBLPROPERTIES","TEMPORARY","TERMINATED","TINYINT","TOUCH","TRANSACTIONS","UNARCHIVE","UNDO","UNIONTYPE","UNLOCK","UNSET","UNSIGNED","URI","USE","UTC","UTCTIMESTAMP","VALUE_TYPE","VIEW","WHILE","YEAR","AUTOCOMMIT","ISOLATION","LEVEL","OFFSET","SNAPSHOT","TRANSACTION","WORK","WRITE","ABORT","KEY","LAST","NORELY","NOVALIDATE","NULLS","RELY","VALIDATE","DETAIL","DOW","EXPRESSION","OPERATOR","QUARTER","SUMMARY","VECTORIZATION","WEEK","YEARS","MONTHS","WEEKS","DAYS","HOURS","MINUTES","SECONDS","TIMESTAMPTZ","ZONE","ALL","ALTER","AND","AS","AUTHORIZATION","BETWEEN","BOTH","BY","CASE","CAST","COLUMN","CONF","CREATE","CROSS","CUBE","CURRENT","CURRENT_DATE","CURRENT_TIMESTAMP","CURSOR","DATABASE","DELETE","DESCRIBE","DISTINCT","DROP","ELSE","END","EXCHANGE","EXISTS","EXTENDED","EXTERNAL","FALSE","FETCH","FOLLOWING","FOR","FROM","FULL","FUNCTION","GRANT","GROUP","GROUPING","HAVING","IF","IMPORT","IN","INNER","INSERT","INTERSECT","INTO","IS","JOIN","LATERAL","LEFT","LESS","LIKE","LOCAL","MACRO","MORE","NONE","NOT","NULL","OF","ON","OR","ORDER","OUT","OUTER","OVER","PARTIALSCAN","PARTITION","PERCENT","PRECEDING","PRESERVE","PROCEDURE","RANGE","READS","REDUCE","REVOKE","RIGHT","ROLLUP","ROW","ROWS","SELECT","SET","TABLE","TABLESAMPLE","THEN","TO","TRANSFORM","TRIGGER","TRUE","TRUNCATE","UNBOUNDED","UNION","UNIQUEJOIN","UPDATE","USER","USING","UTC_TMESTAMP","VALUES","WHEN","WHERE","WINDOW","WITH","COMMIT","ONLY","REGEXP","RLIKE","ROLLBACK","START","CACHE","CONSTRAINT","FOREIGN","PRIMARY","REFERENCES","DAYOFWEEK","EXTRACT","FLOOR","VIEWS","TIME","SYNC","TEXTFILE","SEQUENCEFILE","ORC","CSV","TSV","PARQUET","AVRO","RCFILE","JSONFILE","INPUTFORMAT","OUTPUTFORMAT"],UO=["ARRAY","BIGINT","BINARY","BOOLEAN","CHAR","DATE","DECIMAL","DOUBLE","FLOAT","INT","INTEGER","INTERVAL","MAP","NUMERIC","PRECISION","SMALLINT","STRUCT","TIMESTAMP","VARCHAR"],gO=S(["SELECT [ALL | DISTINCT]"]),GO=S(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","SORT BY","CLUSTER BY","DISTRIBUTE BY","LIMIT","INSERT INTO [TABLE]","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED [THEN]","UPDATE SET","INSERT [VALUES]","INSERT OVERWRITE [LOCAL] DIRECTORY","LOAD DATA [LOCAL] INPATH","[OVERWRITE] INTO TABLE"]),vi=S(["CREATE [TEMPORARY] [EXTERNAL] TABLE [IF NOT EXISTS]"]),AT=S(["CREATE [MATERIALIZED] VIEW [IF NOT EXISTS]","UPDATE","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE","RENAME TO","TRUNCATE [TABLE]","ALTER","CREATE","USE","DESCRIBE","DROP","FETCH","SHOW","STORED AS","STORED BY","ROW FORMAT"]),yO=S(["UNION [ALL | DISTINCT]"]),BO=S(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","LEFT SEMI JOIN"]),FO=S(["{ROWS | RANGE} BETWEEN"]),HO={name:"hive",tokenizerOptions:{reservedSelect:gO,reservedClauses:[...GO,...vi,...AT],reservedSetOperations:yO,reservedJoins:BO,reservedPhrases:FO,reservedKeywords:mO,reservedDataTypes:UO,reservedFunctionNames:MO,extraParens:["[]"],stringTypes:['""-bs',"''-bs"],identTypes:["``"],variableTypes:[{quote:"{}",prefixes:["$"],requirePrefix:!0}],operators:["%","~","^","|","&","<=>","==","!","||"]},formatOptions:{onelineClauses:[...vi,...AT],tabularOnelineClauses:AT}};function gr(t){return t.map((e,E)=>{let r=t[E+1]||Vt;if(ut.SET(e)&&r.text==="(")return ie(Ee({},e),{type:"RESERVED_FUNCTION_NAME"});let n=t[E-1]||Vt;return ut.VALUES(e)&&n.text==="="?ie(Ee({},e),{type:"RESERVED_FUNCTION_NAME"}):e})}var YO=["ACCESSIBLE","ADD","ALL","ALTER","ANALYZE","AND","AS","ASC","ASENSITIVE","BEFORE","BETWEEN","BOTH","BY","CALL","CASCADE","CASE","CHANGE","CHECK","COLLATE","COLUMN","CONDITION","CONSTRAINT","CONTINUE","CONVERT","CREATE","CROSS","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DATABASES","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DECLARE","DEFAULT","DELAYED","DELETE","DELETE_DOMAIN_ID","DESC","DESCRIBE","DETERMINISTIC","DISTINCT","DISTINCTROW","DIV","DO_DOMAIN_IDS","DROP","DUAL","EACH","ELSE","ELSEIF","ENCLOSED","ESCAPED","EXCEPT","EXISTS","EXIT","EXPLAIN","FALSE","FETCH","FOR","FORCE","FOREIGN","FROM","FULLTEXT","GENERAL","GRANT","GROUP","HAVING","HIGH_PRIORITY","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IF","IGNORE","IGNORE_DOMAIN_IDS","IGNORE_SERVER_IDS","IN","INDEX","INFILE","INNER","INOUT","INSENSITIVE","INSERT","INTERSECT","INTERVAL","INTO","IS","ITERATE","JOIN","KEY","KEYS","KILL","LEADING","LEAVE","LEFT","LIKE","LIMIT","LINEAR","LINES","LOAD","LOCALTIME","LOCALTIMESTAMP","LOCK","LOOP","LOW_PRIORITY","MASTER_HEARTBEAT_PERIOD","MASTER_SSL_VERIFY_SERVER_CERT","MATCH","MAXVALUE","MINUTE_MICROSECOND","MINUTE_SECOND","MOD","MODIFIES","NATURAL","NOT","NO_WRITE_TO_BINLOG","NULL","OFFSET","ON","OPTIMIZE","OPTION","OPTIONALLY","OR","ORDER","OUT","OUTER","OUTFILE","OVER","PAGE_CHECKSUM","PARSE_VCOL_EXPR","PARTITION","POSITION","PRIMARY","PROCEDURE","PURGE","RANGE","READ","READS","READ_WRITE","RECURSIVE","REF_SYSTEM_ID","REFERENCES","REGEXP","RELEASE","RENAME","REPEAT","REPLACE","REQUIRE","RESIGNAL","RESTRICT","RETURN","RETURNING","REVOKE","RIGHT","RLIKE","ROW_NUMBER","ROWS","SCHEMA","SCHEMAS","SECOND_MICROSECOND","SELECT","SENSITIVE","SEPARATOR","SET","SHOW","SIGNAL","SLOW","SPATIAL","SPECIFIC","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","SQL_BIG_RESULT","SQL_CALC_FOUND_ROWS","SQL_SMALL_RESULT","SSL","STARTING","STATS_AUTO_RECALC","STATS_PERSISTENT","STATS_SAMPLE_PAGES","STRAIGHT_JOIN","TABLE","TERMINATED","THEN","TO","TRAILING","TRIGGER","TRUE","UNDO","UNION","UNIQUE","UNLOCK","UNSIGNED","UPDATE","USAGE","USE","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","VALUES","WHEN","WHERE","WHILE","WINDOW","WITH","WRITE","XOR","YEAR_MONTH","ZEROFILL"],bO=["BIGINT","BINARY","BIT","BLOB","CHAR BYTE","CHAR","CHARACTER","DATETIME","DEC","DECIMAL","DOUBLE PRECISION","DOUBLE","ENUM","FIXED","FLOAT","FLOAT4","FLOAT8","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","LONG","LONGBLOB","LONGTEXT","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MIDDLEINT","NATIONAL CHAR","NATIONAL VARCHAR","NUMERIC","PRECISION","REAL","SMALLINT","TEXT","TIMESTAMP","TINYBLOB","TINYINT","TINYTEXT","VARBINARY","VARCHAR","VARCHARACTER","VARYING","YEAR"],vO=["ADDDATE","ADD_MONTHS","BIT_AND","BIT_OR","BIT_XOR","CAST","COUNT","CUME_DIST","CURDATE","CURTIME","DATE_ADD","DATE_SUB","DATE_FORMAT","DECODE","DENSE_RANK","EXTRACT","FIRST_VALUE","GROUP_CONCAT","JSON_ARRAYAGG","JSON_OBJECTAGG","LAG","LEAD","MAX","MEDIAN","MID","MIN","NOW","NTH_VALUE","NTILE","POSITION","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","RANK","ROW_NUMBER","SESSION_USER","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","SUBDATE","SUBSTR","SUBSTRING","SUM","SYSTEM_USER","TRIM","TRIM_ORACLE","VARIANCE","VAR_POP","VAR_SAMP","ABS","ACOS","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ASIN","ATAN","ATAN2","BENCHMARK","BIN","BINLOG_GTID_POS","BIT_COUNT","BIT_LENGTH","CEIL","CEILING","CHARACTER_LENGTH","CHAR_LENGTH","CHR","COERCIBILITY","COLUMN_CHECK","COLUMN_EXISTS","COLUMN_LIST","COLUMN_JSON","COMPRESS","CONCAT","CONCAT_OPERATOR_ORACLE","CONCAT_WS","CONNECTION_ID","CONV","CONVERT_TZ","COS","COT","CRC32","DATEDIFF","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DEGREES","DECODE_HISTOGRAM","DECODE_ORACLE","DES_DECRYPT","DES_ENCRYPT","ELT","ENCODE","ENCRYPT","EXP","EXPORT_SET","EXTRACTVALUE","FIELD","FIND_IN_SET","FLOOR","FORMAT","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GET_LOCK","GREATEST","HEX","IFNULL","INSTR","ISNULL","IS_FREE_LOCK","IS_USED_LOCK","JSON_ARRAY","JSON_ARRAY_APPEND","JSON_ARRAY_INSERT","JSON_COMPACT","JSON_CONTAINS","JSON_CONTAINS_PATH","JSON_DEPTH","JSON_DETAILED","JSON_EXISTS","JSON_EXTRACT","JSON_INSERT","JSON_KEYS","JSON_LENGTH","JSON_LOOSE","JSON_MERGE","JSON_MERGE_PATCH","JSON_MERGE_PRESERVE","JSON_QUERY","JSON_QUOTE","JSON_OBJECT","JSON_REMOVE","JSON_REPLACE","JSON_SET","JSON_SEARCH","JSON_TYPE","JSON_UNQUOTE","JSON_VALID","JSON_VALUE","LAST_DAY","LAST_INSERT_ID","LCASE","LEAST","LENGTH","LENGTHB","LN","LOAD_FILE","LOCATE","LOG","LOG10","LOG2","LOWER","LPAD","LPAD_ORACLE","LTRIM","LTRIM_ORACLE","MAKEDATE","MAKETIME","MAKE_SET","MASTER_GTID_WAIT","MASTER_POS_WAIT","MD5","MONTHNAME","NAME_CONST","NVL","NVL2","OCT","OCTET_LENGTH","ORD","PERIOD_ADD","PERIOD_DIFF","PI","POW","POWER","QUOTE","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","RADIANS","RAND","RELEASE_ALL_LOCKS","RELEASE_LOCK","REPLACE_ORACLE","REVERSE","ROUND","RPAD","RPAD_ORACLE","RTRIM","RTRIM_ORACLE","SEC_TO_TIME","SHA","SHA1","SHA2","SIGN","SIN","SLEEP","SOUNDEX","SPACE","SQRT","STRCMP","STR_TO_DATE","SUBSTR_ORACLE","SUBSTRING_INDEX","SUBTIME","SYS_GUID","TAN","TIMEDIFF","TIME_FORMAT","TIME_TO_SEC","TO_BASE64","TO_CHAR","TO_DAYS","TO_SECONDS","UCASE","UNCOMPRESS","UNCOMPRESSED_LENGTH","UNHEX","UNIX_TIMESTAMP","UPDATEXML","UPPER","UUID","UUID_SHORT","VERSION","WEEKDAY","WEEKOFYEAR","WSREP_LAST_WRITTEN_GTID","WSREP_LAST_SEEN_GTID","WSREP_SYNC_WAIT_UPTO_GTID","YEARWEEK","COALESCE","NULLIF"],VO=S(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),wO=S(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]","REPLACE [LOW_PRIORITY | DELAYED] [INTO]","VALUES","ON DUPLICATE KEY UPDATE","SET","RETURNING"]),Vi=S(["CREATE [OR REPLACE] [TEMPORARY] TABLE [IF NOT EXISTS]"]),aT=S(["CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]","UPDATE [LOW_PRIORITY] [IGNORE]","DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER [ONLINE] [IGNORE] TABLE [IF EXISTS]","ADD [COLUMN] [IF NOT EXISTS]","{CHANGE | MODIFY} [COLUMN] [IF EXISTS]","DROP [COLUMN] [IF EXISTS]","RENAME [TO]","RENAME COLUMN","ALTER [COLUMN]","{SET | DROP} DEFAULT","SET {VISIBLE | INVISIBLE}","TRUNCATE [TABLE]","ALTER DATABASE","ALTER DATABASE COMMENT","ALTER EVENT","ALTER FUNCTION","ALTER PROCEDURE","ALTER SCHEMA","ALTER SCHEMA COMMENT","ALTER SEQUENCE","ALTER SERVER","ALTER USER","ALTER VIEW","ANALYZE","ANALYZE TABLE","BACKUP LOCK","BACKUP STAGE","BACKUP UNLOCK","BEGIN","BINLOG","CACHE INDEX","CALL","CHANGE MASTER TO","CHECK TABLE","CHECK VIEW","CHECKSUM TABLE","COMMIT","CREATE AGGREGATE FUNCTION","CREATE DATABASE","CREATE EVENT","CREATE FUNCTION","CREATE INDEX","CREATE PROCEDURE","CREATE ROLE","CREATE SEQUENCE","CREATE SERVER","CREATE SPATIAL INDEX","CREATE TRIGGER","CREATE UNIQUE INDEX","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DROP DATABASE","DROP EVENT","DROP FUNCTION","DROP INDEX","DROP PREPARE","DROP PROCEDURE","DROP ROLE","DROP SEQUENCE","DROP SERVER","DROP TRIGGER","DROP USER","DROP VIEW","EXECUTE","EXPLAIN","FLUSH","GET DIAGNOSTICS","GET DIAGNOSTICS CONDITION","GRANT","HANDLER","HELP","INSTALL PLUGIN","INSTALL SONAME","KILL","LOAD DATA INFILE","LOAD INDEX INTO CACHE","LOAD XML INFILE","LOCK TABLE","OPTIMIZE TABLE","PREPARE","PURGE BINARY LOGS","PURGE MASTER LOGS","RELEASE SAVEPOINT","RENAME TABLE","RENAME USER","REPAIR TABLE","REPAIR VIEW","RESET MASTER","RESET QUERY CACHE","RESET REPLICA","RESET SLAVE","RESIGNAL","REVOKE","ROLLBACK","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET GLOBAL TRANSACTION","SET NAMES","SET PASSWORD","SET ROLE","SET STATEMENT","SET TRANSACTION","SHOW","SHOW ALL REPLICAS STATUS","SHOW ALL SLAVES STATUS","SHOW AUTHORS","SHOW BINARY LOGS","SHOW BINLOG EVENTS","SHOW BINLOG STATUS","SHOW CHARACTER SET","SHOW CLIENT_STATISTICS","SHOW COLLATION","SHOW COLUMNS","SHOW CONTRIBUTORS","SHOW CREATE DATABASE","SHOW CREATE EVENT","SHOW CREATE FUNCTION","SHOW CREATE PACKAGE","SHOW CREATE PACKAGE BODY","SHOW CREATE PROCEDURE","SHOW CREATE SEQUENCE","SHOW CREATE TABLE","SHOW CREATE TRIGGER","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINE INNODB STATUS","SHOW ENGINES","SHOW ERRORS","SHOW EVENTS","SHOW EXPLAIN","SHOW FUNCTION CODE","SHOW FUNCTION STATUS","SHOW GRANTS","SHOW INDEX","SHOW INDEXES","SHOW INDEX_STATISTICS","SHOW KEYS","SHOW LOCALES","SHOW MASTER LOGS","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PACKAGE BODY CODE","SHOW PACKAGE BODY STATUS","SHOW PACKAGE STATUS","SHOW PLUGINS","SHOW PLUGINS SONAME","SHOW PRIVILEGES","SHOW PROCEDURE CODE","SHOW PROCEDURE STATUS","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW QUERY_RESPONSE_TIME","SHOW RELAYLOG EVENTS","SHOW REPLICA","SHOW REPLICA HOSTS","SHOW REPLICA STATUS","SHOW SCHEMAS","SHOW SLAVE","SHOW SLAVE HOSTS","SHOW SLAVE STATUS","SHOW STATUS","SHOW STORAGE ENGINES","SHOW TABLE STATUS","SHOW TABLES","SHOW TRIGGERS","SHOW USER_STATISTICS","SHOW VARIABLES","SHOW WARNINGS","SHOW WSREP_MEMBERSHIP","SHOW WSREP_STATUS","SHUTDOWN","SIGNAL","START ALL REPLICAS","START ALL SLAVES","START REPLICA","START SLAVE","START TRANSACTION","STOP ALL REPLICAS","STOP ALL SLAVES","STOP REPLICA","STOP SLAVE","UNINSTALL PLUGIN","UNINSTALL SONAME","UNLOCK TABLE","USE","XA BEGIN","XA COMMIT","XA END","XA PREPARE","XA RECOVER","XA ROLLBACK","XA START"]),WO=S(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]","MINUS [ALL | DISTINCT]"]),XO=S(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),xO=S(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","CHARACTER SET","{ROWS | RANGE} BETWEEN","IDENTIFIED BY"]),KO={name:"mariadb",tokenizerOptions:{reservedSelect:VO,reservedClauses:[...wO,...Vi,...aT],reservedSetOperations:WO,reservedJoins:XO,reservedPhrases:xO,supportsXor:!0,reservedKeywords:YO,reservedDataTypes:bO,reservedFunctionNames:vO,stringTypes:['""-qq-bs',"''-qq-bs",{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_.$]+"},{quote:'""-qq-bs',prefixes:["@"],requirePrefix:!0},{quote:"''-qq-bs",prefixes:["@"],requirePrefix:!0},{quote:"``",prefixes:["@"],requirePrefix:!0}],paramTypes:{positional:!0},lineCommentTypes:["--","#"],operators:["%",":=","&","|","^","~","<<",">>","<=>","&&","||","!","*.*"],postProcess:gr},formatOptions:{onelineClauses:[...Vi,...aT],tabularOnelineClauses:aT}},JO=["ACCESSIBLE","ADD","ALL","ALTER","ANALYZE","AND","AS","ASC","ASENSITIVE","BEFORE","BETWEEN","BOTH","BY","CALL","CASCADE","CASE","CHANGE","CHECK","COLLATE","COLUMN","CONDITION","CONSTRAINT","CONTINUE","CONVERT","CREATE","CROSS","CUBE","CUME_DIST","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DATABASES","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DECLARE","DEFAULT","DELAYED","DELETE","DENSE_RANK","DESC","DESCRIBE","DETERMINISTIC","DISTINCT","DISTINCTROW","DIV","DROP","DUAL","EACH","ELSE","ELSEIF","EMPTY","ENCLOSED","ESCAPED","EXCEPT","EXISTS","EXIT","EXPLAIN","FALSE","FETCH","FIRST_VALUE","FOR","FORCE","FOREIGN","FROM","FULLTEXT","FUNCTION","GENERATED","GET","GRANT","GROUP","GROUPING","GROUPS","HAVING","HIGH_PRIORITY","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IF","IGNORE","IN","INDEX","INFILE","INNER","INOUT","INSENSITIVE","INSERT","IN","INTERSECT","INTERVAL","INTO","IO_AFTER_GTIDS","IO_BEFORE_GTIDS","IS","ITERATE","JOIN","JSON_TABLE","KEY","KEYS","KILL","LAG","LAST_VALUE","LATERAL","LEAD","LEADING","LEAVE","LEFT","LIKE","LIMIT","LINEAR","LINES","LOAD","LOCALTIME","LOCALTIMESTAMP","LOCK","LONG","LOOP","LOW_PRIORITY","MASTER_BIND","MASTER_SSL_VERIFY_SERVER_CERT","MATCH","MAXVALUE","MINUTE_MICROSECOND","MINUTE_SECOND","MOD","MODIFIES","NATURAL","NOT","NO_WRITE_TO_BINLOG","NTH_VALUE","NTILE","NULL","OF","ON","OPTIMIZE","OPTIMIZER_COSTS","OPTION","OPTIONALLY","OR","ORDER","OUT","OUTER","OUTFILE","OVER","PARTITION","PERCENT_RANK","PRIMARY","PROCEDURE","PURGE","RANGE","RANK","READ","READS","READ_WRITE","RECURSIVE","REFERENCES","REGEXP","RELEASE","RENAME","REPEAT","REPLACE","REQUIRE","RESIGNAL","RESTRICT","RETURN","REVOKE","RIGHT","RLIKE","ROW","ROWS","ROW_NUMBER","SCHEMA","SCHEMAS","SECOND_MICROSECOND","SELECT","SENSITIVE","SEPARATOR","SET","SHOW","SIGNAL","SPATIAL","SPECIFIC","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","SQL_BIG_RESULT","SQL_CALC_FOUND_ROWS","SQL_SMALL_RESULT","SSL","STARTING","STORED","STRAIGHT_JOIN","SYSTEM","TABLE","TERMINATED","THEN","TO","TRAILING","TRIGGER","TRUE","UNDO","UNION","UNIQUE","UNLOCK","UNSIGNED","UPDATE","USAGE","USE","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","VALUES","VIRTUAL","WHEN","WHERE","WHILE","WINDOW","WITH","WRITE","XOR","YEAR_MONTH","ZEROFILL"],$O=["BIGINT","BINARY","BIT","BLOB","BOOL","BOOLEAN","CHAR","CHARACTER","DATE","DATETIME","DEC","DECIMAL","DOUBLE PRECISION","DOUBLE","ENUM","FIXED","FLOAT","FLOAT4","FLOAT8","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","LONGBLOB","LONGTEXT","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MIDDLEINT","NATIONAL CHAR","NATIONAL VARCHAR","NUMERIC","PRECISION","REAL","SMALLINT","TEXT","TIME","TIMESTAMP","TINYBLOB","TINYINT","TINYTEXT","VARBINARY","VARCHAR","VARCHARACTER","VARYING","YEAR"],kO=["ABS","ACOS","ADDDATE","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ANY_VALUE","ASCII","ASIN","ATAN","ATAN2","AVG","BENCHMARK","BIN","BIN_TO_UUID","BINARY","BIT_AND","BIT_COUNT","BIT_LENGTH","BIT_OR","BIT_XOR","CAN_ACCESS_COLUMN","CAN_ACCESS_DATABASE","CAN_ACCESS_TABLE","CAN_ACCESS_USER","CAN_ACCESS_VIEW","CAST","CEIL","CEILING","CHAR","CHAR_LENGTH","CHARACTER_LENGTH","CHARSET","COALESCE","COERCIBILITY","COLLATION","COMPRESS","CONCAT","CONCAT_WS","CONNECTION_ID","CONV","CONVERT","CONVERT_TZ","COS","COT","COUNT","CRC32","CUME_DIST","CURDATE","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURTIME","DATABASE","DATE","DATE_ADD","DATE_FORMAT","DATE_SUB","DATEDIFF","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DEFAULT","DEGREES","DENSE_RANK","DIV","ELT","EXP","EXPORT_SET","EXTRACT","EXTRACTVALUE","FIELD","FIND_IN_SET","FIRST_VALUE","FLOOR","FORMAT","FORMAT_BYTES","FORMAT_PICO_TIME","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GEOMCOLLECTION","GEOMETRYCOLLECTION","GET_DD_COLUMN_PRIVILEGES","GET_DD_CREATE_OPTIONS","GET_DD_INDEX_SUB_PART_LENGTH","GET_FORMAT","GET_LOCK","GREATEST","GROUP_CONCAT","GROUPING","GTID_SUBSET","GTID_SUBTRACT","HEX","HOUR","ICU_VERSION","IF","IFNULL","INET_ATON","INET_NTOA","INET6_ATON","INET6_NTOA","INSERT","INSTR","INTERNAL_AUTO_INCREMENT","INTERNAL_AVG_ROW_LENGTH","INTERNAL_CHECK_TIME","INTERNAL_CHECKSUM","INTERNAL_DATA_FREE","INTERNAL_DATA_LENGTH","INTERNAL_DD_CHAR_LENGTH","INTERNAL_GET_COMMENT_OR_ERROR","INTERNAL_GET_ENABLED_ROLE_JSON","INTERNAL_GET_HOSTNAME","INTERNAL_GET_USERNAME","INTERNAL_GET_VIEW_WARNING_OR_ERROR","INTERNAL_INDEX_COLUMN_CARDINALITY","INTERNAL_INDEX_LENGTH","INTERNAL_IS_ENABLED_ROLE","INTERNAL_IS_MANDATORY_ROLE","INTERNAL_KEYS_DISABLED","INTERNAL_MAX_DATA_LENGTH","INTERNAL_TABLE_ROWS","INTERNAL_UPDATE_TIME","INTERVAL","IS","IS_FREE_LOCK","IS_IPV4","IS_IPV4_COMPAT","IS_IPV4_MAPPED","IS_IPV6","IS NOT","IS NOT NULL","IS NULL","IS_USED_LOCK","IS_UUID","ISNULL","JSON_ARRAY","JSON_ARRAY_APPEND","JSON_ARRAY_INSERT","JSON_ARRAYAGG","JSON_CONTAINS","JSON_CONTAINS_PATH","JSON_DEPTH","JSON_EXTRACT","JSON_INSERT","JSON_KEYS","JSON_LENGTH","JSON_MERGE","JSON_MERGE_PATCH","JSON_MERGE_PRESERVE","JSON_OBJECT","JSON_OBJECTAGG","JSON_OVERLAPS","JSON_PRETTY","JSON_QUOTE","JSON_REMOVE","JSON_REPLACE","JSON_SCHEMA_VALID","JSON_SCHEMA_VALIDATION_REPORT","JSON_SEARCH","JSON_SET","JSON_STORAGE_FREE","JSON_STORAGE_SIZE","JSON_TABLE","JSON_TYPE","JSON_UNQUOTE","JSON_VALID","JSON_VALUE","LAG","LAST_DAY","LAST_INSERT_ID","LAST_VALUE","LCASE","LEAD","LEAST","LEFT","LENGTH","LIKE","LINESTRING","LN","LOAD_FILE","LOCALTIME","LOCALTIMESTAMP","LOCATE","LOG","LOG10","LOG2","LOWER","LPAD","LTRIM","MAKE_SET","MAKEDATE","MAKETIME","MASTER_POS_WAIT","MATCH","MAX","MBRCONTAINS","MBRCOVEREDBY","MBRCOVERS","MBRDISJOINT","MBREQUALS","MBRINTERSECTS","MBROVERLAPS","MBRTOUCHES","MBRWITHIN","MD5","MEMBER OF","MICROSECOND","MID","MIN","MINUTE","MOD","MONTH","MONTHNAME","MULTILINESTRING","MULTIPOINT","MULTIPOLYGON","NAME_CONST","NOT","NOT IN","NOT LIKE","NOT REGEXP","NOW","NTH_VALUE","NTILE","NULLIF","OCT","OCTET_LENGTH","ORD","PERCENT_RANK","PERIOD_ADD","PERIOD_DIFF","PI","POINT","POLYGON","POSITION","POW","POWER","PS_CURRENT_THREAD_ID","PS_THREAD_ID","QUARTER","QUOTE","RADIANS","RAND","RANDOM_BYTES","RANK","REGEXP","REGEXP_INSTR","REGEXP_LIKE","REGEXP_REPLACE","REGEXP_SUBSTR","RELEASE_ALL_LOCKS","RELEASE_LOCK","REPEAT","REPLACE","REVERSE","RIGHT","RLIKE","ROLES_GRAPHML","ROUND","ROW_COUNT","ROW_NUMBER","RPAD","RTRIM","SCHEMA","SEC_TO_TIME","SECOND","SESSION_USER","SHA1","SHA2","SIGN","SIN","SLEEP","SOUNDEX","SOUNDS LIKE","SOURCE_POS_WAIT","SPACE","SQRT","ST_AREA","ST_ASBINARY","ST_ASGEOJSON","ST_ASTEXT","ST_BUFFER","ST_BUFFER_STRATEGY","ST_CENTROID","ST_COLLECT","ST_CONTAINS","ST_CONVEXHULL","ST_CROSSES","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_DISTANCE_SPHERE","ST_ENDPOINT","ST_ENVELOPE","ST_EQUALS","ST_EXTERIORRING","ST_FRECHETDISTANCE","ST_GEOHASH","ST_GEOMCOLLFROMTEXT","ST_GEOMCOLLFROMWKB","ST_GEOMETRYN","ST_GEOMETRYTYPE","ST_GEOMFROMGEOJSON","ST_GEOMFROMTEXT","ST_GEOMFROMWKB","ST_HAUSDORFFDISTANCE","ST_INTERIORRINGN","ST_INTERSECTION","ST_INTERSECTS","ST_ISCLOSED","ST_ISEMPTY","ST_ISSIMPLE","ST_ISVALID","ST_LATFROMGEOHASH","ST_LATITUDE","ST_LENGTH","ST_LINEFROMTEXT","ST_LINEFROMWKB","ST_LINEINTERPOLATEPOINT","ST_LINEINTERPOLATEPOINTS","ST_LONGFROMGEOHASH","ST_LONGITUDE","ST_MAKEENVELOPE","ST_MLINEFROMTEXT","ST_MLINEFROMWKB","ST_MPOINTFROMTEXT","ST_MPOINTFROMWKB","ST_MPOLYFROMTEXT","ST_MPOLYFROMWKB","ST_NUMGEOMETRIES","ST_NUMINTERIORRING","ST_NUMPOINTS","ST_OVERLAPS","ST_POINTATDISTANCE","ST_POINTFROMGEOHASH","ST_POINTFROMTEXT","ST_POINTFROMWKB","ST_POINTN","ST_POLYFROMTEXT","ST_POLYFROMWKB","ST_SIMPLIFY","ST_SRID","ST_STARTPOINT","ST_SWAPXY","ST_SYMDIFFERENCE","ST_TOUCHES","ST_TRANSFORM","ST_UNION","ST_VALIDATE","ST_WITHIN","ST_X","ST_Y","STATEMENT_DIGEST","STATEMENT_DIGEST_TEXT","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DATE","STRCMP","SUBDATE","SUBSTR","SUBSTRING","SUBSTRING_INDEX","SUBTIME","SUM","SYSDATE","SYSTEM_USER","TAN","TIME","TIME_FORMAT","TIME_TO_SEC","TIMEDIFF","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TO_BASE64","TO_DAYS","TO_SECONDS","TRIM","TRUNCATE","UCASE","UNCOMPRESS","UNCOMPRESSED_LENGTH","UNHEX","UNIX_TIMESTAMP","UPDATEXML","UPPER","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","UUID","UUID_SHORT","UUID_TO_BIN","VALIDATE_PASSWORD_STRENGTH","VALUES","VAR_POP","VAR_SAMP","VARIANCE","VERSION","WAIT_FOR_EXECUTED_GTID_SET","WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS","WEEK","WEEKDAY","WEEKOFYEAR","WEIGHT_STRING","YEAR","YEARWEEK"],qO=S(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),QO=S(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]","REPLACE [LOW_PRIORITY | DELAYED] [INTO]","VALUES","ON DUPLICATE KEY UPDATE","SET"]),wi=S(["CREATE [TEMPORARY] TABLE [IF NOT EXISTS]"]),ST=S(["CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]","UPDATE [LOW_PRIORITY] [IGNORE]","DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER TABLE","ADD [COLUMN]","{CHANGE | MODIFY} [COLUMN]","DROP [COLUMN]","RENAME [TO | AS]","RENAME COLUMN","ALTER [COLUMN]","{SET | DROP} DEFAULT","TRUNCATE [TABLE]","ALTER DATABASE","ALTER EVENT","ALTER FUNCTION","ALTER INSTANCE","ALTER LOGFILE GROUP","ALTER PROCEDURE","ALTER RESOURCE GROUP","ALTER SERVER","ALTER TABLESPACE","ALTER USER","ALTER VIEW","ANALYZE TABLE","BINLOG","CACHE INDEX","CALL","CHANGE MASTER TO","CHANGE REPLICATION FILTER","CHANGE REPLICATION SOURCE TO","CHECK TABLE","CHECKSUM TABLE","CLONE","COMMIT","CREATE DATABASE","CREATE EVENT","CREATE FUNCTION","CREATE FUNCTION","CREATE INDEX","CREATE LOGFILE GROUP","CREATE PROCEDURE","CREATE RESOURCE GROUP","CREATE ROLE","CREATE SERVER","CREATE SPATIAL REFERENCE SYSTEM","CREATE TABLESPACE","CREATE TRIGGER","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DROP DATABASE","DROP EVENT","DROP FUNCTION","DROP FUNCTION","DROP INDEX","DROP LOGFILE GROUP","DROP PROCEDURE","DROP RESOURCE GROUP","DROP ROLE","DROP SERVER","DROP SPATIAL REFERENCE SYSTEM","DROP TABLESPACE","DROP TRIGGER","DROP USER","DROP VIEW","EXECUTE","EXPLAIN","FLUSH","GRANT","HANDLER","HELP","IMPORT TABLE","INSTALL COMPONENT","INSTALL PLUGIN","KILL","LOAD DATA","LOAD INDEX INTO CACHE","LOAD XML","LOCK INSTANCE FOR BACKUP","LOCK TABLES","MASTER_POS_WAIT","OPTIMIZE TABLE","PREPARE","PURGE BINARY LOGS","RELEASE SAVEPOINT","RENAME TABLE","RENAME USER","REPAIR TABLE","RESET","RESET MASTER","RESET PERSIST","RESET REPLICA","RESET SLAVE","RESTART","REVOKE","ROLLBACK","ROLLBACK TO SAVEPOINT","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET NAMES","SET PASSWORD","SET RESOURCE GROUP","SET ROLE","SET TRANSACTION","SHOW","SHOW BINARY LOGS","SHOW BINLOG EVENTS","SHOW CHARACTER SET","SHOW COLLATION","SHOW COLUMNS","SHOW CREATE DATABASE","SHOW CREATE EVENT","SHOW CREATE FUNCTION","SHOW CREATE PROCEDURE","SHOW CREATE TABLE","SHOW CREATE TRIGGER","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINES","SHOW ERRORS","SHOW EVENTS","SHOW FUNCTION CODE","SHOW FUNCTION STATUS","SHOW GRANTS","SHOW INDEX","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PLUGINS","SHOW PRIVILEGES","SHOW PROCEDURE CODE","SHOW PROCEDURE STATUS","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW RELAYLOG EVENTS","SHOW REPLICA STATUS","SHOW REPLICAS","SHOW SLAVE","SHOW SLAVE HOSTS","SHOW STATUS","SHOW TABLE STATUS","SHOW TABLES","SHOW TRIGGERS","SHOW VARIABLES","SHOW WARNINGS","SHUTDOWN","SOURCE_POS_WAIT","START GROUP_REPLICATION","START REPLICA","START SLAVE","START TRANSACTION","STOP GROUP_REPLICATION","STOP REPLICA","STOP SLAVE","TABLE","UNINSTALL COMPONENT","UNINSTALL PLUGIN","UNLOCK INSTANCE","UNLOCK TABLES","USE","XA","ITERATE","LEAVE","LOOP","REPEAT","RETURN","WHILE"]),jO=S(["UNION [ALL | DISTINCT]"]),ZO=S(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),zO=S(["ON {UPDATE | DELETE} [SET NULL]","CHARACTER SET","{ROWS | RANGE} BETWEEN","IDENTIFIED BY"]),eI={name:"mysql",tokenizerOptions:{reservedSelect:qO,reservedClauses:[...QO,...wi,...ST],reservedSetOperations:jO,reservedJoins:ZO,reservedPhrases:zO,supportsXor:!0,reservedKeywords:JO,reservedDataTypes:$O,reservedFunctionNames:kO,stringTypes:['""-qq-bs',{quote:"''-qq-bs",prefixes:["N"]},{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_.$]+"},{quote:'""-qq-bs',prefixes:["@"],requirePrefix:!0},{quote:"''-qq-bs",prefixes:["@"],requirePrefix:!0},{quote:"``",prefixes:["@"],requirePrefix:!0}],paramTypes:{positional:!0},lineCommentTypes:["--","#"],operators:["%",":=","&","|","^","~","<<",">>","<=>","->","->>","&&","||","!","*.*"],postProcess:gr},formatOptions:{onelineClauses:[...wi,...ST],tabularOnelineClauses:ST}},tI=["ADD","ALL","ALTER","ANALYZE","AND","ARRAY","AS","ASC","BETWEEN","BOTH","BY","CALL","CASCADE","CASE","CHANGE","CHECK","COLLATE","COLUMN","CONSTRAINT","CONTINUE","CONVERT","CREATE","CROSS","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DATABASES","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DEFAULT","DELAYED","DELETE","DESC","DESCRIBE","DISTINCT","DISTINCTROW","DIV","DOUBLE","DROP","DUAL","ELSE","ELSEIF","ENCLOSED","ESCAPED","EXCEPT","EXISTS","EXIT","EXPLAIN","FALSE","FETCH","FOR","FORCE","FOREIGN","FROM","FULLTEXT","GENERATED","GRANT","GROUP","GROUPS","HAVING","HIGH_PRIORITY","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IF","IGNORE","ILIKE","IN","INDEX","INFILE","INNER","INOUT","INSERT","INTERSECT","INTERVAL","INTO","IS","ITERATE","JOIN","KEY","KEYS","KILL","LEADING","LEAVE","LEFT","LIKE","LIMIT","LINEAR","LINES","LOAD","LOCALTIME","LOCALTIMESTAMP","LOCK","LONG","LOW_PRIORITY","MATCH","MAXVALUE","MINUTE_MICROSECOND","MINUTE_SECOND","MOD","NATURAL","NOT","NO_WRITE_TO_BINLOG","NULL","OF","ON","OPTIMIZE","OPTION","OPTIONALLY","OR","ORDER","OUT","OUTER","OUTFILE","OVER","PARTITION","PRIMARY","PROCEDURE","RANGE","READ","RECURSIVE","REFERENCES","REGEXP","RELEASE","RENAME","REPEAT","REPLACE","REQUIRE","RESTRICT","REVOKE","RIGHT","RLIKE","ROW","ROWS","SECOND_MICROSECOND","SELECT","SET","SHOW","SPATIAL","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","SQL_BIG_RESULT","SQL_CALC_FOUND_ROWS","SQL_SMALL_RESULT","SSL","STARTING","STATS_EXTENDED","STORED","STRAIGHT_JOIN","TABLE","TABLESAMPLE","TERMINATED","THEN","TO","TRAILING","TRIGGER","TRUE","TiDB_CURRENT_TSO","UNION","UNIQUE","UNLOCK","UNSIGNED","UNTIL","UPDATE","USAGE","USE","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","VALUES","VIRTUAL","WHEN","WHERE","WHILE","WINDOW","WITH","WRITE","XOR","YEAR_MONTH","ZEROFILL"],EI=["BIGINT","BINARY","BIT","BLOB","BOOL","BOOLEAN","CHAR","CHARACTER","DATE","DATETIME","DEC","DECIMAL","DOUBLE PRECISION","DOUBLE","ENUM","FIXED","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","LONGBLOB","LONGTEXT","MEDIUMBLOB","MEDIUMINT","MIDDLEINT","NATIONAL CHAR","NATIONAL VARCHAR","NUMERIC","PRECISION","SMALLINT","TEXT","TIME","TIMESTAMP","TINYBLOB","TINYINT","TINYTEXT","VARBINARY","VARCHAR","VARCHARACTER","VARYING","YEAR"],rI=["ABS","ACOS","ADDDATE","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ANY_VALUE","ASCII","ASIN","ATAN","ATAN2","AVG","BENCHMARK","BIN","BIN_TO_UUID","BIT_AND","BIT_COUNT","BIT_LENGTH","BIT_OR","BIT_XOR","BITAND","BITNEG","BITOR","BITXOR","CASE","CAST","CEIL","CEILING","CHAR_FUNC","CHAR_LENGTH","CHARACTER_LENGTH","CHARSET","COALESCE","COERCIBILITY","COLLATION","COMPRESS","CONCAT","CONCAT_WS","CONNECTION_ID","CONV","CONVERT","CONVERT_TZ","COS","COT","COUNT","CRC32","CUME_DIST","CURDATE","CURRENT_DATE","CURRENT_RESOURCE_GROUP","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURTIME","DATABASE","DATE","DATE_ADD","DATE_FORMAT","DATE_SUB","DATEDIFF","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DECODE","DEFAULT_FUNC","DEGREES","DENSE_RANK","DES_DECRYPT","DES_ENCRYPT","DIV","ELT","ENCODE","ENCRYPT","EQ","EXP","EXPORT_SET","EXTRACT","FIELD","FIND_IN_SET","FIRST_VALUE","FLOOR","FORMAT","FORMAT_BYTES","FORMAT_NANO_TIME","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GE","GET_FORMAT","GET_LOCK","GETPARAM","GREATEST","GROUP_CONCAT","GROUPING","GT","HEX","HOUR","IF","IFNULL","ILIKE","INET6_ATON","INET6_NTOA","INET_ATON","INET_NTOA","INSERT_FUNC","INSTR","INTDIV","INTERVAL","IS_FREE_LOCK","IS_IPV4","IS_IPV4_COMPAT","IS_IPV4_MAPPED","IS_IPV6","IS_USED_LOCK","IS_UUID","ISFALSE","ISNULL","ISTRUE","JSON_ARRAY","JSON_ARRAYAGG","JSON_ARRAY_APPEND","JSON_ARRAY_INSERT","JSON_CONTAINS","JSON_CONTAINS_PATH","JSON_DEPTH","JSON_EXTRACT","JSON_INSERT","JSON_KEYS","JSON_LENGTH","JSON_MEMBEROF","JSON_MERGE","JSON_MERGE_PATCH","JSON_MERGE_PRESERVE","JSON_OBJECT","JSON_OBJECTAGG","JSON_OVERLAPS","JSON_PRETTY","JSON_QUOTE","JSON_REMOVE","JSON_REPLACE","JSON_SEARCH","JSON_SET","JSON_STORAGE_FREE","JSON_STORAGE_SIZE","JSON_TYPE","JSON_UNQUOTE","JSON_VALID","LAG","LAST_DAY","LAST_INSERT_ID","LAST_VALUE","LASTVAL","LCASE","LE","LEAD","LEAST","LEFT","LEFTSHIFT","LENGTH","LIKE","LN","LOAD_FILE","LOCALTIME","LOCALTIMESTAMP","LOCATE","LOG","LOG10","LOG2","LOWER","LPAD","LT","LTRIM","MAKE_SET","MAKEDATE","MAKETIME","MASTER_POS_WAIT","MAX","MD5","MICROSECOND","MID","MIN","MINUS","MINUTE","MOD","MONTH","MONTHNAME","MUL","NAME_CONST","NE","NEXTVAL","NOT","NOW","NTH_VALUE","NTILE","NULLEQ","OCT","OCTET_LENGTH","OLD_PASSWORD","ORD","PASSWORD_FUNC","PERCENT_RANK","PERIOD_ADD","PERIOD_DIFF","PI","PLUS","POSITION","POW","POWER","QUARTER","QUOTE","RADIANS","RAND","RANDOM_BYTES","RANK","REGEXP","REGEXP_INSTR","REGEXP_LIKE","REGEXP_REPLACE","REGEXP_SUBSTR","RELEASE_ALL_LOCKS","RELEASE_LOCK","REPEAT","REPLACE","REVERSE","RIGHT","RIGHTSHIFT","ROUND","ROW_COUNT","ROW_NUMBER","RPAD","RTRIM","SCHEMA","SEC_TO_TIME","SECOND","SESSION_USER","SETVAL","SETVAR","SHA","SHA1","SHA2","SIGN","SIN","SLEEP","SM3","SPACE","SQRT","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DATE","STRCMP","SUBDATE","SUBSTR","SUBSTRING","SUBSTRING_INDEX","SUBTIME","SUM","SYSDATE","SYSTEM_USER","TAN","TIDB_BOUNDED_STALENESS","TIDB_CURRENT_TSO","TIDB_DECODE_BINARY_PLAN","TIDB_DECODE_KEY","TIDB_DECODE_PLAN","TIDB_DECODE_SQL_DIGESTS","TIDB_ENCODE_SQL_DIGEST","TIDB_IS_DDL_OWNER","TIDB_PARSE_TSO","TIDB_PARSE_TSO_LOGICAL","TIDB_ROW_CHECKSUM","TIDB_SHARD","TIDB_VERSION","TIME","TIME_FORMAT","TIME_TO_SEC","TIMEDIFF","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TO_BASE64","TO_DAYS","TO_SECONDS","TRANSLATE","TRIM","TRUNCATE","UCASE","UNARYMINUS","UNCOMPRESS","UNCOMPRESSED_LENGTH","UNHEX","UNIX_TIMESTAMP","UPPER","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","UUID","UUID_SHORT","UUID_TO_BIN","VALIDATE_PASSWORD_STRENGTH","VAR_POP","VAR_SAMP","VARIANCE","VERSION","VITESS_HASH","WEEK","WEEKDAY","WEEKOFYEAR","WEIGHT_STRING","YEAR","YEARWEEK"],nI=S(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),TI=S(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]","REPLACE [LOW_PRIORITY | DELAYED] [INTO]","VALUES","ON DUPLICATE KEY UPDATE","SET"]),Wi=S(["CREATE [TEMPORARY] TABLE [IF NOT EXISTS]"]),OT=S(["CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]","UPDATE [LOW_PRIORITY] [IGNORE]","DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER TABLE","ADD [COLUMN]","{CHANGE | MODIFY} [COLUMN]","DROP [COLUMN]","RENAME [TO | AS]","RENAME COLUMN","ALTER [COLUMN]","{SET | DROP} DEFAULT","TRUNCATE [TABLE]","ALTER DATABASE","ALTER INSTANCE","ALTER RESOURCE GROUP","ALTER SEQUENCE","ALTER USER","ALTER VIEW","ANALYZE TABLE","CHECK TABLE","CHECKSUM TABLE","COMMIT","CREATE DATABASE","CREATE INDEX","CREATE RESOURCE GROUP","CREATE ROLE","CREATE SEQUENCE","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DROP DATABASE","DROP INDEX","DROP RESOURCE GROUP","DROP ROLE","DROP TABLESPACE","DROP USER","DROP VIEW","EXPLAIN","FLUSH","GRANT","IMPORT TABLE","INSTALL COMPONENT","INSTALL PLUGIN","KILL","LOAD DATA","LOCK INSTANCE FOR BACKUP","LOCK TABLES","OPTIMIZE TABLE","PREPARE","RELEASE SAVEPOINT","RENAME TABLE","RENAME USER","REPAIR TABLE","RESET","REVOKE","ROLLBACK","ROLLBACK TO SAVEPOINT","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET NAMES","SET PASSWORD","SET RESOURCE GROUP","SET ROLE","SET TRANSACTION","SHOW","SHOW BINARY LOGS","SHOW BINLOG EVENTS","SHOW CHARACTER SET","SHOW COLLATION","SHOW COLUMNS","SHOW CREATE DATABASE","SHOW CREATE TABLE","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINES","SHOW ERRORS","SHOW EVENTS","SHOW GRANTS","SHOW INDEX","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PLUGINS","SHOW PRIVILEGES","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW STATUS","SHOW TABLE STATUS","SHOW TABLES","SHOW TRIGGERS","SHOW VARIABLES","SHOW WARNINGS","TABLE","UNINSTALL COMPONENT","UNINSTALL PLUGIN","UNLOCK INSTANCE","UNLOCK TABLES","USE"]),sI=S(["UNION [ALL | DISTINCT]"]),iI=S(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),oI=S(["ON {UPDATE | DELETE} [SET NULL]","CHARACTER SET","{ROWS | RANGE} BETWEEN","IDENTIFIED BY"]),RI={name:"tidb",tokenizerOptions:{reservedSelect:nI,reservedClauses:[...TI,...Wi,...OT],reservedSetOperations:sI,reservedJoins:iI,reservedPhrases:oI,supportsXor:!0,reservedKeywords:tI,reservedDataTypes:EI,reservedFunctionNames:rI,stringTypes:['""-qq-bs',{quote:"''-qq-bs",prefixes:["N"]},{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_.$]+"},{quote:'""-qq-bs',prefixes:["@"],requirePrefix:!0},{quote:"''-qq-bs",prefixes:["@"],requirePrefix:!0},{quote:"``",prefixes:["@"],requirePrefix:!0}],paramTypes:{positional:!0},lineCommentTypes:["--","#"],operators:["%",":=","&","|","^","~","<<",">>","<=>","->","->>","&&","||","!","*.*"],postProcess:gr},formatOptions:{onelineClauses:[...Wi,...OT],tabularOnelineClauses:OT}},AI=["ABORT","ABS","ACOS","ADVISOR","ARRAY_AGG","ARRAY_AGG","ARRAY_APPEND","ARRAY_AVG","ARRAY_BINARY_SEARCH","ARRAY_CONCAT","ARRAY_CONTAINS","ARRAY_COUNT","ARRAY_DISTINCT","ARRAY_EXCEPT","ARRAY_FLATTEN","ARRAY_IFNULL","ARRAY_INSERT","ARRAY_INTERSECT","ARRAY_LENGTH","ARRAY_MAX","ARRAY_MIN","ARRAY_MOVE","ARRAY_POSITION","ARRAY_PREPEND","ARRAY_PUT","ARRAY_RANGE","ARRAY_REMOVE","ARRAY_REPEAT","ARRAY_REPLACE","ARRAY_REVERSE","ARRAY_SORT","ARRAY_STAR","ARRAY_SUM","ARRAY_SYMDIFF","ARRAY_SYMDIFF1","ARRAY_SYMDIFFN","ARRAY_UNION","ASIN","ATAN","ATAN2","AVG","BASE64","BASE64_DECODE","BASE64_ENCODE","BITAND ","BITCLEAR ","BITNOT ","BITOR ","BITSET ","BITSHIFT ","BITTEST ","BITXOR ","CEIL","CLOCK_LOCAL","CLOCK_MILLIS","CLOCK_STR","CLOCK_TZ","CLOCK_UTC","COALESCE","CONCAT","CONCAT2","CONTAINS","CONTAINS_TOKEN","CONTAINS_TOKEN_LIKE","CONTAINS_TOKEN_REGEXP","COS","COUNT","COUNT","COUNTN","CUME_DIST","CURL","DATE_ADD_MILLIS","DATE_ADD_STR","DATE_DIFF_MILLIS","DATE_DIFF_STR","DATE_FORMAT_STR","DATE_PART_MILLIS","DATE_PART_STR","DATE_RANGE_MILLIS","DATE_RANGE_STR","DATE_TRUNC_MILLIS","DATE_TRUNC_STR","DECODE","DECODE_JSON","DEGREES","DENSE_RANK","DURATION_TO_STR","ENCODED_SIZE","ENCODE_JSON","EXP","FIRST_VALUE","FLOOR","GREATEST","HAS_TOKEN","IFINF","IFMISSING","IFMISSINGORNULL","IFNAN","IFNANORINF","IFNULL","INITCAP","ISARRAY","ISATOM","ISBITSET","ISBOOLEAN","ISNUMBER","ISOBJECT","ISSTRING","LAG","LAST_VALUE","LEAD","LEAST","LENGTH","LN","LOG","LOWER","LTRIM","MAX","MEAN","MEDIAN","META","MILLIS","MILLIS_TO_LOCAL","MILLIS_TO_STR","MILLIS_TO_TZ","MILLIS_TO_UTC","MILLIS_TO_ZONE_NAME","MIN","MISSINGIF","NANIF","NEGINFIF","NOW_LOCAL","NOW_MILLIS","NOW_STR","NOW_TZ","NOW_UTC","NTH_VALUE","NTILE","NULLIF","NVL","NVL2","OBJECT_ADD","OBJECT_CONCAT","OBJECT_INNER_PAIRS","OBJECT_INNER_VALUES","OBJECT_LENGTH","OBJECT_NAMES","OBJECT_PAIRS","OBJECT_PUT","OBJECT_REMOVE","OBJECT_RENAME","OBJECT_REPLACE","OBJECT_UNWRAP","OBJECT_VALUES","PAIRS","PERCENT_RANK","PI","POLY_LENGTH","POSINFIF","POSITION","POWER","RADIANS","RANDOM","RANK","RATIO_TO_REPORT","REGEXP_CONTAINS","REGEXP_LIKE","REGEXP_MATCHES","REGEXP_POSITION","REGEXP_REPLACE","REGEXP_SPLIT","REGEX_CONTAINS","REGEX_LIKE","REGEX_MATCHES","REGEX_POSITION","REGEX_REPLACE","REGEX_SPLIT","REPEAT","REPLACE","REVERSE","ROUND","ROW_NUMBER","RTRIM","SEARCH","SEARCH_META","SEARCH_SCORE","SIGN","SIN","SPLIT","SQRT","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DURATION","STR_TO_MILLIS","STR_TO_TZ","STR_TO_UTC","STR_TO_ZONE_NAME","SUBSTR","SUFFIXES","SUM","TAN","TITLE","TOARRAY","TOATOM","TOBOOLEAN","TOKENS","TOKENS","TONUMBER","TOOBJECT","TOSTRING","TRIM","TRUNC","UPPER","UUID","VARIANCE","VARIANCE_POP","VARIANCE_SAMP","VAR_POP","VAR_SAMP","WEEKDAY_MILLIS","WEEKDAY_STR","CAST"],aI=["ADVISE","ALL","ALTER","ANALYZE","AND","ANY","ARRAY","AS","ASC","AT","BEGIN","BETWEEN","BINARY","BOOLEAN","BREAK","BUCKET","BUILD","BY","CALL","CASE","CAST","CLUSTER","COLLATE","COLLECTION","COMMIT","COMMITTED","CONNECT","CONTINUE","CORRELATED","COVER","CREATE","CURRENT","DATABASE","DATASET","DATASTORE","DECLARE","DECREMENT","DELETE","DERIVED","DESC","DESCRIBE","DISTINCT","DO","DROP","EACH","ELEMENT","ELSE","END","EVERY","EXCEPT","EXCLUDE","EXECUTE","EXISTS","EXPLAIN","FALSE","FETCH","FILTER","FIRST","FLATTEN","FLUSH","FOLLOWING","FOR","FORCE","FROM","FTS","FUNCTION","GOLANG","GRANT","GROUP","GROUPS","GSI","HASH","HAVING","IF","IGNORE","ILIKE","IN","INCLUDE","INCREMENT","INDEX","INFER","INLINE","INNER","INSERT","INTERSECT","INTO","IS","ISOLATION","JAVASCRIPT","JOIN","KEY","KEYS","KEYSPACE","KNOWN","LANGUAGE","LAST","LEFT","LET","LETTING","LEVEL","LIKE","LIMIT","LSM","MAP","MAPPING","MATCHED","MATERIALIZED","MERGE","MINUS","MISSING","NAMESPACE","NEST","NL","NO","NOT","NTH_VALUE","NULL","NULLS","NUMBER","OBJECT","OFFSET","ON","OPTION","OPTIONS","OR","ORDER","OTHERS","OUTER","OVER","PARSE","PARTITION","PASSWORD","PATH","POOL","PRECEDING","PREPARE","PRIMARY","PRIVATE","PRIVILEGE","PROBE","PROCEDURE","PUBLIC","RANGE","RAW","REALM","REDUCE","RENAME","RESPECT","RETURN","RETURNING","REVOKE","RIGHT","ROLE","ROLLBACK","ROW","ROWS","SATISFIES","SAVEPOINT","SCHEMA","SCOPE","SELECT","SELF","SEMI","SET","SHOW","SOME","START","STATISTICS","STRING","SYSTEM","THEN","TIES","TO","TRAN","TRANSACTION","TRIGGER","TRUE","TRUNCATE","UNBOUNDED","UNDER","UNION","UNIQUE","UNKNOWN","UNNEST","UNSET","UPDATE","UPSERT","USE","USER","USING","VALIDATE","VALUE","VALUED","VALUES","VIA","VIEW","WHEN","WHERE","WHILE","WINDOW","WITH","WITHIN","WORK","XOR"],SI=[],OI=S(["SELECT [ALL | DISTINCT]"]),II=S(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT INTO","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED THEN","UPDATE SET","INSERT","NEST","UNNEST","RETURNING"]),Xi=S(["UPDATE","DELETE FROM","SET SCHEMA","ADVISE","ALTER INDEX","BEGIN TRANSACTION","BUILD INDEX","COMMIT TRANSACTION","CREATE COLLECTION","CREATE FUNCTION","CREATE INDEX","CREATE PRIMARY INDEX","CREATE SCOPE","DROP COLLECTION","DROP FUNCTION","DROP INDEX","DROP PRIMARY INDEX","DROP SCOPE","EXECUTE","EXECUTE FUNCTION","EXPLAIN","GRANT","INFER","PREPARE","REVOKE","ROLLBACK TRANSACTION","SAVEPOINT","SET TRANSACTION","UPDATE STATISTICS","UPSERT","LET","SET CURRENT SCHEMA","SHOW","USE [PRIMARY] KEYS"]),NI=S(["UNION [ALL]","EXCEPT [ALL]","INTERSECT [ALL]"]),lI=S(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","INNER JOIN"]),CI=S(["{ROWS | RANGE | GROUPS} BETWEEN"]),_I={name:"n1ql",tokenizerOptions:{reservedSelect:OI,reservedClauses:[...II,...Xi],reservedSetOperations:NI,reservedJoins:lI,reservedPhrases:CI,supportsXor:!0,reservedKeywords:aI,reservedDataTypes:SI,reservedFunctionNames:AI,stringTypes:['""-bs',"''-bs"],identTypes:["``"],extraParens:["[]","{}"],paramTypes:{positional:!0,numbered:["$"],named:["$"]},lineCommentTypes:["#","--"],operators:["%","==",":","||"]},formatOptions:{onelineClauses:Xi}},LI=["ADD","AGENT","AGGREGATE","ALL","ALTER","AND","ANY","ARROW","AS","ASC","AT","ATTRIBUTE","AUTHID","AVG","BEGIN","BETWEEN","BLOCK","BODY","BOTH","BOUND","BULK","BY","BYTE","CALL","CALLING","CASCADE","CASE","CHARSET","CHARSETFORM","CHARSETID","CHECK","CLOSE","CLUSTER","CLUSTERS","COLAUTH","COLLECT","COLUMNS","COMMENT","COMMIT","COMMITTED","COMPILED","COMPRESS","CONNECT","CONSTANT","CONSTRUCTOR","CONTEXT","CONVERT","COUNT","CRASH","CREATE","CURRENT","CURSOR","CUSTOMDATUM","DANGLING","DATA","DAY","DECLARE","DEFAULT","DEFINE","DELETE","DESC","DETERMINISTIC","DISTINCT","DROP","DURATION","ELEMENT","ELSE","ELSIF","EMPTY","END","ESCAPE","EXCEPT","EXCEPTION","EXCEPTIONS","EXCLUSIVE","EXECUTE","EXISTS","EXIT","EXTERNAL","FETCH","FINAL","FIXED","FOR","FORALL","FORCE","FORM","FROM","FUNCTION","GENERAL","GOTO","GRANT","GROUP","HASH","HAVING","HEAP","HIDDEN","HOUR","IDENTIFIED","IF","IMMEDIATE","IN","INCLUDING","INDEX","INDEXES","INDICATOR","INDICES","INFINITE","INSERT","INSTANTIABLE","INTERFACE","INTERSECT","INTERVAL","INTO","INVALIDATE","IS","ISOLATION","JAVA","LANGUAGE","LARGE","LEADING","LENGTH","LEVEL","LIBRARY","LIKE","LIKE2","LIKE4","LIKEC","LIMIT","LIMITED","LOCAL","LOCK","LOOP","MAP","MAX","MAXLEN","MEMBER","MERGE","MIN","MINUS","MINUTE","MOD","MODE","MODIFY","MONTH","MULTISET","NAME","NAN","NATIONAL","NATIVE","NEW","NOCOMPRESS","NOCOPY","NOT","NOWAIT","NULL","OBJECT","OCICOLL","OCIDATE","OCIDATETIME","OCIDURATION","OCIINTERVAL","OCILOBLOCATOR","OCINUMBER","OCIRAW","OCIREF","OCIREFCURSOR","OCIROWID","OCISTRING","OCITYPE","OF","ON","ONLY","OPAQUE","OPEN","OPERATOR","OPTION","OR","ORACLE","ORADATA","ORDER","OVERLAPS","ORGANIZATION","ORLANY","ORLVARY","OTHERS","OUT","OVERRIDING","PACKAGE","PARALLEL_ENABLE","PARAMETER","PARAMETERS","PARTITION","PASCAL","PIPE","PIPELINED","PRAGMA","PRIOR","PRIVATE","PROCEDURE","PUBLIC","RAISE","RANGE","READ","RECORD","REF","REFERENCE","REM","REMAINDER","RENAME","RESOURCE","RESULT","RETURN","RETURNING","REVERSE","REVOKE","ROLLBACK","ROW","SAMPLE","SAVE","SAVEPOINT","SB1","SB2","SB4","SECOND","SEGMENT","SELECT","SELF","SEPARATE","SEQUENCE","SERIALIZABLE","SET","SHARE","SHORT","SIZE","SIZE_T","SOME","SPARSE","SQL","SQLCODE","SQLDATA","SQLNAME","SQLSTATE","STANDARD","START","STATIC","STDDEV","STORED","STRING","STRUCT","STYLE","SUBMULTISET","SUBPARTITION","SUBSTITUTABLE","SUBTYPE","SUM","SYNONYM","TABAUTH","TABLE","TDO","THE","THEN","TIME","TIMEZONE_ABBR","TIMEZONE_HOUR","TIMEZONE_MINUTE","TIMEZONE_REGION","TO","TRAILING","TRANSAC","TRANSACTIONAL","TRUSTED","TYPE","UB1","UB2","UB4","UNDER","UNION","UNIQUE","UNSIGNED","UNTRUSTED","UPDATE","USE","USING","VALIST","VALUE","VALUES","VARIABLE","VARIANCE","VARRAY","VIEW","VIEWS","VOID","WHEN","WHERE","WHILE","WITH","WORK","WRAPPED","WRITE","YEAR","ZONE"],cI=["ARRAY","BFILE_BASE","BINARY","BLOB_BASE","CHAR VARYING","CHAR_BASE","CHAR","CHARACTER VARYING","CHARACTER","CLOB_BASE","DATE_BASE","DATE","DECIMAL","DOUBLE","FLOAT","INT","INTERVAL DAY","INTERVAL YEAR","LONG","NATIONAL CHAR VARYING","NATIONAL CHAR","NATIONAL CHARACTER VARYING","NATIONAL CHARACTER","NCHAR VARYING","NCHAR","NCHAR","NUMBER_BASE","NUMBER","NUMBERIC","NVARCHAR","PRECISION","RAW","TIMESTAMP","UROWID","VARCHAR","VARCHAR2"],uI=["ABS","ACOS","ASIN","ATAN","ATAN2","BITAND","CEIL","COS","COSH","EXP","FLOOR","LN","LOG","MOD","NANVL","POWER","REMAINDER","ROUND","SIGN","SIN","SINH","SQRT","TAN","TANH","TRUNC","WIDTH_BUCKET","CHR","CONCAT","INITCAP","LOWER","LPAD","LTRIM","NLS_INITCAP","NLS_LOWER","NLSSORT","NLS_UPPER","REGEXP_REPLACE","REGEXP_SUBSTR","REPLACE","RPAD","RTRIM","SOUNDEX","SUBSTR","TRANSLATE","TREAT","TRIM","UPPER","NLS_CHARSET_DECL_LEN","NLS_CHARSET_ID","NLS_CHARSET_NAME","ASCII","INSTR","LENGTH","REGEXP_INSTR","ADD_MONTHS","CURRENT_DATE","CURRENT_TIMESTAMP","DBTIMEZONE","EXTRACT","FROM_TZ","LAST_DAY","LOCALTIMESTAMP","MONTHS_BETWEEN","NEW_TIME","NEXT_DAY","NUMTODSINTERVAL","NUMTOYMINTERVAL","ROUND","SESSIONTIMEZONE","SYS_EXTRACT_UTC","SYSDATE","SYSTIMESTAMP","TO_CHAR","TO_TIMESTAMP","TO_TIMESTAMP_TZ","TO_DSINTERVAL","TO_YMINTERVAL","TRUNC","TZ_OFFSET","GREATEST","LEAST","ASCIISTR","BIN_TO_NUM","CAST","CHARTOROWID","COMPOSE","CONVERT","DECOMPOSE","HEXTORAW","NUMTODSINTERVAL","NUMTOYMINTERVAL","RAWTOHEX","RAWTONHEX","ROWIDTOCHAR","ROWIDTONCHAR","SCN_TO_TIMESTAMP","TIMESTAMP_TO_SCN","TO_BINARY_DOUBLE","TO_BINARY_FLOAT","TO_CHAR","TO_CLOB","TO_DATE","TO_DSINTERVAL","TO_LOB","TO_MULTI_BYTE","TO_NCHAR","TO_NCLOB","TO_NUMBER","TO_DSINTERVAL","TO_SINGLE_BYTE","TO_TIMESTAMP","TO_TIMESTAMP_TZ","TO_YMINTERVAL","TO_YMINTERVAL","TRANSLATE","UNISTR","BFILENAME","EMPTY_BLOB,","EMPTY_CLOB","CARDINALITY","COLLECT","POWERMULTISET","POWERMULTISET_BY_CARDINALITY","SET","SYS_CONNECT_BY_PATH","CLUSTER_ID","CLUSTER_PROBABILITY","CLUSTER_SET","FEATURE_ID","FEATURE_SET","FEATURE_VALUE","PREDICTION","PREDICTION_COST","PREDICTION_DETAILS","PREDICTION_PROBABILITY","PREDICTION_SET","APPENDCHILDXML","DELETEXML","DEPTH","EXTRACT","EXISTSNODE","EXTRACTVALUE","INSERTCHILDXML","INSERTXMLBEFORE","PATH","SYS_DBURIGEN","SYS_XMLAGG","SYS_XMLGEN","UPDATEXML","XMLAGG","XMLCDATA","XMLCOLATTVAL","XMLCOMMENT","XMLCONCAT","XMLFOREST","XMLPARSE","XMLPI","XMLQUERY","XMLROOT","XMLSEQUENCE","XMLSERIALIZE","XMLTABLE","XMLTRANSFORM","DECODE","DUMP","ORA_HASH","VSIZE","COALESCE","LNNVL","NULLIF","NVL","NVL2","SYS_CONTEXT","SYS_GUID","SYS_TYPEID","UID","USER","USERENV","AVG","COLLECT","CORR","CORR_S","CORR_K","COUNT","COVAR_POP","COVAR_SAMP","CUME_DIST","DENSE_RANK","FIRST","GROUP_ID","GROUPING","GROUPING_ID","LAST","MAX","MEDIAN","MIN","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","RANK","REGR_SLOPE","REGR_INTERCEPT","REGR_COUNT","REGR_R2","REGR_AVGX","REGR_AVGY","REGR_SXX","REGR_SYY","REGR_SXY","STATS_BINOMIAL_TEST","STATS_CROSSTAB","STATS_F_TEST","STATS_KS_TEST","STATS_MODE","STATS_MW_TEST","STATS_ONE_WAY_ANOVA","STATS_T_TEST_ONE","STATS_T_TEST_PAIRED","STATS_T_TEST_INDEP","STATS_T_TEST_INDEPU","STATS_WSR_TEST","STDDEV","STDDEV_POP","STDDEV_SAMP","SUM","VAR_POP","VAR_SAMP","VARIANCE","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTILE","RATIO_TO_REPORT","ROW_NUMBER","DEREF","MAKE_REF","REF","REFTOHEX","VALUE","CV","ITERATION_NUMBER","PRESENTNNV","PRESENTV","PREVIOUS"],fI=S(["SELECT [ALL | DISTINCT | UNIQUE]"]),dI=S(["WITH","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER [SIBLINGS] BY","OFFSET","FETCH {FIRST | NEXT}","FOR UPDATE [OF]","INSERT [INTO | ALL INTO]","VALUES","SET","MERGE [INTO]","WHEN [NOT] MATCHED [THEN]","UPDATE SET","RETURNING"]),xi=S(["CREATE [GLOBAL TEMPORARY | PRIVATE TEMPORARY | SHARDED | DUPLICATED | IMMUTABLE BLOCKCHAIN | BLOCKCHAIN | IMMUTABLE] TABLE"]),IT=S(["CREATE [OR REPLACE] [NO FORCE | FORCE] [EDITIONING | EDITIONABLE | EDITIONABLE EDITIONING | NONEDITIONABLE] VIEW","CREATE MATERIALIZED VIEW","UPDATE [ONLY]","DELETE FROM [ONLY]","DROP TABLE","ALTER TABLE","ADD","DROP {COLUMN | UNUSED COLUMNS | COLUMNS CONTINUE}","MODIFY","RENAME TO","RENAME COLUMN","TRUNCATE TABLE","SET SCHEMA","BEGIN","CONNECT BY","DECLARE","EXCEPT","EXCEPTION","LOOP","START WITH"]),PI=S(["UNION [ALL]","EXCEPT","INTERSECT"]),DI=S(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN","{CROSS | OUTER} APPLY"]),pI=S(["ON {UPDATE | DELETE} [SET NULL]","ON COMMIT","{ROWS | RANGE} BETWEEN"]),hI={name:"plsql",tokenizerOptions:{reservedSelect:fI,reservedClauses:[...dI,...xi,...IT],reservedSetOperations:PI,reservedJoins:DI,reservedPhrases:pI,supportsXor:!0,reservedKeywords:LI,reservedDataTypes:cI,reservedFunctionNames:uI,stringTypes:[{quote:"''-qq",prefixes:["N"]},{quote:"q''",prefixes:["N"]}],identTypes:['""-qq'],identChars:{rest:"$#"},variableTypes:[{regex:"&{1,2}[A-Za-z][A-Za-z0-9_$#]*"}],paramTypes:{numbered:[":"],named:[":"]},paramChars:{},operators:["**",":=","%","~=","^=",">>","<<","=>","@","||"],postProcess:MI},formatOptions:{alwaysDenseOperators:["@"],onelineClauses:[...xi,...IT],tabularOnelineClauses:IT}};function MI(t){let e=Vt;return t.map(E=>ut.SET(E)&&ut.BY(e)?ie(Ee({},E),{type:"RESERVED_KEYWORD"}):(lo(E.type)&&(e=E),E))}var mI=["ABS","ACOS","ACOSD","ACOSH","ASIN","ASIND","ASINH","ATAN","ATAN2","ATAN2D","ATAND","ATANH","CBRT","CEIL","CEILING","COS","COSD","COSH","COT","COTD","DEGREES","DIV","EXP","FACTORIAL","FLOOR","GCD","LCM","LN","LOG","LOG10","MIN_SCALE","MOD","PI","POWER","RADIANS","RANDOM","ROUND","SCALE","SETSEED","SIGN","SIN","SIND","SINH","SQRT","TAN","TAND","TANH","TRIM_SCALE","TRUNC","WIDTH_BUCKET","ABS","ASCII","BIT_LENGTH","BTRIM","CHARACTER_LENGTH","CHAR_LENGTH","CHR","CONCAT","CONCAT_WS","FORMAT","INITCAP","LEFT","LENGTH","LOWER","LPAD","LTRIM","MD5","NORMALIZE","OCTET_LENGTH","OVERLAY","PARSE_IDENT","PG_CLIENT_ENCODING","POSITION","QUOTE_IDENT","QUOTE_LITERAL","QUOTE_NULLABLE","REGEXP_MATCH","REGEXP_MATCHES","REGEXP_REPLACE","REGEXP_SPLIT_TO_ARRAY","REGEXP_SPLIT_TO_TABLE","REPEAT","REPLACE","REVERSE","RIGHT","RPAD","RTRIM","SPLIT_PART","SPRINTF","STARTS_WITH","STRING_AGG","STRING_TO_ARRAY","STRING_TO_TABLE","STRPOS","SUBSTR","SUBSTRING","TO_ASCII","TO_HEX","TRANSLATE","TRIM","UNISTR","UPPER","BIT_COUNT","BIT_LENGTH","BTRIM","CONVERT","CONVERT_FROM","CONVERT_TO","DECODE","ENCODE","GET_BIT","GET_BYTE","LENGTH","LTRIM","MD5","OCTET_LENGTH","OVERLAY","POSITION","RTRIM","SET_BIT","SET_BYTE","SHA224","SHA256","SHA384","SHA512","STRING_AGG","SUBSTR","SUBSTRING","TRIM","BIT_COUNT","BIT_LENGTH","GET_BIT","LENGTH","OCTET_LENGTH","OVERLAY","POSITION","SET_BIT","SUBSTRING","REGEXP_MATCH","REGEXP_MATCHES","REGEXP_REPLACE","REGEXP_SPLIT_TO_ARRAY","REGEXP_SPLIT_TO_TABLE","TO_CHAR","TO_DATE","TO_NUMBER","TO_TIMESTAMP","CLOCK_TIMESTAMP","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATE_BIN","DATE_PART","DATE_TRUNC","EXTRACT","ISFINITE","JUSTIFY_DAYS","JUSTIFY_HOURS","JUSTIFY_INTERVAL","LOCALTIME","LOCALTIMESTAMP","MAKE_DATE","MAKE_INTERVAL","MAKE_TIME","MAKE_TIMESTAMP","MAKE_TIMESTAMPTZ","NOW","PG_SLEEP","PG_SLEEP_FOR","PG_SLEEP_UNTIL","STATEMENT_TIMESTAMP","TIMEOFDAY","TO_TIMESTAMP","TRANSACTION_TIMESTAMP","ENUM_FIRST","ENUM_LAST","ENUM_RANGE","AREA","BOUND_BOX","BOX","CENTER","CIRCLE","DIAGONAL","DIAMETER","HEIGHT","ISCLOSED","ISOPEN","LENGTH","LINE","LSEG","NPOINTS","PATH","PCLOSE","POINT","POLYGON","POPEN","RADIUS","SLOPE","WIDTH","ABBREV","BROADCAST","FAMILY","HOST","HOSTMASK","INET_MERGE","INET_SAME_FAMILY","MACADDR8_SET7BIT","MASKLEN","NETMASK","NETWORK","SET_MASKLEN","TRUNC","ARRAY_TO_TSVECTOR","GET_CURRENT_TS_CONFIG","JSONB_TO_TSVECTOR","JSON_TO_TSVECTOR","LENGTH","NUMNODE","PHRASETO_TSQUERY","PLAINTO_TSQUERY","QUERYTREE","SETWEIGHT","STRIP","TO_TSQUERY","TO_TSVECTOR","TSQUERY_PHRASE","TSVECTOR_TO_ARRAY","TS_DEBUG","TS_DELETE","TS_FILTER","TS_HEADLINE","TS_LEXIZE","TS_PARSE","TS_RANK","TS_RANK_CD","TS_REWRITE","TS_STAT","TS_TOKEN_TYPE","WEBSEARCH_TO_TSQUERY","UUID","CURSOR_TO_XML","CURSOR_TO_XMLSCHEMA","DATABASE_TO_XML","DATABASE_TO_XMLSCHEMA","DATABASE_TO_XML_AND_XMLSCHEMA","NEXTVAL","QUERY_TO_XML","QUERY_TO_XMLSCHEMA","QUERY_TO_XML_AND_XMLSCHEMA","SCHEMA_TO_XML","SCHEMA_TO_XMLSCHEMA","SCHEMA_TO_XML_AND_XMLSCHEMA","STRING","TABLE_TO_XML","TABLE_TO_XMLSCHEMA","TABLE_TO_XML_AND_XMLSCHEMA","XMLAGG","XMLCOMMENT","XMLCONCAT","XMLELEMENT","XMLEXISTS","XMLFOREST","XMLPARSE","XMLPI","XMLROOT","XMLSERIALIZE","XMLTABLE","XML_IS_WELL_FORMED","XML_IS_WELL_FORMED_CONTENT","XML_IS_WELL_FORMED_DOCUMENT","XPATH","XPATH_EXISTS","ARRAY_TO_JSON","JSONB_AGG","JSONB_ARRAY_ELEMENTS","JSONB_ARRAY_ELEMENTS_TEXT","JSONB_ARRAY_LENGTH","JSONB_BUILD_ARRAY","JSONB_BUILD_OBJECT","JSONB_EACH","JSONB_EACH_TEXT","JSONB_EXTRACT_PATH","JSONB_EXTRACT_PATH_TEXT","JSONB_INSERT","JSONB_OBJECT","JSONB_OBJECT_AGG","JSONB_OBJECT_KEYS","JSONB_PATH_EXISTS","JSONB_PATH_EXISTS_TZ","JSONB_PATH_MATCH","JSONB_PATH_MATCH_TZ","JSONB_PATH_QUERY","JSONB_PATH_QUERY_ARRAY","JSONB_PATH_QUERY_ARRAY_TZ","JSONB_PATH_QUERY_FIRST","JSONB_PATH_QUERY_FIRST_TZ","JSONB_PATH_QUERY_TZ","JSONB_POPULATE_RECORD","JSONB_POPULATE_RECORDSET","JSONB_PRETTY","JSONB_SET","JSONB_SET_LAX","JSONB_STRIP_NULLS","JSONB_TO_RECORD","JSONB_TO_RECORDSET","JSONB_TYPEOF","JSON_AGG","JSON_ARRAY_ELEMENTS","JSON_ARRAY_ELEMENTS_TEXT","JSON_ARRAY_LENGTH","JSON_BUILD_ARRAY","JSON_BUILD_OBJECT","JSON_EACH","JSON_EACH_TEXT","JSON_EXTRACT_PATH","JSON_EXTRACT_PATH_TEXT","JSON_OBJECT","JSON_OBJECT_AGG","JSON_OBJECT_KEYS","JSON_POPULATE_RECORD","JSON_POPULATE_RECORDSET","JSON_STRIP_NULLS","JSON_TO_RECORD","JSON_TO_RECORDSET","JSON_TYPEOF","ROW_TO_JSON","TO_JSON","TO_JSONB","TO_TIMESTAMP","CURRVAL","LASTVAL","NEXTVAL","SETVAL","COALESCE","GREATEST","LEAST","NULLIF","ARRAY_AGG","ARRAY_APPEND","ARRAY_CAT","ARRAY_DIMS","ARRAY_FILL","ARRAY_LENGTH","ARRAY_LOWER","ARRAY_NDIMS","ARRAY_POSITION","ARRAY_POSITIONS","ARRAY_PREPEND","ARRAY_REMOVE","ARRAY_REPLACE","ARRAY_TO_STRING","ARRAY_UPPER","CARDINALITY","STRING_TO_ARRAY","TRIM_ARRAY","UNNEST","ISEMPTY","LOWER","LOWER_INC","LOWER_INF","MULTIRANGE","RANGE_MERGE","UPPER","UPPER_INC","UPPER_INF","ARRAY_AGG","AVG","BIT_AND","BIT_OR","BIT_XOR","BOOL_AND","BOOL_OR","COALESCE","CORR","COUNT","COVAR_POP","COVAR_SAMP","CUME_DIST","DENSE_RANK","EVERY","GROUPING","JSONB_AGG","JSONB_OBJECT_AGG","JSON_AGG","JSON_OBJECT_AGG","MAX","MIN","MODE","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","RANGE_AGG","RANGE_INTERSECT_AGG","RANK","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","STDDEV","STDDEV_POP","STDDEV_SAMP","STRING_AGG","SUM","TO_JSON","TO_JSONB","VARIANCE","VAR_POP","VAR_SAMP","XMLAGG","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","RANK","ROW_NUMBER","GENERATE_SERIES","GENERATE_SUBSCRIPTS","ACLDEFAULT","ACLEXPLODE","COL_DESCRIPTION","CURRENT_CATALOG","CURRENT_DATABASE","CURRENT_QUERY","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_USER","FORMAT_TYPE","HAS_ANY_COLUMN_PRIVILEGE","HAS_COLUMN_PRIVILEGE","HAS_DATABASE_PRIVILEGE","HAS_FOREIGN_DATA_WRAPPER_PRIVILEGE","HAS_FUNCTION_PRIVILEGE","HAS_LANGUAGE_PRIVILEGE","HAS_SCHEMA_PRIVILEGE","HAS_SEQUENCE_PRIVILEGE","HAS_SERVER_PRIVILEGE","HAS_TABLESPACE_PRIVILEGE","HAS_TABLE_PRIVILEGE","HAS_TYPE_PRIVILEGE","INET_CLIENT_ADDR","INET_CLIENT_PORT","INET_SERVER_ADDR","INET_SERVER_PORT","MAKEACLITEM","OBJ_DESCRIPTION","PG_BACKEND_PID","PG_BLOCKING_PIDS","PG_COLLATION_IS_VISIBLE","PG_CONF_LOAD_TIME","PG_CONTROL_CHECKPOINT","PG_CONTROL_INIT","PG_CONTROL_SYSTEM","PG_CONVERSION_IS_VISIBLE","PG_CURRENT_LOGFILE","PG_CURRENT_SNAPSHOT","PG_CURRENT_XACT_ID","PG_CURRENT_XACT_ID_IF_ASSIGNED","PG_DESCRIBE_OBJECT","PG_FUNCTION_IS_VISIBLE","PG_GET_CATALOG_FOREIGN_KEYS","PG_GET_CONSTRAINTDEF","PG_GET_EXPR","PG_GET_FUNCTIONDEF","PG_GET_FUNCTION_ARGUMENTS","PG_GET_FUNCTION_IDENTITY_ARGUMENTS","PG_GET_FUNCTION_RESULT","PG_GET_INDEXDEF","PG_GET_KEYWORDS","PG_GET_OBJECT_ADDRESS","PG_GET_OWNED_SEQUENCE","PG_GET_RULEDEF","PG_GET_SERIAL_SEQUENCE","PG_GET_STATISTICSOBJDEF","PG_GET_TRIGGERDEF","PG_GET_USERBYID","PG_GET_VIEWDEF","PG_HAS_ROLE","PG_IDENTIFY_OBJECT","PG_IDENTIFY_OBJECT_AS_ADDRESS","PG_INDEXAM_HAS_PROPERTY","PG_INDEX_COLUMN_HAS_PROPERTY","PG_INDEX_HAS_PROPERTY","PG_IS_OTHER_TEMP_SCHEMA","PG_JIT_AVAILABLE","PG_LAST_COMMITTED_XACT","PG_LISTENING_CHANNELS","PG_MY_TEMP_SCHEMA","PG_NOTIFICATION_QUEUE_USAGE","PG_OPCLASS_IS_VISIBLE","PG_OPERATOR_IS_VISIBLE","PG_OPFAMILY_IS_VISIBLE","PG_OPTIONS_TO_TABLE","PG_POSTMASTER_START_TIME","PG_SAFE_SNAPSHOT_BLOCKING_PIDS","PG_SNAPSHOT_XIP","PG_SNAPSHOT_XMAX","PG_SNAPSHOT_XMIN","PG_STATISTICS_OBJ_IS_VISIBLE","PG_TABLESPACE_DATABASES","PG_TABLESPACE_LOCATION","PG_TABLE_IS_VISIBLE","PG_TRIGGER_DEPTH","PG_TS_CONFIG_IS_VISIBLE","PG_TS_DICT_IS_VISIBLE","PG_TS_PARSER_IS_VISIBLE","PG_TS_TEMPLATE_IS_VISIBLE","PG_TYPEOF","PG_TYPE_IS_VISIBLE","PG_VISIBLE_IN_SNAPSHOT","PG_XACT_COMMIT_TIMESTAMP","PG_XACT_COMMIT_TIMESTAMP_ORIGIN","PG_XACT_STATUS","PQSERVERVERSION","ROW_SECURITY_ACTIVE","SESSION_USER","SHOBJ_DESCRIPTION","TO_REGCLASS","TO_REGCOLLATION","TO_REGNAMESPACE","TO_REGOPER","TO_REGOPERATOR","TO_REGPROC","TO_REGPROCEDURE","TO_REGROLE","TO_REGTYPE","TXID_CURRENT","TXID_CURRENT_IF_ASSIGNED","TXID_CURRENT_SNAPSHOT","TXID_SNAPSHOT_XIP","TXID_SNAPSHOT_XMAX","TXID_SNAPSHOT_XMIN","TXID_STATUS","TXID_VISIBLE_IN_SNAPSHOT","USER","VERSION","BRIN_DESUMMARIZE_RANGE","BRIN_SUMMARIZE_NEW_VALUES","BRIN_SUMMARIZE_RANGE","CONVERT_FROM","CURRENT_SETTING","GIN_CLEAN_PENDING_LIST","PG_ADVISORY_LOCK","PG_ADVISORY_LOCK_SHARED","PG_ADVISORY_UNLOCK","PG_ADVISORY_UNLOCK_ALL","PG_ADVISORY_UNLOCK_SHARED","PG_ADVISORY_XACT_LOCK","PG_ADVISORY_XACT_LOCK_SHARED","PG_BACKUP_START_TIME","PG_CANCEL_BACKEND","PG_COLLATION_ACTUAL_VERSION","PG_COLUMN_COMPRESSION","PG_COLUMN_SIZE","PG_COPY_LOGICAL_REPLICATION_SLOT","PG_COPY_PHYSICAL_REPLICATION_SLOT","PG_CREATE_LOGICAL_REPLICATION_SLOT","PG_CREATE_PHYSICAL_REPLICATION_SLOT","PG_CREATE_RESTORE_POINT","PG_CURRENT_WAL_FLUSH_LSN","PG_CURRENT_WAL_INSERT_LSN","PG_CURRENT_WAL_LSN","PG_DATABASE_SIZE","PG_DROP_REPLICATION_SLOT","PG_EXPORT_SNAPSHOT","PG_FILENODE_RELATION","PG_GET_WAL_REPLAY_PAUSE_STATE","PG_IMPORT_SYSTEM_COLLATIONS","PG_INDEXES_SIZE","PG_IS_IN_BACKUP","PG_IS_IN_RECOVERY","PG_IS_WAL_REPLAY_PAUSED","PG_LAST_WAL_RECEIVE_LSN","PG_LAST_WAL_REPLAY_LSN","PG_LAST_XACT_REPLAY_TIMESTAMP","PG_LOGICAL_EMIT_MESSAGE","PG_LOGICAL_SLOT_GET_BINARY_CHANGES","PG_LOGICAL_SLOT_GET_CHANGES","PG_LOGICAL_SLOT_PEEK_BINARY_CHANGES","PG_LOGICAL_SLOT_PEEK_CHANGES","PG_LOG_BACKEND_MEMORY_CONTEXTS","PG_LS_ARCHIVE_STATUSDIR","PG_LS_DIR","PG_LS_LOGDIR","PG_LS_TMPDIR","PG_LS_WALDIR","PG_PARTITION_ANCESTORS","PG_PARTITION_ROOT","PG_PARTITION_TREE","PG_PROMOTE","PG_READ_BINARY_FILE","PG_READ_FILE","PG_RELATION_FILENODE","PG_RELATION_FILEPATH","PG_RELATION_SIZE","PG_RELOAD_CONF","PG_REPLICATION_ORIGIN_ADVANCE","PG_REPLICATION_ORIGIN_CREATE","PG_REPLICATION_ORIGIN_DROP","PG_REPLICATION_ORIGIN_OID","PG_REPLICATION_ORIGIN_PROGRESS","PG_REPLICATION_ORIGIN_SESSION_IS_SETUP","PG_REPLICATION_ORIGIN_SESSION_PROGRESS","PG_REPLICATION_ORIGIN_SESSION_RESET","PG_REPLICATION_ORIGIN_SESSION_SETUP","PG_REPLICATION_ORIGIN_XACT_RESET","PG_REPLICATION_ORIGIN_XACT_SETUP","PG_REPLICATION_SLOT_ADVANCE","PG_ROTATE_LOGFILE","PG_SIZE_BYTES","PG_SIZE_PRETTY","PG_START_BACKUP","PG_STAT_FILE","PG_STOP_BACKUP","PG_SWITCH_WAL","PG_TABLESPACE_SIZE","PG_TABLE_SIZE","PG_TERMINATE_BACKEND","PG_TOTAL_RELATION_SIZE","PG_TRY_ADVISORY_LOCK","PG_TRY_ADVISORY_LOCK_SHARED","PG_TRY_ADVISORY_XACT_LOCK","PG_TRY_ADVISORY_XACT_LOCK_SHARED","PG_WALFILE_NAME","PG_WALFILE_NAME_OFFSET","PG_WAL_LSN_DIFF","PG_WAL_REPLAY_PAUSE","PG_WAL_REPLAY_RESUME","SET_CONFIG","SUPPRESS_REDUNDANT_UPDATES_TRIGGER","TSVECTOR_UPDATE_TRIGGER","TSVECTOR_UPDATE_TRIGGER_COLUMN","PG_EVENT_TRIGGER_DDL_COMMANDS","PG_EVENT_TRIGGER_DROPPED_OBJECTS","PG_EVENT_TRIGGER_TABLE_REWRITE_OID","PG_EVENT_TRIGGER_TABLE_REWRITE_REASON","PG_GET_OBJECT_ADDRESS","PG_MCV_LIST_ITEMS","CAST"],UI=["ALL","ANALYSE","ANALYZE","AND","ANY","AS","ASC","ASYMMETRIC","AUTHORIZATION","BETWEEN","BINARY","BOTH","CASE","CAST","CHECK","COLLATE","COLLATION","COLUMN","CONCURRENTLY","CONSTRAINT","CREATE","CROSS","CURRENT_CATALOG","CURRENT_DATE","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","DAY","DEFAULT","DEFERRABLE","DESC","DISTINCT","DO","ELSE","END","EXCEPT","EXISTS","FALSE","FETCH","FILTER","FOR","FOREIGN","FREEZE","FROM","FULL","GRANT","GROUP","HAVING","HOUR","ILIKE","IN","INITIALLY","INNER","INOUT","INTERSECT","INTO","IS","ISNULL","JOIN","LATERAL","LEADING","LEFT","LIKE","LIMIT","LOCALTIME","LOCALTIMESTAMP","MINUTE","MONTH","NATURAL","NOT","NOTNULL","NULL","NULLIF","OFFSET","ON","ONLY","OR","ORDER","OUT","OUTER","OVER","OVERLAPS","PLACING","PRIMARY","REFERENCES","RETURNING","RIGHT","ROW","SECOND","SELECT","SESSION_USER","SIMILAR","SOME","SYMMETRIC","TABLE","TABLESAMPLE","THEN","TO","TRAILING","TRUE","UNION","UNIQUE","USER","USING","VALUES","VARIADIC","VERBOSE","WHEN","WHERE","WINDOW","WITH","WITHIN","WITHOUT","YEAR"],gI=["ARRAY","BIGINT","BIT","BIT VARYING","BOOL","BOOLEAN","CHAR","CHARACTER","CHARACTER VARYING","DECIMAL","DEC","DOUBLE","ENUM","FLOAT","INT","INTEGER","INTERVAL","NCHAR","NUMERIC","PRECISION","REAL","SMALLINT","TEXT","TIME","TIMESTAMP","TIMESTAMPTZ","VARCHAR","XML","ZONE"],GI=S(["SELECT [ALL | DISTINCT]"]),yI=S(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL | DISTINCT]","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","FOR {UPDATE | NO KEY UPDATE | SHARE | KEY SHARE} [OF]","INSERT INTO","VALUES","DEFAULT VALUES","SET","RETURNING"]),Ki=S(["CREATE [GLOBAL | LOCAL] [TEMPORARY | TEMP | UNLOGGED] TABLE [IF NOT EXISTS]"]),NT=S(["CREATE [OR REPLACE] [TEMP | TEMPORARY] [RECURSIVE] VIEW","CREATE [MATERIALIZED] VIEW [IF NOT EXISTS]","UPDATE [ONLY]","WHERE CURRENT OF","ON CONFLICT","DELETE FROM [ONLY]","DROP TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS] [ONLY]","ALTER TABLE ALL IN TABLESPACE","RENAME [COLUMN]","RENAME TO","ADD [COLUMN] [IF NOT EXISTS]","DROP [COLUMN] [IF EXISTS]","ALTER [COLUMN]","SET DATA TYPE","{SET | DROP} DEFAULT","{SET | DROP} NOT NULL","TRUNCATE [TABLE] [ONLY]","SET SCHEMA","AFTER","ABORT","ALTER AGGREGATE","ALTER COLLATION","ALTER CONVERSION","ALTER DATABASE","ALTER DEFAULT PRIVILEGES","ALTER DOMAIN","ALTER EVENT TRIGGER","ALTER EXTENSION","ALTER FOREIGN DATA WRAPPER","ALTER FOREIGN TABLE","ALTER FUNCTION","ALTER GROUP","ALTER INDEX","ALTER LANGUAGE","ALTER LARGE OBJECT","ALTER MATERIALIZED VIEW","ALTER OPERATOR","ALTER OPERATOR CLASS","ALTER OPERATOR FAMILY","ALTER POLICY","ALTER PROCEDURE","ALTER PUBLICATION","ALTER ROLE","ALTER ROUTINE","ALTER RULE","ALTER SCHEMA","ALTER SEQUENCE","ALTER SERVER","ALTER STATISTICS","ALTER SUBSCRIPTION","ALTER SYSTEM","ALTER TABLESPACE","ALTER TEXT SEARCH CONFIGURATION","ALTER TEXT SEARCH DICTIONARY","ALTER TEXT SEARCH PARSER","ALTER TEXT SEARCH TEMPLATE","ALTER TRIGGER","ALTER TYPE","ALTER USER","ALTER USER MAPPING","ALTER VIEW","ANALYZE","BEGIN","CALL","CHECKPOINT","CLOSE","CLUSTER","COMMIT","COMMIT PREPARED","COPY","CREATE ACCESS METHOD","CREATE AGGREGATE","CREATE CAST","CREATE COLLATION","CREATE CONVERSION","CREATE DATABASE","CREATE DOMAIN","CREATE EVENT TRIGGER","CREATE EXTENSION","CREATE FOREIGN DATA WRAPPER","CREATE FOREIGN TABLE","CREATE FUNCTION","CREATE GROUP","CREATE INDEX","CREATE LANGUAGE","CREATE OPERATOR","CREATE OPERATOR CLASS","CREATE OPERATOR FAMILY","CREATE POLICY","CREATE PROCEDURE","CREATE PUBLICATION","CREATE ROLE","CREATE RULE","CREATE SCHEMA","CREATE SEQUENCE","CREATE SERVER","CREATE STATISTICS","CREATE SUBSCRIPTION","CREATE TABLESPACE","CREATE TEXT SEARCH CONFIGURATION","CREATE TEXT SEARCH DICTIONARY","CREATE TEXT SEARCH PARSER","CREATE TEXT SEARCH TEMPLATE","CREATE TRANSFORM","CREATE TRIGGER","CREATE TYPE","CREATE USER","CREATE USER MAPPING","DEALLOCATE","DECLARE","DISCARD","DROP ACCESS METHOD","DROP AGGREGATE","DROP CAST","DROP COLLATION","DROP CONVERSION","DROP DATABASE","DROP DOMAIN","DROP EVENT TRIGGER","DROP EXTENSION","DROP FOREIGN DATA WRAPPER","DROP FOREIGN TABLE","DROP FUNCTION","DROP GROUP","DROP INDEX","DROP LANGUAGE","DROP MATERIALIZED VIEW","DROP OPERATOR","DROP OPERATOR CLASS","DROP OPERATOR FAMILY","DROP OWNED","DROP POLICY","DROP PROCEDURE","DROP PUBLICATION","DROP ROLE","DROP ROUTINE","DROP RULE","DROP SCHEMA","DROP SEQUENCE","DROP SERVER","DROP STATISTICS","DROP SUBSCRIPTION","DROP TABLESPACE","DROP TEXT SEARCH CONFIGURATION","DROP TEXT SEARCH DICTIONARY","DROP TEXT SEARCH PARSER","DROP TEXT SEARCH TEMPLATE","DROP TRANSFORM","DROP TRIGGER","DROP TYPE","DROP USER","DROP USER MAPPING","DROP VIEW","EXECUTE","EXPLAIN","FETCH","GRANT","IMPORT FOREIGN SCHEMA","LISTEN","LOAD","LOCK","MOVE","NOTIFY","PREPARE","PREPARE TRANSACTION","REASSIGN OWNED","REFRESH MATERIALIZED VIEW","REINDEX","RELEASE SAVEPOINT","RESET","REVOKE","ROLLBACK","ROLLBACK PREPARED","ROLLBACK TO SAVEPOINT","SAVEPOINT","SECURITY LABEL","SELECT INTO","SET CONSTRAINTS","SET ROLE","SET SESSION AUTHORIZATION","SET TRANSACTION","SHOW","START TRANSACTION","UNLISTEN","VACUUM"]),BI=S(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),FI=S(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),HI=S(["PRIMARY KEY","GENERATED {ALWAYS | BY DEFAULT} AS IDENTITY","ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE | GROUPS} BETWEEN","[TIMESTAMP | TIME] {WITH | WITHOUT} TIME ZONE","IS [NOT] DISTINCT FROM"]),YI={name:"postgresql",tokenizerOptions:{reservedSelect:GI,reservedClauses:[...yI,...Ki,...NT],reservedSetOperations:BI,reservedJoins:FI,reservedPhrases:HI,reservedKeywords:UI,reservedDataTypes:gI,reservedFunctionNames:mI,nestedBlockComments:!0,extraParens:["[]"],stringTypes:["$$",{quote:"''-qq",prefixes:["U&"]},{quote:"''-qq-bs",prefixes:["E"],requirePrefix:!0},{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:[{quote:'""-qq',prefixes:["U&"]}],identChars:{rest:"$"},paramTypes:{numbered:["$"]},operators:["%","^","|/","||/","@",":=","&","|","#","~","<<",">>","~>~","~<~","~>=~","~<=~","@-@","@@","##","<->","&&","&<","&>","<<|","&<|","|>>","|&>","<^","^>","?#","?-","?|","?-|","?||","@>","<@","~=","?","@?","?&","->","->>","#>","#>>","#-","=>",">>=","<<=","~~","~~*","!~~","!~~*","~","~*","!~","!~*","-|-","||","@@@","!!","^@","<%","%>","<<%","%>>","<<->","<->>","<<<->","<->>>","::",":"]},formatOptions:{alwaysDenseOperators:["::",":"],onelineClauses:[...Ki,...NT],tabularOnelineClauses:NT}},bI=["ANY_VALUE","APPROXIMATE PERCENTILE_DISC","AVG","COUNT","LISTAGG","MAX","MEDIAN","MIN","PERCENTILE_CONT","STDDEV_SAMP","STDDEV_POP","SUM","VAR_SAMP","VAR_POP","array","array_concat","array_flatten","get_array_length","split_to_array","subarray","BIT_AND","BIT_OR","BOOL_AND","BOOL_OR","COALESCE","DECODE","GREATEST","LEAST","NVL","NVL2","NULLIF","ADD_MONTHS","AT TIME ZONE","CONVERT_TIMEZONE","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATE_CMP","DATE_CMP_TIMESTAMP","DATE_CMP_TIMESTAMPTZ","DATE_PART_YEAR","DATEADD","DATEDIFF","DATE_PART","DATE_TRUNC","EXTRACT","GETDATE","INTERVAL_CMP","LAST_DAY","MONTHS_BETWEEN","NEXT_DAY","SYSDATE","TIMEOFDAY","TIMESTAMP_CMP","TIMESTAMP_CMP_DATE","TIMESTAMP_CMP_TIMESTAMPTZ","TIMESTAMPTZ_CMP","TIMESTAMPTZ_CMP_DATE","TIMESTAMPTZ_CMP_TIMESTAMP","TIMEZONE","TO_TIMESTAMP","TRUNC","AddBBox","DropBBox","GeometryType","ST_AddPoint","ST_Angle","ST_Area","ST_AsBinary","ST_AsEWKB","ST_AsEWKT","ST_AsGeoJSON","ST_AsText","ST_Azimuth","ST_Boundary","ST_Collect","ST_Contains","ST_ContainsProperly","ST_ConvexHull","ST_CoveredBy","ST_Covers","ST_Crosses","ST_Dimension","ST_Disjoint","ST_Distance","ST_DistanceSphere","ST_DWithin","ST_EndPoint","ST_Envelope","ST_Equals","ST_ExteriorRing","ST_Force2D","ST_Force3D","ST_Force3DM","ST_Force3DZ","ST_Force4D","ST_GeometryN","ST_GeometryType","ST_GeomFromEWKB","ST_GeomFromEWKT","ST_GeomFromText","ST_GeomFromWKB","ST_InteriorRingN","ST_Intersects","ST_IsPolygonCCW","ST_IsPolygonCW","ST_IsClosed","ST_IsCollection","ST_IsEmpty","ST_IsSimple","ST_IsValid","ST_Length","ST_LengthSphere","ST_Length2D","ST_LineFromMultiPoint","ST_LineInterpolatePoint","ST_M","ST_MakeEnvelope","ST_MakeLine","ST_MakePoint","ST_MakePolygon","ST_MemSize","ST_MMax","ST_MMin","ST_Multi","ST_NDims","ST_NPoints","ST_NRings","ST_NumGeometries","ST_NumInteriorRings","ST_NumPoints","ST_Perimeter","ST_Perimeter2D","ST_Point","ST_PointN","ST_Points","ST_Polygon","ST_RemovePoint","ST_Reverse","ST_SetPoint","ST_SetSRID","ST_Simplify","ST_SRID","ST_StartPoint","ST_Touches","ST_Within","ST_X","ST_XMax","ST_XMin","ST_Y","ST_YMax","ST_YMin","ST_Z","ST_ZMax","ST_ZMin","SupportsBBox","CHECKSUM","FUNC_SHA1","FNV_HASH","MD5","SHA","SHA1","SHA2","HLL","HLL_CREATE_SKETCH","HLL_CARDINALITY","HLL_COMBINE","IS_VALID_JSON","IS_VALID_JSON_ARRAY","JSON_ARRAY_LENGTH","JSON_EXTRACT_ARRAY_ELEMENT_TEXT","JSON_EXTRACT_PATH_TEXT","JSON_PARSE","JSON_SERIALIZE","ABS","ACOS","ASIN","ATAN","ATAN2","CBRT","CEILING","CEIL","COS","COT","DEGREES","DEXP","DLOG1","DLOG10","EXP","FLOOR","LN","LOG","MOD","PI","POWER","RADIANS","RANDOM","ROUND","SIN","SIGN","SQRT","TAN","TO_HEX","TRUNC","EXPLAIN_MODEL","ASCII","BPCHARCMP","BTRIM","BTTEXT_PATTERN_CMP","CHAR_LENGTH","CHARACTER_LENGTH","CHARINDEX","CHR","COLLATE","CONCAT","CRC32","DIFFERENCE","INITCAP","LEFT","RIGHT","LEN","LENGTH","LOWER","LPAD","RPAD","LTRIM","OCTETINDEX","OCTET_LENGTH","POSITION","QUOTE_IDENT","QUOTE_LITERAL","REGEXP_COUNT","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","REPEAT","REPLACE","REPLICATE","REVERSE","RTRIM","SOUNDEX","SPLIT_PART","STRPOS","STRTOL","SUBSTRING","TEXTLEN","TRANSLATE","TRIM","UPPER","decimal_precision","decimal_scale","is_array","is_bigint","is_boolean","is_char","is_decimal","is_float","is_integer","is_object","is_scalar","is_smallint","is_varchar","json_typeof","AVG","COUNT","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAST_VALUE","LAG","LEAD","LISTAGG","MAX","MEDIAN","MIN","NTH_VALUE","NTILE","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","RANK","RATIO_TO_REPORT","ROW_NUMBER","STDDEV_SAMP","STDDEV_POP","SUM","VAR_SAMP","VAR_POP","CAST","CONVERT","TO_CHAR","TO_DATE","TO_NUMBER","TEXT_TO_INT_ALT","TEXT_TO_NUMERIC_ALT","CHANGE_QUERY_PRIORITY","CHANGE_SESSION_PRIORITY","CHANGE_USER_PRIORITY","CURRENT_SETTING","PG_CANCEL_BACKEND","PG_TERMINATE_BACKEND","REBOOT_CLUSTER","SET_CONFIG","CURRENT_AWS_ACCOUNT","CURRENT_DATABASE","CURRENT_NAMESPACE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_USER","CURRENT_USER_ID","HAS_ASSUMEROLE_PRIVILEGE","HAS_DATABASE_PRIVILEGE","HAS_SCHEMA_PRIVILEGE","HAS_TABLE_PRIVILEGE","PG_BACKEND_PID","PG_GET_COLS","PG_GET_GRANTEE_BY_IAM_ROLE","PG_GET_IAM_ROLE_BY_USER","PG_GET_LATE_BINDING_VIEW_COLS","PG_LAST_COPY_COUNT","PG_LAST_COPY_ID","PG_LAST_UNLOAD_ID","PG_LAST_QUERY_ID","PG_LAST_UNLOAD_COUNT","SESSION_USER","SLICE_NUM","USER","VERSION"],vI=["AES128","AES256","ALL","ALLOWOVERWRITE","ANY","AS","ASC","AUTHORIZATION","BACKUP","BETWEEN","BINARY","BOTH","CHECK","COLUMN","CONSTRAINT","CREATE","CROSS","DEFAULT","DEFERRABLE","DEFLATE","DEFRAG","DESC","DISABLE","DISTINCT","DO","ENABLE","ENCODE","ENCRYPT","ENCRYPTION","EXPLICIT","FALSE","FOR","FOREIGN","FREEZE","FROM","FULL","GLOBALDICT256","GLOBALDICT64K","GROUP","IDENTITY","IGNORE","ILIKE","IN","INITIALLY","INNER","INTO","IS","ISNULL","LANGUAGE","LEADING","LIKE","LIMIT","LOCALTIME","LOCALTIMESTAMP","LUN","LUNS","MINUS","NATURAL","NEW","NOT","NOTNULL","NULL","NULLS","OFF","OFFLINE","OFFSET","OID","OLD","ON","ONLY","OPEN","ORDER","OUTER","OVERLAPS","PARALLEL","PARTITION","PERCENT","PERMISSIONS","PLACING","PRIMARY","RECOVER","REFERENCES","REJECTLOG","RESORT","RESPECT","RESTORE","SIMILAR","SNAPSHOT","SOME","SYSTEM","TABLE","TAG","TDES","THEN","TIMESTAMP","TO","TOP","TRAILING","TRUE","UNIQUE","USING","VERBOSE","WALLET","WITHOUT","ACCEPTANYDATE","ACCEPTINVCHARS","BLANKSASNULL","DATEFORMAT","EMPTYASNULL","ENCODING","ESCAPE","EXPLICIT_IDS","FILLRECORD","IGNOREBLANKLINES","IGNOREHEADER","REMOVEQUOTES","ROUNDEC","TIMEFORMAT","TRIMBLANKS","TRUNCATECOLUMNS","COMPROWS","COMPUPDATE","MAXERROR","NOLOAD","STATUPDATE","FORMAT","CSV","DELIMITER","FIXEDWIDTH","SHAPEFILE","AVRO","JSON","PARQUET","ORC","ACCESS_KEY_ID","CREDENTIALS","ENCRYPTED","IAM_ROLE","MASTER_SYMMETRIC_KEY","SECRET_ACCESS_KEY","SESSION_TOKEN","BZIP2","GZIP","LZOP","ZSTD","MANIFEST","READRATIO","REGION","SSH","RAW","AZ64","BYTEDICT","DELTA","DELTA32K","LZO","MOSTLY8","MOSTLY16","MOSTLY32","RUNLENGTH","TEXT255","TEXT32K","CATALOG_ROLE","SECRET_ARN","EXTERNAL","AUTO","EVEN","KEY","PREDICATE","COMPRESSION"],VI=["ARRAY","BIGINT","BPCHAR","CHAR","CHARACTER VARYING","CHARACTER","DECIMAL","INT","INT2","INT4","INT8","INTEGER","NCHAR","NUMERIC","NVARCHAR","SMALLINT","TEXT","VARBYTE","VARCHAR"],wI=S(["SELECT [ALL | DISTINCT]"]),WI=S(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT INTO","VALUES","SET"]),Ji=S(["CREATE [TEMPORARY | TEMP | LOCAL TEMPORARY | LOCAL TEMP] TABLE [IF NOT EXISTS]"]),lT=S(["CREATE [OR REPLACE | MATERIALIZED] VIEW","UPDATE","DELETE [FROM]","DROP TABLE [IF EXISTS]","ALTER TABLE","ALTER TABLE APPEND","ADD [COLUMN]","DROP [COLUMN]","RENAME TO","RENAME COLUMN","ALTER COLUMN","TYPE","ENCODE","TRUNCATE [TABLE]","ABORT","ALTER DATABASE","ALTER DATASHARE","ALTER DEFAULT PRIVILEGES","ALTER GROUP","ALTER MATERIALIZED VIEW","ALTER PROCEDURE","ALTER SCHEMA","ALTER USER","ANALYSE","ANALYZE","ANALYSE COMPRESSION","ANALYZE COMPRESSION","BEGIN","CALL","CANCEL","CLOSE","COMMIT","COPY","CREATE DATABASE","CREATE DATASHARE","CREATE EXTERNAL FUNCTION","CREATE EXTERNAL SCHEMA","CREATE EXTERNAL TABLE","CREATE FUNCTION","CREATE GROUP","CREATE LIBRARY","CREATE MODEL","CREATE PROCEDURE","CREATE SCHEMA","CREATE USER","DEALLOCATE","DECLARE","DESC DATASHARE","DROP DATABASE","DROP DATASHARE","DROP FUNCTION","DROP GROUP","DROP LIBRARY","DROP MODEL","DROP MATERIALIZED VIEW","DROP PROCEDURE","DROP SCHEMA","DROP USER","DROP VIEW","DROP","EXECUTE","EXPLAIN","FETCH","GRANT","LOCK","PREPARE","REFRESH MATERIALIZED VIEW","RESET","REVOKE","ROLLBACK","SELECT INTO","SET SESSION AUTHORIZATION","SET SESSION CHARACTERISTICS","SHOW","SHOW EXTERNAL TABLE","SHOW MODEL","SHOW DATASHARES","SHOW PROCEDURE","SHOW TABLE","SHOW VIEW","START TRANSACTION","UNLOAD","VACUUM"]),XI=S(["UNION [ALL]","EXCEPT","INTERSECT","MINUS"]),xI=S(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),KI=S(["NULL AS","DATA CATALOG","HIVE METASTORE","{ROWS | RANGE} BETWEEN"]),JI={name:"redshift",tokenizerOptions:{reservedSelect:wI,reservedClauses:[...WI,...Ji,...lT],reservedSetOperations:XI,reservedJoins:xI,reservedPhrases:KI,reservedKeywords:vI,reservedDataTypes:VI,reservedFunctionNames:bI,stringTypes:["''-qq"],identTypes:['""-qq'],identChars:{first:"#"},paramTypes:{numbered:["$"]},operators:["^","%","@","|/","||/","&","|","~","<<",">>","||","::"]},formatOptions:{alwaysDenseOperators:["::"],onelineClauses:[...Ji,...lT],tabularOnelineClauses:lT}},$I=["ADD","AFTER","ALL","ALTER","ANALYZE","AND","ANTI","ANY","ARCHIVE","AS","ASC","AT","AUTHORIZATION","BETWEEN","BOTH","BUCKET","BUCKETS","BY","CACHE","CASCADE","CAST","CHANGE","CHECK","CLEAR","CLUSTER","CLUSTERED","CODEGEN","COLLATE","COLLECTION","COLUMN","COLUMNS","COMMENT","COMMIT","COMPACT","COMPACTIONS","COMPUTE","CONCATENATE","CONSTRAINT","COST","CREATE","CROSS","CUBE","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","DATA","DATABASE","DATABASES","DAY","DBPROPERTIES","DEFINED","DELETE","DELIMITED","DESC","DESCRIBE","DFS","DIRECTORIES","DIRECTORY","DISTINCT","DISTRIBUTE","DIV","DROP","ESCAPE","ESCAPED","EXCEPT","EXCHANGE","EXISTS","EXPORT","EXTENDED","EXTERNAL","EXTRACT","FALSE","FETCH","FIELDS","FILTER","FILEFORMAT","FIRST","FIRST_VALUE","FOLLOWING","FOR","FOREIGN","FORMAT","FORMATTED","FULL","FUNCTION","FUNCTIONS","GLOBAL","GRANT","GROUP","GROUPING","HOUR","IF","IGNORE","IMPORT","IN","INDEX","INDEXES","INNER","INPATH","INPUTFORMAT","INTERSECT","INTO","IS","ITEMS","KEYS","LAST","LAST_VALUE","LATERAL","LAZY","LEADING","LEFT","LIKE","LINES","LIST","LOCAL","LOCATION","LOCK","LOCKS","LOGICAL","MACRO","MATCHED","MERGE","MINUTE","MONTH","MSCK","NAMESPACE","NAMESPACES","NATURAL","NO","NOT","NULL","NULLS","OF","ONLY","OPTION","OPTIONS","OR","ORDER","OUT","OUTER","OUTPUTFORMAT","OVER","OVERLAPS","OVERLAY","OVERWRITE","OWNER","PARTITION","PARTITIONED","PARTITIONS","PERCENT","PLACING","POSITION","PRECEDING","PRIMARY","PRINCIPALS","PROPERTIES","PURGE","QUERY","RANGE","RECORDREADER","RECORDWRITER","RECOVER","REDUCE","REFERENCES","RENAME","REPAIR","REPLACE","RESPECT","RESTRICT","REVOKE","RIGHT","RLIKE","ROLE","ROLES","ROLLBACK","ROLLUP","ROW","ROWS","SCHEMA","SECOND","SELECT","SEMI","SEPARATED","SERDE","SERDEPROPERTIES","SESSION_USER","SETS","SHOW","SKEWED","SOME","SORT","SORTED","START","STATISTICS","STORED","STRATIFY","SUBSTR","SUBSTRING","TABLE","TABLES","TBLPROPERTIES","TEMPORARY","TERMINATED","THEN","TO","TOUCH","TRAILING","TRANSACTION","TRANSACTIONS","TRIM","TRUE","TRUNCATE","UNARCHIVE","UNBOUNDED","UNCACHE","UNIQUE","UNKNOWN","UNLOCK","UNSET","USE","USER","USING","VIEW","WINDOW","YEAR","ANALYSE","ARRAY_ZIP","COALESCE","CONTAINS","CONVERT","DAYS","DAY_HOUR","DAY_MINUTE","DAY_SECOND","DECODE","DEFAULT","DISTINCTROW","ENCODE","EXPLODE","EXPLODE_OUTER","FIXED","GREATEST","GROUP_CONCAT","HOURS","HOUR_MINUTE","HOUR_SECOND","IFNULL","LEAST","LEVEL","MINUTE_SECOND","NULLIF","OFFSET","ON","OPTIMIZE","REGEXP","SEPARATOR","SIZE","TYPE","TYPES","UNSIGNED","VARIABLES","YEAR_MONTH"],kI=["ARRAY","BIGINT","BINARY","BOOLEAN","BYTE","CHAR","DATE","DEC","DECIMAL","DOUBLE","FLOAT","INT","INTEGER","INTERVAL","LONG","MAP","NUMERIC","REAL","SHORT","SMALLINT","STRING","STRUCT","TIMESTAMP_LTZ","TIMESTAMP_NTZ","TIMESTAMP","TINYINT","VARCHAR"],qI=["APPROX_COUNT_DISTINCT","APPROX_PERCENTILE","AVG","BIT_AND","BIT_OR","BIT_XOR","BOOL_AND","BOOL_OR","COLLECT_LIST","COLLECT_SET","CORR","COUNT","COUNT","COUNT","COUNT_IF","COUNT_MIN_SKETCH","COVAR_POP","COVAR_SAMP","EVERY","FIRST","FIRST_VALUE","GROUPING","GROUPING_ID","KURTOSIS","LAST","LAST_VALUE","MAX","MAX_BY","MEAN","MIN","MIN_BY","PERCENTILE","PERCENTILE","PERCENTILE_APPROX","SKEWNESS","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","SUM","VAR_POP","VAR_SAMP","VARIANCE","CUME_DIST","DENSE_RANK","LAG","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","RANK","ROW_NUMBER","ARRAY","ARRAY_CONTAINS","ARRAY_DISTINCT","ARRAY_EXCEPT","ARRAY_INTERSECT","ARRAY_JOIN","ARRAY_MAX","ARRAY_MIN","ARRAY_POSITION","ARRAY_REMOVE","ARRAY_REPEAT","ARRAY_UNION","ARRAYS_OVERLAP","ARRAYS_ZIP","FLATTEN","SEQUENCE","SHUFFLE","SLICE","SORT_ARRAY","ELEMENT_AT","ELEMENT_AT","MAP_CONCAT","MAP_ENTRIES","MAP_FROM_ARRAYS","MAP_FROM_ENTRIES","MAP_KEYS","MAP_VALUES","STR_TO_MAP","ADD_MONTHS","CURRENT_DATE","CURRENT_DATE","CURRENT_TIMESTAMP","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","DATE_ADD","DATE_FORMAT","DATE_FROM_UNIX_DATE","DATE_PART","DATE_SUB","DATE_TRUNC","DATEDIFF","DAY","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","EXTRACT","FROM_UNIXTIME","FROM_UTC_TIMESTAMP","HOUR","LAST_DAY","MAKE_DATE","MAKE_DT_INTERVAL","MAKE_INTERVAL","MAKE_TIMESTAMP","MAKE_YM_INTERVAL","MINUTE","MONTH","MONTHS_BETWEEN","NEXT_DAY","NOW","QUARTER","SECOND","SESSION_WINDOW","TIMESTAMP_MICROS","TIMESTAMP_MILLIS","TIMESTAMP_SECONDS","TO_DATE","TO_TIMESTAMP","TO_UNIX_TIMESTAMP","TO_UTC_TIMESTAMP","TRUNC","UNIX_DATE","UNIX_MICROS","UNIX_MILLIS","UNIX_SECONDS","UNIX_TIMESTAMP","WEEKDAY","WEEKOFYEAR","WINDOW","YEAR","FROM_JSON","GET_JSON_OBJECT","JSON_ARRAY_LENGTH","JSON_OBJECT_KEYS","JSON_TUPLE","SCHEMA_OF_JSON","TO_JSON","ABS","ACOS","ACOSH","AGGREGATE","ARRAY_SORT","ASCII","ASIN","ASINH","ASSERT_TRUE","ATAN","ATAN2","ATANH","BASE64","BIN","BIT_COUNT","BIT_GET","BIT_LENGTH","BROUND","BTRIM","CARDINALITY","CBRT","CEIL","CEILING","CHAR_LENGTH","CHARACTER_LENGTH","CHR","CONCAT","CONCAT_WS","CONV","COS","COSH","COT","CRC32","CURRENT_CATALOG","CURRENT_DATABASE","CURRENT_USER","DEGREES","ELT","EXP","EXPM1","FACTORIAL","FIND_IN_SET","FLOOR","FORALL","FORMAT_NUMBER","FORMAT_STRING","FROM_CSV","GETBIT","HASH","HEX","HYPOT","INITCAP","INLINE","INLINE_OUTER","INPUT_FILE_BLOCK_LENGTH","INPUT_FILE_BLOCK_START","INPUT_FILE_NAME","INSTR","ISNAN","ISNOTNULL","ISNULL","JAVA_METHOD","LCASE","LEFT","LENGTH","LEVENSHTEIN","LN","LOCATE","LOG","LOG10","LOG1P","LOG2","LOWER","LPAD","LTRIM","MAP_FILTER","MAP_ZIP_WITH","MD5","MOD","MONOTONICALLY_INCREASING_ID","NAMED_STRUCT","NANVL","NEGATIVE","NVL","NVL2","OCTET_LENGTH","OVERLAY","PARSE_URL","PI","PMOD","POSEXPLODE","POSEXPLODE_OUTER","POSITION","POSITIVE","POW","POWER","PRINTF","RADIANS","RAISE_ERROR","RAND","RANDN","RANDOM","REFLECT","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_LIKE","REGEXP_REPLACE","REPEAT","REPLACE","REVERSE","RIGHT","RINT","ROUND","RPAD","RTRIM","SCHEMA_OF_CSV","SENTENCES","SHA","SHA1","SHA2","SHIFTLEFT","SHIFTRIGHT","SHIFTRIGHTUNSIGNED","SIGN","SIGNUM","SIN","SINH","SOUNDEX","SPACE","SPARK_PARTITION_ID","SPLIT","SQRT","STACK","SUBSTR","SUBSTRING","SUBSTRING_INDEX","TAN","TANH","TO_CSV","TRANSFORM_KEYS","TRANSFORM_VALUES","TRANSLATE","TRIM","TRY_ADD","TRY_DIVIDE","TYPEOF","UCASE","UNBASE64","UNHEX","UPPER","UUID","VERSION","WIDTH_BUCKET","XPATH","XPATH_BOOLEAN","XPATH_DOUBLE","XPATH_FLOAT","XPATH_INT","XPATH_LONG","XPATH_NUMBER","XPATH_SHORT","XPATH_STRING","XXHASH64","ZIP_WITH","CAST","COALESCE","NULLIF"],QI=S(["SELECT [ALL | DISTINCT]"]),jI=S(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","SORT BY","CLUSTER BY","DISTRIBUTE BY","LIMIT","INSERT [INTO | OVERWRITE] [TABLE]","VALUES","INSERT OVERWRITE [LOCAL] DIRECTORY","LOAD DATA [LOCAL] INPATH","[OVERWRITE] INTO TABLE"]),$i=S(["CREATE [EXTERNAL] TABLE [IF NOT EXISTS]"]),CT=S(["CREATE [OR REPLACE] [GLOBAL TEMPORARY | TEMPORARY] VIEW [IF NOT EXISTS]","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD COLUMNS","DROP {COLUMN | COLUMNS}","RENAME TO","RENAME COLUMN","ALTER COLUMN","TRUNCATE TABLE","LATERAL VIEW","ALTER DATABASE","ALTER VIEW","CREATE DATABASE","CREATE FUNCTION","DROP DATABASE","DROP FUNCTION","DROP VIEW","REPAIR TABLE","USE DATABASE","TABLESAMPLE","PIVOT","TRANSFORM","EXPLAIN","ADD FILE","ADD JAR","ANALYZE TABLE","CACHE TABLE","CLEAR CACHE","DESCRIBE DATABASE","DESCRIBE FUNCTION","DESCRIBE QUERY","DESCRIBE TABLE","LIST FILE","LIST JAR","REFRESH","REFRESH TABLE","REFRESH FUNCTION","RESET","SHOW COLUMNS","SHOW CREATE TABLE","SHOW DATABASES","SHOW FUNCTIONS","SHOW PARTITIONS","SHOW TABLE EXTENDED","SHOW TABLES","SHOW TBLPROPERTIES","SHOW VIEWS","UNCACHE TABLE"]),ZI=S(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),zI=S(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN","[LEFT] {ANTI | SEMI} JOIN","NATURAL [LEFT] {ANTI | SEMI} JOIN"]),eN=S(["ON DELETE","ON UPDATE","CURRENT ROW","{ROWS | RANGE} BETWEEN"]),tN={name:"spark",tokenizerOptions:{reservedSelect:QI,reservedClauses:[...jI,...$i,...CT],reservedSetOperations:ZI,reservedJoins:zI,reservedPhrases:eN,supportsXor:!0,reservedKeywords:$I,reservedDataTypes:kI,reservedFunctionNames:qI,extraParens:["[]"],stringTypes:["''-bs",'""-bs',{quote:"''-raw",prefixes:["R","X"],requirePrefix:!0},{quote:'""-raw',prefixes:["R","X"],requirePrefix:!0}],identTypes:["``"],variableTypes:[{quote:"{}",prefixes:["$"],requirePrefix:!0}],operators:["%","~","^","|","&","<=>","==","!","||","->"],postProcess:EN},formatOptions:{onelineClauses:[...$i,...CT],tabularOnelineClauses:CT}};function EN(t){return t.map((e,E)=>{let r=t[E-1]||Vt,n=t[E+1]||Vt;return ut.WINDOW(e)&&n.type==="OPEN_PAREN"?ie(Ee({},e),{type:"RESERVED_FUNCTION_NAME"}):e.text==="ITEMS"&&e.type==="RESERVED_KEYWORD"&&!(r.text==="COLLECTION"&&n.text==="TERMINATED")?ie(Ee({},e),{type:"IDENTIFIER",text:e.raw}):e})}var rN=["ABS","CHANGES","CHAR","COALESCE","FORMAT","GLOB","HEX","IFNULL","IIF","INSTR","LAST_INSERT_ROWID","LENGTH","LIKE","LIKELIHOOD","LIKELY","LOAD_EXTENSION","LOWER","LTRIM","NULLIF","PRINTF","QUOTE","RANDOM","RANDOMBLOB","REPLACE","ROUND","RTRIM","SIGN","SOUNDEX","SQLITE_COMPILEOPTION_GET","SQLITE_COMPILEOPTION_USED","SQLITE_OFFSET","SQLITE_SOURCE_ID","SQLITE_VERSION","SUBSTR","SUBSTRING","TOTAL_CHANGES","TRIM","TYPEOF","UNICODE","UNLIKELY","UPPER","ZEROBLOB","AVG","COUNT","GROUP_CONCAT","MAX","MIN","SUM","TOTAL","DATE","TIME","DATETIME","JULIANDAY","UNIXEPOCH","STRFTIME","row_number","rank","dense_rank","percent_rank","cume_dist","ntile","lag","lead","first_value","last_value","nth_value","ACOS","ACOSH","ASIN","ASINH","ATAN","ATAN2","ATANH","CEIL","CEILING","COS","COSH","DEGREES","EXP","FLOOR","LN","LOG","LOG","LOG10","LOG2","MOD","PI","POW","POWER","RADIANS","SIN","SINH","SQRT","TAN","TANH","TRUNC","JSON","JSON_ARRAY","JSON_ARRAY_LENGTH","JSON_ARRAY_LENGTH","JSON_EXTRACT","JSON_INSERT","JSON_OBJECT","JSON_PATCH","JSON_REMOVE","JSON_REPLACE","JSON_SET","JSON_TYPE","JSON_TYPE","JSON_VALID","JSON_QUOTE","JSON_GROUP_ARRAY","JSON_GROUP_OBJECT","JSON_EACH","JSON_TREE","CAST"],nN=["ABORT","ACTION","ADD","AFTER","ALL","ALTER","AND","ARE","ALWAYS","ANALYZE","AS","ASC","ATTACH","AUTOINCREMENT","BEFORE","BEGIN","BETWEEN","BY","CASCADE","CASE","CAST","CHECK","COLLATE","COLUMN","COMMIT","CONFLICT","CONSTRAINT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATABASE","DEFAULT","DEFERRABLE","DEFERRED","DELETE","DESC","DETACH","DISTINCT","DO","DROP","EACH","ELSE","END","ESCAPE","EXCEPT","EXCLUDE","EXCLUSIVE","EXISTS","EXPLAIN","FAIL","FILTER","FIRST","FOLLOWING","FOR","FOREIGN","FROM","FULL","GENERATED","GLOB","GROUP","GROUPS","HAVING","IF","IGNORE","IMMEDIATE","IN","INDEX","INDEXED","INITIALLY","INNER","INSERT","INSTEAD","INTERSECT","INTO","IS","ISNULL","JOIN","KEY","LAST","LEFT","LIKE","LIMIT","MATCH","MATERIALIZED","NATURAL","NO","NOT","NOTHING","NOTNULL","NULL","NULLS","OF","OFFSET","ON","ONLY","OPEN","OR","ORDER","OTHERS","OUTER","OVER","PARTITION","PLAN","PRAGMA","PRECEDING","PRIMARY","QUERY","RAISE","RANGE","RECURSIVE","REFERENCES","REGEXP","REINDEX","RELEASE","RENAME","REPLACE","RESTRICT","RETURNING","RIGHT","ROLLBACK","ROW","ROWS","SAVEPOINT","SELECT","SET","TABLE","TEMP","TEMPORARY","THEN","TIES","TO","TRANSACTION","TRIGGER","UNBOUNDED","UNION","UNIQUE","UPDATE","USING","VACUUM","VALUES","VIEW","VIRTUAL","WHEN","WHERE","WINDOW","WITH","WITHOUT"],TN=["ANY","ARRAY","BLOB","CHARACTER","DECIMAL","INT","INTEGER","NATIVE CHARACTER","NCHAR","NUMERIC","NVARCHAR","REAL","TEXT","VARCHAR","VARYING CHARACTER"],sN=S(["SELECT [ALL | DISTINCT]"]),iN=S(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [OR ABORT | OR FAIL | OR IGNORE | OR REPLACE | OR ROLLBACK] INTO","REPLACE INTO","VALUES","SET"]),ki=S(["CREATE [TEMPORARY | TEMP] TABLE [IF NOT EXISTS]"]),_T=S(["CREATE [TEMPORARY | TEMP] VIEW [IF NOT EXISTS]","UPDATE [OR ABORT | OR FAIL | OR IGNORE | OR REPLACE | OR ROLLBACK]","ON CONFLICT","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD [COLUMN]","DROP [COLUMN]","RENAME [COLUMN]","RENAME TO","SET SCHEMA"]),oN=S(["UNION [ALL]","EXCEPT","INTERSECT"]),RN=S(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),AN=S(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE | GROUPS} BETWEEN"]),aN={name:"sqlite",tokenizerOptions:{reservedSelect:sN,reservedClauses:[...iN,...ki,..._T],reservedSetOperations:oN,reservedJoins:RN,reservedPhrases:AN,reservedKeywords:nN,reservedDataTypes:TN,reservedFunctionNames:rN,stringTypes:["''-qq",{quote:"''-raw",prefixes:["X"],requirePrefix:!0}],identTypes:['""-qq',"``","[]"],paramTypes:{positional:!0,numbered:["?"],named:[":","@","$"]},operators:["%","~","&","|","<<",">>","==","->","->>","||"]},formatOptions:{onelineClauses:[...ki,..._T],tabularOnelineClauses:_T}},SN=["GROUPING","RANK","DENSE_RANK","PERCENT_RANK","CUME_DIST","ROW_NUMBER","POSITION","OCCURRENCES_REGEX","POSITION_REGEX","EXTRACT","CHAR_LENGTH","CHARACTER_LENGTH","OCTET_LENGTH","CARDINALITY","ABS","MOD","LN","EXP","POWER","SQRT","FLOOR","CEIL","CEILING","WIDTH_BUCKET","SUBSTRING","SUBSTRING_REGEX","UPPER","LOWER","CONVERT","TRANSLATE","TRANSLATE_REGEX","TRIM","OVERLAY","NORMALIZE","SPECIFICTYPE","CURRENT_DATE","CURRENT_TIME","LOCALTIME","CURRENT_TIMESTAMP","LOCALTIMESTAMP","COUNT","AVG","MAX","MIN","SUM","STDDEV_POP","STDDEV_SAMP","VAR_SAMP","VAR_POP","COLLECT","FUSION","INTERSECTION","COVAR_POP","COVAR_SAMP","CORR","REGR_SLOPE","REGR_INTERCEPT","REGR_COUNT","REGR_R2","REGR_AVGX","REGR_AVGY","REGR_SXX","REGR_SYY","REGR_SXY","PERCENTILE_CONT","PERCENTILE_DISC","CAST","COALESCE","NULLIF","ROUND","SIN","COS","TAN","ASIN","ACOS","ATAN"],ON=["ALL","ALLOCATE","ALTER","ANY","ARE","AS","ASC","ASENSITIVE","ASYMMETRIC","AT","ATOMIC","AUTHORIZATION","BEGIN","BETWEEN","BOTH","BY","CALL","CALLED","CASCADED","CAST","CHECK","CLOSE","COALESCE","COLLATE","COLUMN","COMMIT","CONDITION","CONNECT","CONSTRAINT","CORRESPONDING","CREATE","CROSS","CUBE","CURRENT","CURRENT_CATALOG","CURRENT_DEFAULT_TRANSFORM_GROUP","CURRENT_PATH","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_TRANSFORM_GROUP_FOR_TYPE","CURRENT_USER","CURSOR","CYCLE","DEALLOCATE","DAY","DECLARE","DEFAULT","DELETE","DEREF","DESC","DESCRIBE","DETERMINISTIC","DISCONNECT","DISTINCT","DROP","DYNAMIC","EACH","ELEMENT","END-EXEC","ESCAPE","EVERY","EXCEPT","EXEC","EXECUTE","EXISTS","EXTERNAL","FALSE","FETCH","FILTER","FOR","FOREIGN","FREE","FROM","FULL","FUNCTION","GET","GLOBAL","GRANT","GROUP","HAVING","HOLD","HOUR","IDENTITY","IN","INDICATOR","INNER","INOUT","INSENSITIVE","INSERT","INTERSECT","INTO","IS","LANGUAGE","LARGE","LATERAL","LEADING","LEFT","LIKE","LIKE_REGEX","LOCAL","MATCH","MEMBER","MERGE","METHOD","MINUTE","MODIFIES","MODULE","MONTH","NATURAL","NEW","NO","NONE","NOT","NULL","NULLIF","OF","OLD","ON","ONLY","OPEN","ORDER","OUT","OUTER","OVER","OVERLAPS","PARAMETER","PARTITION","PRECISION","PREPARE","PRIMARY","PROCEDURE","RANGE","READS","REAL","RECURSIVE","REF","REFERENCES","REFERENCING","RELEASE","RESULT","RETURN","RETURNS","REVOKE","RIGHT","ROLLBACK","ROLLUP","ROW","ROWS","SAVEPOINT","SCOPE","SCROLL","SEARCH","SECOND","SELECT","SENSITIVE","SESSION_USER","SET","SIMILAR","SOME","SPECIFIC","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","START","STATIC","SUBMULTISET","SYMMETRIC","SYSTEM","SYSTEM_USER","TABLE","TABLESAMPLE","THEN","TIMEZONE_HOUR","TIMEZONE_MINUTE","TO","TRAILING","TRANSLATION","TREAT","TRIGGER","TRUE","UESCAPE","UNION","UNIQUE","UNKNOWN","UNNEST","UPDATE","USER","USING","VALUE","VALUES","WHENEVER","WINDOW","WITHIN","WITHOUT","YEAR"],IN=["ARRAY","BIGINT","BINARY LARGE OBJECT","BINARY VARYING","BINARY","BLOB","BOOLEAN","CHAR LARGE OBJECT","CHAR VARYING","CHAR","CHARACTER LARGE OBJECT","CHARACTER VARYING","CHARACTER","CLOB","DATE","DEC","DECIMAL","DOUBLE","FLOAT","INT","INTEGER","INTERVAL","MULTISET","NATIONAL CHAR VARYING","NATIONAL CHAR","NATIONAL CHARACTER LARGE OBJECT","NATIONAL CHARACTER VARYING","NATIONAL CHARACTER","NCHAR LARGE OBJECT","NCHAR VARYING","NCHAR","NCLOB","NUMERIC","SMALLINT","TIME","TIMESTAMP","VARBINARY","VARCHAR"],NN=S(["SELECT [ALL | DISTINCT]"]),lN=S(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL | DISTINCT]","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT INTO","VALUES","SET"]),qi=S(["CREATE [GLOBAL TEMPORARY | LOCAL TEMPORARY] TABLE"]),LT=S(["CREATE [RECURSIVE] VIEW","UPDATE","WHERE CURRENT OF","DELETE FROM","DROP TABLE","ALTER TABLE","ADD COLUMN","DROP [COLUMN]","RENAME COLUMN","RENAME TO","ALTER [COLUMN]","{SET | DROP} DEFAULT","ADD SCOPE","DROP SCOPE {CASCADE | RESTRICT}","RESTART WITH","TRUNCATE TABLE","SET SCHEMA"]),CN=S(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),_N=S(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),LN=S(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE} BETWEEN"]),cN={name:"sql",tokenizerOptions:{reservedSelect:NN,reservedClauses:[...lN,...qi,...LT],reservedSetOperations:CN,reservedJoins:_N,reservedPhrases:LN,reservedKeywords:ON,reservedDataTypes:IN,reservedFunctionNames:SN,stringTypes:[{quote:"''-qq-bs",prefixes:["N","U&"]},{quote:"''-raw",prefixes:["X"],requirePrefix:!0}],identTypes:['""-qq',"``"],paramTypes:{positional:!0},operators:["||"]},formatOptions:{onelineClauses:[...qi,...LT],tabularOnelineClauses:LT}},uN=["ABS","ACOS","ALL_MATCH","ANY_MATCH","APPROX_DISTINCT","APPROX_MOST_FREQUENT","APPROX_PERCENTILE","APPROX_SET","ARBITRARY","ARRAYS_OVERLAP","ARRAY_AGG","ARRAY_DISTINCT","ARRAY_EXCEPT","ARRAY_INTERSECT","ARRAY_JOIN","ARRAY_MAX","ARRAY_MIN","ARRAY_POSITION","ARRAY_REMOVE","ARRAY_SORT","ARRAY_UNION","ASIN","ATAN","ATAN2","AT_TIMEZONE","AVG","BAR","BETA_CDF","BING_TILE","BING_TILES_AROUND","BING_TILE_AT","BING_TILE_COORDINATES","BING_TILE_POLYGON","BING_TILE_QUADKEY","BING_TILE_ZOOM_LEVEL","BITWISE_AND","BITWISE_AND_AGG","BITWISE_LEFT_SHIFT","BITWISE_NOT","BITWISE_OR","BITWISE_OR_AGG","BITWISE_RIGHT_SHIFT","BITWISE_RIGHT_SHIFT_ARITHMETIC","BITWISE_XOR","BIT_COUNT","BOOL_AND","BOOL_OR","CARDINALITY","CAST","CBRT","CEIL","CEILING","CHAR2HEXINT","CHECKSUM","CHR","CLASSIFY","COALESCE","CODEPOINT","COLOR","COMBINATIONS","CONCAT","CONCAT_WS","CONTAINS","CONTAINS_SEQUENCE","CONVEX_HULL_AGG","CORR","COS","COSH","COSINE_SIMILARITY","COUNT","COUNT_IF","COVAR_POP","COVAR_SAMP","CRC32","CUME_DIST","CURRENT_CATALOG","CURRENT_DATE","CURRENT_GROUPS","CURRENT_SCHEMA","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_USER","DATE","DATE_ADD","DATE_DIFF","DATE_FORMAT","DATE_PARSE","DATE_TRUNC","DAY","DAY_OF_MONTH","DAY_OF_WEEK","DAY_OF_YEAR","DEGREES","DENSE_RANK","DOW","DOY","E","ELEMENT_AT","EMPTY_APPROX_SET","EVALUATE_CLASSIFIER_PREDICTIONS","EVERY","EXP","EXTRACT","FEATURES","FILTER","FIRST_VALUE","FLATTEN","FLOOR","FORMAT","FORMAT_DATETIME","FORMAT_NUMBER","FROM_BASE","FROM_BASE32","FROM_BASE64","FROM_BASE64URL","FROM_BIG_ENDIAN_32","FROM_BIG_ENDIAN_64","FROM_ENCODED_POLYLINE","FROM_GEOJSON_GEOMETRY","FROM_HEX","FROM_IEEE754_32","FROM_IEEE754_64","FROM_ISO8601_DATE","FROM_ISO8601_TIMESTAMP","FROM_ISO8601_TIMESTAMP_NANOS","FROM_UNIXTIME","FROM_UNIXTIME_NANOS","FROM_UTF8","GEOMETRIC_MEAN","GEOMETRY_FROM_HADOOP_SHAPE","GEOMETRY_INVALID_REASON","GEOMETRY_NEAREST_POINTS","GEOMETRY_TO_BING_TILES","GEOMETRY_UNION","GEOMETRY_UNION_AGG","GREATEST","GREAT_CIRCLE_DISTANCE","HAMMING_DISTANCE","HASH_COUNTS","HISTOGRAM","HMAC_MD5","HMAC_SHA1","HMAC_SHA256","HMAC_SHA512","HOUR","HUMAN_READABLE_SECONDS","IF","INDEX","INFINITY","INTERSECTION_CARDINALITY","INVERSE_BETA_CDF","INVERSE_NORMAL_CDF","IS_FINITE","IS_INFINITE","IS_JSON_SCALAR","IS_NAN","JACCARD_INDEX","JSON_ARRAY_CONTAINS","JSON_ARRAY_GET","JSON_ARRAY_LENGTH","JSON_EXISTS","JSON_EXTRACT","JSON_EXTRACT_SCALAR","JSON_FORMAT","JSON_PARSE","JSON_QUERY","JSON_SIZE","JSON_VALUE","KURTOSIS","LAG","LAST_DAY_OF_MONTH","LAST_VALUE","LEAD","LEARN_CLASSIFIER","LEARN_LIBSVM_CLASSIFIER","LEARN_LIBSVM_REGRESSOR","LEARN_REGRESSOR","LEAST","LENGTH","LEVENSHTEIN_DISTANCE","LINE_INTERPOLATE_POINT","LINE_INTERPOLATE_POINTS","LINE_LOCATE_POINT","LISTAGG","LN","LOCALTIME","LOCALTIMESTAMP","LOG","LOG10","LOG2","LOWER","LPAD","LTRIM","LUHN_CHECK","MAKE_SET_DIGEST","MAP","MAP_AGG","MAP_CONCAT","MAP_ENTRIES","MAP_FILTER","MAP_FROM_ENTRIES","MAP_KEYS","MAP_UNION","MAP_VALUES","MAP_ZIP_WITH","MAX","MAX_BY","MD5","MERGE","MERGE_SET_DIGEST","MILLISECOND","MIN","MINUTE","MIN_BY","MOD","MONTH","MULTIMAP_AGG","MULTIMAP_FROM_ENTRIES","MURMUR3","NAN","NGRAMS","NONE_MATCH","NORMALIZE","NORMAL_CDF","NOW","NTH_VALUE","NTILE","NULLIF","NUMERIC_HISTOGRAM","OBJECTID","OBJECTID_TIMESTAMP","PARSE_DATA_SIZE","PARSE_DATETIME","PARSE_DURATION","PERCENT_RANK","PI","POSITION","POW","POWER","QDIGEST_AGG","QUARTER","RADIANS","RAND","RANDOM","RANK","REDUCE","REDUCE_AGG","REGEXP_COUNT","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_LIKE","REGEXP_POSITION","REGEXP_REPLACE","REGEXP_SPLIT","REGRESS","REGR_INTERCEPT","REGR_SLOPE","RENDER","REPEAT","REPLACE","REVERSE","RGB","ROUND","ROW_NUMBER","RPAD","RTRIM","SECOND","SEQUENCE","SHA1","SHA256","SHA512","SHUFFLE","SIGN","SIMPLIFY_GEOMETRY","SIN","SKEWNESS","SLICE","SOUNDEX","SPATIAL_PARTITIONING","SPATIAL_PARTITIONS","SPLIT","SPLIT_PART","SPLIT_TO_MAP","SPLIT_TO_MULTIMAP","SPOOKY_HASH_V2_32","SPOOKY_HASH_V2_64","SQRT","STARTS_WITH","STDDEV","STDDEV_POP","STDDEV_SAMP","STRPOS","ST_AREA","ST_ASBINARY","ST_ASTEXT","ST_BOUNDARY","ST_BUFFER","ST_CENTROID","ST_CONTAINS","ST_CONVEXHULL","ST_COORDDIM","ST_CROSSES","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_ENDPOINT","ST_ENVELOPE","ST_ENVELOPEASPTS","ST_EQUALS","ST_EXTERIORRING","ST_GEOMETRIES","ST_GEOMETRYFROMTEXT","ST_GEOMETRYN","ST_GEOMETRYTYPE","ST_GEOMFROMBINARY","ST_INTERIORRINGN","ST_INTERIORRINGS","ST_INTERSECTION","ST_INTERSECTS","ST_ISCLOSED","ST_ISEMPTY","ST_ISRING","ST_ISSIMPLE","ST_ISVALID","ST_LENGTH","ST_LINEFROMTEXT","ST_LINESTRING","ST_MULTIPOINT","ST_NUMGEOMETRIES","ST_NUMINTERIORRING","ST_NUMPOINTS","ST_OVERLAPS","ST_POINT","ST_POINTN","ST_POINTS","ST_POLYGON","ST_RELATE","ST_STARTPOINT","ST_SYMDIFFERENCE","ST_TOUCHES","ST_UNION","ST_WITHIN","ST_X","ST_XMAX","ST_XMIN","ST_Y","ST_YMAX","ST_YMIN","SUBSTR","SUBSTRING","SUM","TAN","TANH","TDIGEST_AGG","TIMESTAMP_OBJECTID","TIMEZONE_HOUR","TIMEZONE_MINUTE","TO_BASE","TO_BASE32","TO_BASE64","TO_BASE64URL","TO_BIG_ENDIAN_32","TO_BIG_ENDIAN_64","TO_CHAR","TO_DATE","TO_ENCODED_POLYLINE","TO_GEOJSON_GEOMETRY","TO_GEOMETRY","TO_HEX","TO_IEEE754_32","TO_IEEE754_64","TO_ISO8601","TO_MILLISECONDS","TO_SPHERICAL_GEOGRAPHY","TO_TIMESTAMP","TO_UNIXTIME","TO_UTF8","TRANSFORM","TRANSFORM_KEYS","TRANSFORM_VALUES","TRANSLATE","TRIM","TRIM_ARRAY","TRUNCATE","TRY","TRY_CAST","TYPEOF","UPPER","URL_DECODE","URL_ENCODE","URL_EXTRACT_FRAGMENT","URL_EXTRACT_HOST","URL_EXTRACT_PARAMETER","URL_EXTRACT_PATH","URL_EXTRACT_PORT","URL_EXTRACT_PROTOCOL","URL_EXTRACT_QUERY","UUID","VALUES_AT_QUANTILES","VALUE_AT_QUANTILE","VARIANCE","VAR_POP","VAR_SAMP","VERSION","WEEK","WEEK_OF_YEAR","WIDTH_BUCKET","WILSON_INTERVAL_LOWER","WILSON_INTERVAL_UPPER","WITH_TIMEZONE","WORD_STEM","XXHASH64","YEAR","YEAR_OF_WEEK","YOW","ZIP","ZIP_WITH","CLASSIFIER","FIRST","LAST","MATCH_NUMBER","NEXT","PERMUTE","PREV"],fN=["ABSENT","ADD","ADMIN","AFTER","ALL","ALTER","ANALYZE","AND","ANY","AS","ASC","AT","AUTHORIZATION","BERNOULLI","BETWEEN","BOTH","BY","CALL","CASCADE","CASE","CATALOGS","COLUMN","COLUMNS","COMMENT","COMMIT","COMMITTED","CONDITIONAL","CONSTRAINT","COPARTITION","CREATE","CROSS","CUBE","CURRENT","CURRENT_PATH","CURRENT_ROLE","DATA","DEALLOCATE","DEFAULT","DEFINE","DEFINER","DELETE","DENY","DESC","DESCRIBE","DESCRIPTOR","DISTINCT","DISTRIBUTED","DOUBLE","DROP","ELSE","EMPTY","ENCODING","END","ERROR","ESCAPE","EXCEPT","EXCLUDING","EXECUTE","EXISTS","EXPLAIN","FALSE","FETCH","FINAL","FIRST","FOLLOWING","FOR","FROM","FULL","FUNCTIONS","GRANT","GRANTED","GRANTS","GRAPHVIZ","GROUP","GROUPING","GROUPS","HAVING","IGNORE","IN","INCLUDING","INITIAL","INNER","INPUT","INSERT","INTERSECT","INTERVAL","INTO","INVOKER","IO","IS","ISOLATION","JOIN","JSON","JSON_ARRAY","JSON_OBJECT","KEEP","KEY","KEYS","LAST","LATERAL","LEADING","LEFT","LEVEL","LIKE","LIMIT","LOCAL","LOGICAL","MATCH","MATCHED","MATCHES","MATCH_RECOGNIZE","MATERIALIZED","MEASURES","NATURAL","NEXT","NFC","NFD","NFKC","NFKD","NO","NONE","NOT","NULL","NULLS","OBJECT","OF","OFFSET","OMIT","ON","ONE","ONLY","OPTION","OR","ORDER","ORDINALITY","OUTER","OUTPUT","OVER","OVERFLOW","PARTITION","PARTITIONS","PASSING","PAST","PATH","PATTERN","PER","PERMUTE","PRECEDING","PRECISION","PREPARE","PRIVILEGES","PROPERTIES","PRUNE","QUOTES","RANGE","READ","RECURSIVE","REFRESH","RENAME","REPEATABLE","RESET","RESPECT","RESTRICT","RETURNING","REVOKE","RIGHT","ROLE","ROLES","ROLLBACK","ROLLUP","ROW","ROWS","RUNNING","SCALAR","SCHEMA","SCHEMAS","SECURITY","SEEK","SELECT","SERIALIZABLE","SESSION","SET","SETS","SHOW","SKIP","SOME","START","STATS","STRING","SUBSET","SYSTEM","TABLE","TABLES","TABLESAMPLE","TEXT","THEN","TIES","TIME","TIMESTAMP","TO","TRAILING","TRANSACTION","TRUE","TYPE","UESCAPE","UNBOUNDED","UNCOMMITTED","UNCONDITIONAL","UNION","UNIQUE","UNKNOWN","UNMATCHED","UNNEST","UPDATE","USE","USER","USING","UTF16","UTF32","UTF8","VALIDATE","VALUE","VALUES","VERBOSE","VIEW","WHEN","WHERE","WINDOW","WITH","WITHIN","WITHOUT","WORK","WRAPPER","WRITE","ZONE"],dN=["BIGINT","INT","INTEGER","SMALLINT","TINYINT","BOOLEAN","DATE","DECIMAL","REAL","DOUBLE","HYPERLOGLOG","QDIGEST","TDIGEST","P4HYPERLOGLOG","INTERVAL","TIMESTAMP","TIME","VARBINARY","VARCHAR","CHAR","ROW","ARRAY","MAP","JSON","JSON2016","IPADDRESS","GEOMETRY","UUID","SETDIGEST","JONIREGEXP","RE2JREGEXP","LIKEPATTERN","COLOR","CODEPOINTS","FUNCTION","JSONPATH"],PN=S(["SELECT [ALL | DISTINCT]"]),DN=S(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL | DISTINCT]","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT INTO","VALUES","SET","MATCH_RECOGNIZE","MEASURES","ONE ROW PER MATCH","ALL ROWS PER MATCH","AFTER MATCH","PATTERN","SUBSET","DEFINE"]),Qi=S(["CREATE TABLE [IF NOT EXISTS]"]),cT=S(["CREATE [OR REPLACE] [MATERIALIZED] VIEW","UPDATE","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS]","ADD COLUMN [IF NOT EXISTS]","DROP COLUMN [IF EXISTS]","RENAME COLUMN [IF EXISTS]","RENAME TO","SET AUTHORIZATION [USER | ROLE]","SET PROPERTIES","EXECUTE","TRUNCATE TABLE","ALTER SCHEMA","ALTER MATERIALIZED VIEW","ALTER VIEW","CREATE SCHEMA","CREATE ROLE","DROP SCHEMA","DROP MATERIALIZED VIEW","DROP VIEW","DROP ROLE","EXPLAIN","ANALYZE","EXPLAIN ANALYZE","EXPLAIN ANALYZE VERBOSE","USE","DESCRIBE INPUT","DESCRIBE OUTPUT","REFRESH MATERIALIZED VIEW","RESET SESSION","SET SESSION","SET PATH","SET TIME ZONE","SHOW GRANTS","SHOW CREATE TABLE","SHOW CREATE SCHEMA","SHOW CREATE VIEW","SHOW CREATE MATERIALIZED VIEW","SHOW TABLES","SHOW SCHEMAS","SHOW CATALOGS","SHOW COLUMNS","SHOW STATS FOR","SHOW ROLES","SHOW CURRENT ROLES","SHOW ROLE GRANTS","SHOW FUNCTIONS","SHOW SESSION"]),pN=S(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),hN=S(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),MN=S(["{ROWS | RANGE | GROUPS} BETWEEN","IS [NOT] DISTINCT FROM"]),mN={name:"trino",tokenizerOptions:{reservedSelect:PN,reservedClauses:[...DN,...Qi,...cT],reservedSetOperations:pN,reservedJoins:hN,reservedPhrases:MN,reservedKeywords:fN,reservedDataTypes:dN,reservedFunctionNames:uN,extraParens:["[]","{}"],stringTypes:[{quote:"''-qq",prefixes:["U&"]},{quote:"''-raw",prefixes:["X"],requirePrefix:!0}],identTypes:['""-qq'],paramTypes:{positional:!0},operators:["%","->","=>",":","||","|","^","$"]},formatOptions:{onelineClauses:[...Qi,...cT],tabularOnelineClauses:cT}},UN=["APPROX_COUNT_DISTINCT","AVG","CHECKSUM_AGG","COUNT","COUNT_BIG","GROUPING","GROUPING_ID","MAX","MIN","STDEV","STDEVP","SUM","VAR","VARP","CUME_DIST","FIRST_VALUE","LAG","LAST_VALUE","LEAD","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","Collation - COLLATIONPROPERTY","Collation - TERTIARY_WEIGHTS","@@DBTS","@@LANGID","@@LANGUAGE","@@LOCK_TIMEOUT","@@MAX_CONNECTIONS","@@MAX_PRECISION","@@NESTLEVEL","@@OPTIONS","@@REMSERVER","@@SERVERNAME","@@SERVICENAME","@@SPID","@@TEXTSIZE","@@VERSION","CAST","CONVERT","PARSE","TRY_CAST","TRY_CONVERT","TRY_PARSE","ASYMKEY_ID","ASYMKEYPROPERTY","CERTPROPERTY","CERT_ID","CRYPT_GEN_RANDOM","DECRYPTBYASYMKEY","DECRYPTBYCERT","DECRYPTBYKEY","DECRYPTBYKEYAUTOASYMKEY","DECRYPTBYKEYAUTOCERT","DECRYPTBYPASSPHRASE","ENCRYPTBYASYMKEY","ENCRYPTBYCERT","ENCRYPTBYKEY","ENCRYPTBYPASSPHRASE","HASHBYTES","IS_OBJECTSIGNED","KEY_GUID","KEY_ID","KEY_NAME","SIGNBYASYMKEY","SIGNBYCERT","SYMKEYPROPERTY","VERIFYSIGNEDBYCERT","VERIFYSIGNEDBYASYMKEY","@@CURSOR_ROWS","@@FETCH_STATUS","CURSOR_STATUS","DATALENGTH","IDENT_CURRENT","IDENT_INCR","IDENT_SEED","IDENTITY","SQL_VARIANT_PROPERTY","@@DATEFIRST","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_TIMEZONE_ID","DATEADD","DATEDIFF","DATEDIFF_BIG","DATEFROMPARTS","DATENAME","DATEPART","DATETIME2FROMPARTS","DATETIMEFROMPARTS","DATETIMEOFFSETFROMPARTS","DAY","EOMONTH","GETDATE","GETUTCDATE","ISDATE","MONTH","SMALLDATETIMEFROMPARTS","SWITCHOFFSET","SYSDATETIME","SYSDATETIMEOFFSET","SYSUTCDATETIME","TIMEFROMPARTS","TODATETIMEOFFSET","YEAR","JSON","ISJSON","JSON_VALUE","JSON_QUERY","JSON_MODIFY","ABS","ACOS","ASIN","ATAN","ATN2","CEILING","COS","COT","DEGREES","EXP","FLOOR","LOG","LOG10","PI","POWER","RADIANS","RAND","ROUND","SIGN","SIN","SQRT","SQUARE","TAN","CHOOSE","GREATEST","IIF","LEAST","@@PROCID","APP_NAME","APPLOCK_MODE","APPLOCK_TEST","ASSEMBLYPROPERTY","COL_LENGTH","COL_NAME","COLUMNPROPERTY","DATABASEPROPERTYEX","DB_ID","DB_NAME","FILE_ID","FILE_IDEX","FILE_NAME","FILEGROUP_ID","FILEGROUP_NAME","FILEGROUPPROPERTY","FILEPROPERTY","FILEPROPERTYEX","FULLTEXTCATALOGPROPERTY","FULLTEXTSERVICEPROPERTY","INDEX_COL","INDEXKEY_PROPERTY","INDEXPROPERTY","NEXT VALUE FOR","OBJECT_DEFINITION","OBJECT_ID","OBJECT_NAME","OBJECT_SCHEMA_NAME","OBJECTPROPERTY","OBJECTPROPERTYEX","ORIGINAL_DB_NAME","PARSENAME","SCHEMA_ID","SCHEMA_NAME","SCOPE_IDENTITY","SERVERPROPERTY","STATS_DATE","TYPE_ID","TYPE_NAME","TYPEPROPERTY","DENSE_RANK","NTILE","RANK","ROW_NUMBER","PUBLISHINGSERVERNAME","CERTENCODED","CERTPRIVATEKEY","CURRENT_USER","DATABASE_PRINCIPAL_ID","HAS_DBACCESS","HAS_PERMS_BY_NAME","IS_MEMBER","IS_ROLEMEMBER","IS_SRVROLEMEMBER","LOGINPROPERTY","ORIGINAL_LOGIN","PERMISSIONS","PWDENCRYPT","PWDCOMPARE","SESSION_USER","SESSIONPROPERTY","SUSER_ID","SUSER_NAME","SUSER_SID","SUSER_SNAME","SYSTEM_USER","USER","USER_ID","USER_NAME","ASCII","CHAR","CHARINDEX","CONCAT","CONCAT_WS","DIFFERENCE","FORMAT","LEFT","LEN","LOWER","LTRIM","NCHAR","PATINDEX","QUOTENAME","REPLACE","REPLICATE","REVERSE","RIGHT","RTRIM","SOUNDEX","SPACE","STR","STRING_AGG","STRING_ESCAPE","STUFF","SUBSTRING","TRANSLATE","TRIM","UNICODE","UPPER","$PARTITION","@@ERROR","@@IDENTITY","@@PACK_RECEIVED","@@ROWCOUNT","@@TRANCOUNT","BINARY_CHECKSUM","CHECKSUM","COMPRESS","CONNECTIONPROPERTY","CONTEXT_INFO","CURRENT_REQUEST_ID","CURRENT_TRANSACTION_ID","DECOMPRESS","ERROR_LINE","ERROR_MESSAGE","ERROR_NUMBER","ERROR_PROCEDURE","ERROR_SEVERITY","ERROR_STATE","FORMATMESSAGE","GET_FILESTREAM_TRANSACTION_CONTEXT","GETANSINULL","HOST_ID","HOST_NAME","ISNULL","ISNUMERIC","MIN_ACTIVE_ROWVERSION","NEWID","NEWSEQUENTIALID","ROWCOUNT_BIG","SESSION_CONTEXT","XACT_STATE","@@CONNECTIONS","@@CPU_BUSY","@@IDLE","@@IO_BUSY","@@PACK_SENT","@@PACKET_ERRORS","@@TIMETICKS","@@TOTAL_ERRORS","@@TOTAL_READ","@@TOTAL_WRITE","TEXTPTR","TEXTVALID","COLUMNS_UPDATED","EVENTDATA","TRIGGER_NESTLEVEL","UPDATE","COALESCE","NULLIF"],gN=["ADD","ALL","ALTER","AND","ANY","AS","ASC","AUTHORIZATION","BACKUP","BEGIN","BETWEEN","BREAK","BROWSE","BULK","BY","CASCADE","CHECK","CHECKPOINT","CLOSE","CLUSTERED","COALESCE","COLLATE","COLUMN","COMMIT","COMPUTE","CONSTRAINT","CONTAINS","CONTAINSTABLE","CONTINUE","CONVERT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DBCC","DEALLOCATE","DECLARE","DEFAULT","DELETE","DENY","DESC","DISK","DISTINCT","DISTRIBUTED","DROP","DUMP","ERRLVL","ESCAPE","EXEC","EXECUTE","EXISTS","EXIT","EXTERNAL","FETCH","FILE","FILLFACTOR","FOR","FOREIGN","FREETEXT","FREETEXTTABLE","FROM","FULL","FUNCTION","GOTO","GRANT","GROUP","HAVING","HOLDLOCK","IDENTITY","IDENTITYCOL","IDENTITY_INSERT","IF","IN","INDEX","INNER","INSERT","INTERSECT","INTO","IS","JOIN","KEY","KILL","LEFT","LIKE","LINENO","LOAD","MERGE","NOCHECK","NONCLUSTERED","NOT","NULL","NULLIF","OF","OFF","OFFSETS","ON","OPEN","OPENDATASOURCE","OPENQUERY","OPENROWSET","OPENXML","OPTION","OR","ORDER","OUTER","OVER","PERCENT","PIVOT","PLAN","PRIMARY","PRINT","PROC","PROCEDURE","PUBLIC","RAISERROR","READ","READTEXT","RECONFIGURE","REFERENCES","REPLICATION","RESTORE","RESTRICT","RETURN","REVERT","REVOKE","RIGHT","ROLLBACK","ROWCOUNT","ROWGUIDCOL","RULE","SAVE","SCHEMA","SECURITYAUDIT","SELECT","SEMANTICKEYPHRASETABLE","SEMANTICSIMILARITYDETAILSTABLE","SEMANTICSIMILARITYTABLE","SESSION_USER","SET","SETUSER","SHUTDOWN","SOME","STATISTICS","SYSTEM_USER","TABLE","TABLESAMPLE","TEXTSIZE","THEN","TO","TOP","TRAN","TRANSACTION","TRIGGER","TRUNCATE","TRY_CONVERT","TSEQUAL","UNION","UNIQUE","UNPIVOT","UPDATE","UPDATETEXT","USE","USER","VALUES","VIEW","WAITFOR","WHERE","WHILE","WITH","WITHIN GROUP","WRITETEXT","ABSOLUTE","ACTION","ADA","ALLOCATE","ARE","ASSERTION","AT","AVG","BIT_LENGTH","BOTH","CASCADED","CAST","CATALOG","CHARACTER_LENGTH","CHAR_LENGTH","COLLATION","CONNECT","CONNECTION","CONSTRAINTS","CORRESPONDING","COUNT","DAY","DEFERRABLE","DEFERRED","DESCRIBE","DESCRIPTOR","DIAGNOSTICS","DISCONNECT","DOMAIN","END-EXEC","EXCEPTION","EXTRACT","FALSE","FIRST","FORTRAN","FOUND","GET","GLOBAL","GO","HOUR","IMMEDIATE","INCLUDE","INDICATOR","INITIALLY","INPUT","INSENSITIVE","INTERVAL","ISOLATION","LANGUAGE","LAST","LEADING","LEVEL","LOCAL","LOWER","MATCH","MAX","MIN","MINUTE","MODULE","MONTH","NAMES","NATURAL","NEXT","NO","NONE","OCTET_LENGTH","ONLY","OUTPUT","OVERLAPS","PAD","PARTIAL","PASCAL","POSITION","PREPARE","PRESERVE","PRIOR","PRIVILEGES","RELATIVE","ROWS","SCROLL","SECOND","SECTION","SESSION","SIZE","SPACE","SQL","SQLCA","SQLCODE","SQLERROR","SQLSTATE","SQLWARNING","SUBSTRING","SUM","TEMPORARY","TIMEZONE_HOUR","TIMEZONE_MINUTE","TRAILING","TRANSLATE","TRANSLATION","TRIM","TRUE","UNKNOWN","UPPER","USAGE","VALUE","WHENEVER","WORK","WRITE","YEAR","ZONE"],GN=["BINARY","BIT","CHAR","CHAR","CHARACTER","DATE","DATETIME2","DATETIMEOFFSET","DEC","DECIMAL","DOUBLE","FLOAT","INT","INTEGER","NATIONAL","NCHAR","NUMERIC","NVARCHAR","PRECISION","REAL","SMALLINT","TIME","TIMESTAMP","VARBINARY","VARCHAR"],yN=S(["SELECT [ALL | DISTINCT]"]),BN=S(["WITH","INTO","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","OFFSET","FETCH {FIRST | NEXT}","FOR {BROWSE | XML | JSON}","OPTION","INSERT [INTO]","VALUES","SET","MERGE [INTO]","WHEN [NOT] MATCHED [BY TARGET | BY SOURCE] [THEN]","UPDATE SET","CREATE [OR ALTER] {PROC | PROCEDURE}"]),ji=S(["CREATE TABLE"]),uT=S(["CREATE [OR ALTER] [MATERIALIZED] VIEW","UPDATE","WHERE CURRENT OF","DELETE [FROM]","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD","DROP COLUMN [IF EXISTS]","ALTER COLUMN","TRUNCATE TABLE","ADD SENSITIVITY CLASSIFICATION","ADD SIGNATURE","AGGREGATE","ANSI_DEFAULTS","ANSI_NULLS","ANSI_NULL_DFLT_OFF","ANSI_NULL_DFLT_ON","ANSI_PADDING","ANSI_WARNINGS","APPLICATION ROLE","ARITHABORT","ARITHIGNORE","ASSEMBLY","ASYMMETRIC KEY","AUTHORIZATION","AVAILABILITY GROUP","BACKUP","BACKUP CERTIFICATE","BACKUP MASTER KEY","BACKUP SERVICE MASTER KEY","BEGIN CONVERSATION TIMER","BEGIN DIALOG CONVERSATION","BROKER PRIORITY","BULK INSERT","CERTIFICATE","CLOSE MASTER KEY","CLOSE SYMMETRIC KEY","COLLATE","COLUMN ENCRYPTION KEY","COLUMN MASTER KEY","COLUMNSTORE INDEX","CONCAT_NULL_YIELDS_NULL","CONTEXT_INFO","CONTRACT","CREDENTIAL","CRYPTOGRAPHIC PROVIDER","CURSOR_CLOSE_ON_COMMIT","DATABASE","DATABASE AUDIT SPECIFICATION","DATABASE ENCRYPTION KEY","DATABASE HADR","DATABASE SCOPED CONFIGURATION","DATABASE SCOPED CREDENTIAL","DATABASE SET","DATEFIRST","DATEFORMAT","DEADLOCK_PRIORITY","DENY","DENY XML","DISABLE TRIGGER","ENABLE TRIGGER","END CONVERSATION","ENDPOINT","EVENT NOTIFICATION","EVENT SESSION","EXECUTE AS","EXTERNAL DATA SOURCE","EXTERNAL FILE FORMAT","EXTERNAL LANGUAGE","EXTERNAL LIBRARY","EXTERNAL RESOURCE POOL","EXTERNAL TABLE","FIPS_FLAGGER","FMTONLY","FORCEPLAN","FULLTEXT CATALOG","FULLTEXT INDEX","FULLTEXT STOPLIST","FUNCTION","GET CONVERSATION GROUP","GET_TRANSMISSION_STATUS","GRANT","GRANT XML","IDENTITY_INSERT","IMPLICIT_TRANSACTIONS","INDEX","LANGUAGE","LOCK_TIMEOUT","LOGIN","MASTER KEY","MESSAGE TYPE","MOVE CONVERSATION","NOCOUNT","NOEXEC","NUMERIC_ROUNDABORT","OFFSETS","OPEN MASTER KEY","OPEN SYMMETRIC KEY","PARSEONLY","PARTITION FUNCTION","PARTITION SCHEME","PROCEDURE","QUERY_GOVERNOR_COST_LIMIT","QUEUE","QUOTED_IDENTIFIER","RECEIVE","REMOTE SERVICE BINDING","REMOTE_PROC_TRANSACTIONS","RESOURCE GOVERNOR","RESOURCE POOL","RESTORE","RESTORE FILELISTONLY","RESTORE HEADERONLY","RESTORE LABELONLY","RESTORE MASTER KEY","RESTORE REWINDONLY","RESTORE SERVICE MASTER KEY","RESTORE VERIFYONLY","REVERT","REVOKE","REVOKE XML","ROLE","ROUTE","ROWCOUNT","RULE","SCHEMA","SEARCH PROPERTY LIST","SECURITY POLICY","SELECTIVE XML INDEX","SEND","SENSITIVITY CLASSIFICATION","SEQUENCE","SERVER AUDIT","SERVER AUDIT SPECIFICATION","SERVER CONFIGURATION","SERVER ROLE","SERVICE","SERVICE MASTER KEY","SETUSER","SHOWPLAN_ALL","SHOWPLAN_TEXT","SHOWPLAN_XML","SIGNATURE","SPATIAL INDEX","STATISTICS","STATISTICS IO","STATISTICS PROFILE","STATISTICS TIME","STATISTICS XML","SYMMETRIC KEY","SYNONYM","TABLE","TABLE IDENTITY","TEXTSIZE","TRANSACTION ISOLATION LEVEL","TRIGGER","TYPE","UPDATE STATISTICS","USER","WORKLOAD GROUP","XACT_ABORT","XML INDEX","XML SCHEMA COLLECTION"]),FN=S(["UNION [ALL]","EXCEPT","INTERSECT"]),HN=S(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","{CROSS | OUTER} APPLY"]),YN=S(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE} BETWEEN"]),bN={name:"transactsql",tokenizerOptions:{reservedSelect:yN,reservedClauses:[...BN,...ji,...uT],reservedSetOperations:FN,reservedJoins:HN,reservedPhrases:YN,reservedKeywords:gN,reservedDataTypes:GN,reservedFunctionNames:UN,nestedBlockComments:!0,stringTypes:[{quote:"''-qq",prefixes:["N"]}],identTypes:['""-qq',"[]"],identChars:{first:"#@",rest:"#@$"},paramTypes:{named:["@"],quoted:["@"]},operators:["%","&","|","^","~","!<","!>","+=","-=","*=","/=","%=","|=","&=","^=","::",":"],propertyAccessOperators:[".."]},formatOptions:{alwaysDenseOperators:["::"],onelineClauses:[...ji,...uT],tabularOnelineClauses:uT}},vN=["ADD","ALL","ALTER","ANALYZE","AND","AS","ASC","ASENSITIVE","BEFORE","BETWEEN","_BINARY","BOTH","BY","CALL","CASCADE","CASE","CHANGE","CHECK","COLLATE","COLUMN","CONDITION","CONSTRAINT","CONTINUE","CONVERT","CREATE","CROSS","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DATABASES","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DECLARE","DEFAULT","DELAYED","DELETE","DESC","DESCRIBE","DETERMINISTIC","DISTINCT","DISTINCTROW","DIV","DROP","DUAL","EACH","ELSE","ELSEIF","ENCLOSED","ESCAPED","EXCEPT","EXISTS","EXIT","EXPLAIN","EXTRA_JOIN","FALSE","FETCH","FOR","FORCE","FORCE_COMPILED_MODE","FORCE_INTERPRETER_MODE","FOREIGN","FROM","FULL","FULLTEXT","GRANT","GROUP","HAVING","HEARTBEAT_NO_LOGGING","HIGH_PRIORITY","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IF","IGNORE","IN","INDEX","INFILE","INNER","INOUT","INSENSITIVE","INSERT","IN","_INTERNAL_DYNAMIC_TYPECAST","INTERSECT","INTERVAL","INTO","ITERATE","JOIN","KEY","KEYS","KILL","LEADING","LEAVE","LEFT","LIKE","LIMIT","LINES","LOAD","LOCALTIME","LOCALTIMESTAMP","LOCK","LOOP","LOW_PRIORITY","MATCH","MAXVALUE","MINUS","MINUTE_MICROSECOND","MINUTE_SECOND","MOD","MODIFIES","NATURAL","NO_QUERY_REWRITE","NOT","NO_WRITE_TO_BINLOG","NO_QUERY_REWRITE","NULL","ON","OPTIMIZE","OPTION","OPTIONALLY","OR","ORDER","OUT","OUTER","OUTFILE","OVER","PRIMARY","PROCEDURE","PURGE","RANGE","READ","READS","REFERENCES","REGEXP","RELEASE","RENAME","REPEAT","REPLACE","REQUIRE","RESTRICT","RETURN","REVOKE","RIGHT","RIGHT_ANTI_JOIN","RIGHT_SEMI_JOIN","RIGHT_STRAIGHT_JOIN","RLIKE","SCHEMA","SCHEMAS","SECOND_MICROSECOND","SELECT","SEMI_JOIN","SENSITIVE","SEPARATOR","SET","SHOW","SIGNAL","SPATIAL","SPECIFIC","SQL","SQL_BIG_RESULT","SQL_BUFFER_RESULT","SQL_CACHE","SQL_CALC_FOUND_ROWS","SQLEXCEPTION","SQL_NO_CACHE","SQL_NO_LOGGING","SQL_SMALL_RESULT","SQLSTATE","SQLWARNING","STRAIGHT_JOIN","TABLE","TERMINATED","THEN","TO","TRAILING","TRIGGER","TRUE","UNBOUNDED","UNDO","UNION","UNIQUE","UNLOCK","UPDATE","USAGE","USE","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","_UTF8","VALUES","WHEN","WHERE","WHILE","WINDOW","WITH","WITHIN","WRITE","XOR","YEAR_MONTH","ZEROFILL"],VN=["BIGINT","BINARY","BIT","BLOB","CHAR","CHARACTER","DATETIME","DEC","DECIMAL","DOUBLE PRECISION","DOUBLE","ENUM","FIXED","FLOAT","FLOAT4","FLOAT8","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","LONG","LONGBLOB","LONGTEXT","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MIDDLEINT","NATIONAL CHAR","NATIONAL VARCHAR","NUMERIC","PRECISION","REAL","SMALLINT","TEXT","TIME","TIMESTAMP","TINYBLOB","TINYINT","TINYTEXT","UNSIGNED","VARBINARY","VARCHAR","VARCHARACTER","YEAR"],wN=["ABS","ACOS","ADDDATE","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ANY_VALUE","APPROX_COUNT_DISTINCT","APPROX_COUNT_DISTINCT_ACCUMULATE","APPROX_COUNT_DISTINCT_COMBINE","APPROX_COUNT_DISTINCT_ESTIMATE","APPROX_GEOGRAPHY_INTERSECTS","APPROX_PERCENTILE","ASCII","ASIN","ATAN","ATAN2","AVG","BIN","BINARY","BIT_AND","BIT_COUNT","BIT_OR","BIT_XOR","CAST","CEIL","CEILING","CHAR","CHARACTER_LENGTH","CHAR_LENGTH","CHARSET","COALESCE","COERCIBILITY","COLLATION","COLLECT","CONCAT","CONCAT_WS","CONNECTION_ID","CONV","CONVERT","CONVERT_TZ","COS","COT","COUNT","CUME_DIST","CURDATE","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURTIME","DATABASE","DATE","DATE_ADD","DATEDIFF","DATE_FORMAT","DATE_SUB","DATE_TRUNC","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DECODE","DEFAULT","DEGREES","DENSE_RANK","DIV","DOT_PRODUCT","ELT","EUCLIDEAN_DISTANCE","EXP","EXTRACT","FIELD","FIRST","FIRST_VALUE","FLOOR","FORMAT","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GEOGRAPHY_AREA","GEOGRAPHY_CONTAINS","GEOGRAPHY_DISTANCE","GEOGRAPHY_INTERSECTS","GEOGRAPHY_LATITUDE","GEOGRAPHY_LENGTH","GEOGRAPHY_LONGITUDE","GEOGRAPHY_POINT","GEOGRAPHY_WITHIN_DISTANCE","GEOMETRY_AREA","GEOMETRY_CONTAINS","GEOMETRY_DISTANCE","GEOMETRY_FILTER","GEOMETRY_INTERSECTS","GEOMETRY_LENGTH","GEOMETRY_POINT","GEOMETRY_WITHIN_DISTANCE","GEOMETRY_X","GEOMETRY_Y","GREATEST","GROUPING","GROUP_CONCAT","HEX","HIGHLIGHT","HOUR","ICU_VERSION","IF","IFNULL","INET_ATON","INET_NTOA","INET6_ATON","INET6_NTOA","INITCAP","INSERT","INSTR","INTERVAL","IS","IS NULL","JSON_AGG","JSON_ARRAY_CONTAINS_DOUBLE","JSON_ARRAY_CONTAINS_JSON","JSON_ARRAY_CONTAINS_STRING","JSON_ARRAY_PUSH_DOUBLE","JSON_ARRAY_PUSH_JSON","JSON_ARRAY_PUSH_STRING","JSON_DELETE_KEY","JSON_EXTRACT_DOUBLE","JSON_EXTRACT_JSON","JSON_EXTRACT_STRING","JSON_EXTRACT_BIGINT","JSON_GET_TYPE","JSON_LENGTH","JSON_SET_DOUBLE","JSON_SET_JSON","JSON_SET_STRING","JSON_SPLICE_DOUBLE","JSON_SPLICE_JSON","JSON_SPLICE_STRING","LAG","LAST_DAY","LAST_VALUE","LCASE","LEAD","LEAST","LEFT","LENGTH","LIKE","LN","LOCALTIME","LOCALTIMESTAMP","LOCATE","LOG","LOG10","LOG2","LPAD","LTRIM","MATCH","MAX","MD5","MEDIAN","MICROSECOND","MIN","MINUTE","MOD","MONTH","MONTHNAME","MONTHS_BETWEEN","NOT","NOW","NTH_VALUE","NTILE","NULLIF","OCTET_LENGTH","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","PI","PIVOT","POSITION","POW","POWER","QUARTER","QUOTE","RADIANS","RAND","RANK","REGEXP","REPEAT","REPLACE","REVERSE","RIGHT","RLIKE","ROUND","ROW_COUNT","ROW_NUMBER","RPAD","RTRIM","SCALAR","SCHEMA","SEC_TO_TIME","SHA1","SHA2","SIGMOID","SIGN","SIN","SLEEP","SPLIT","SOUNDEX","SOUNDS LIKE","SOURCE_POS_WAIT","SPACE","SQRT","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DATE","SUBDATE","SUBSTR","SUBSTRING","SUBSTRING_INDEX","SUM","SYS_GUID","TAN","TIME","TIMEDIFF","TIME_BUCKET","TIME_FORMAT","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TIME_TO_SEC","TO_BASE64","TO_CHAR","TO_DAYS","TO_JSON","TO_NUMBER","TO_SECONDS","TO_TIMESTAMP","TRIM","TRUNC","TRUNCATE","UCASE","UNHEX","UNIX_TIMESTAMP","UPDATEXML","UPPER","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","UUID","VALUES","VARIANCE","VAR_POP","VAR_SAMP","VECTOR_SUB","VERSION","WEEK","WEEKDAY","WEEKOFYEAR","YEAR"],WN=S(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),XN=S(["WITH","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [IGNORE] [INTO]","VALUES","REPLACE [INTO]","ON DUPLICATE KEY UPDATE","SET","CREATE [OR REPLACE] [TEMPORARY] PROCEDURE [IF NOT EXISTS]","CREATE [OR REPLACE] [EXTERNAL] FUNCTION"]),Zi=S(["CREATE [ROWSTORE] [REFERENCE | TEMPORARY | GLOBAL TEMPORARY] TABLE [IF NOT EXISTS]"]),fT=S(["CREATE VIEW","UPDATE","DELETE [FROM]","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER [ONLINE] TABLE","ADD [COLUMN]","ADD [UNIQUE] {INDEX | KEY}","DROP [COLUMN]","MODIFY [COLUMN]","CHANGE","RENAME [TO | AS]","TRUNCATE [TABLE]","ADD AGGREGATOR","ADD LEAF","AGGREGATOR SET AS MASTER","ALTER DATABASE","ALTER PIPELINE","ALTER RESOURCE POOL","ALTER USER","ALTER VIEW","ANALYZE TABLE","ATTACH DATABASE","ATTACH LEAF","ATTACH LEAF ALL","BACKUP DATABASE","BINLOG","BOOTSTRAP AGGREGATOR","CACHE INDEX","CALL","CHANGE","CHANGE MASTER TO","CHANGE REPLICATION FILTER","CHANGE REPLICATION SOURCE TO","CHECK BLOB CHECKSUM","CHECK TABLE","CHECKSUM TABLE","CLEAR ORPHAN DATABASES","CLONE","COMMIT","CREATE DATABASE","CREATE GROUP","CREATE INDEX","CREATE LINK","CREATE MILESTONE","CREATE PIPELINE","CREATE RESOURCE POOL","CREATE ROLE","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DETACH DATABASE","DETACH PIPELINE","DROP DATABASE","DROP FUNCTION","DROP INDEX","DROP LINK","DROP PIPELINE","DROP PROCEDURE","DROP RESOURCE POOL","DROP ROLE","DROP USER","DROP VIEW","EXECUTE","EXPLAIN","FLUSH","FORCE","GRANT","HANDLER","HELP","KILL CONNECTION","KILLALL QUERIES","LOAD DATA","LOAD INDEX INTO CACHE","LOAD XML","LOCK INSTANCE FOR BACKUP","LOCK TABLES","MASTER_POS_WAIT","OPTIMIZE TABLE","PREPARE","PURGE BINARY LOGS","REBALANCE PARTITIONS","RELEASE SAVEPOINT","REMOVE AGGREGATOR","REMOVE LEAF","REPAIR TABLE","REPLACE","REPLICATE DATABASE","RESET","RESET MASTER","RESET PERSIST","RESET REPLICA","RESET SLAVE","RESTART","RESTORE DATABASE","RESTORE REDUNDANCY","REVOKE","ROLLBACK","ROLLBACK TO SAVEPOINT","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET NAMES","SET PASSWORD","SET RESOURCE GROUP","SET ROLE","SET TRANSACTION","SHOW","SHOW CHARACTER SET","SHOW COLLATION","SHOW COLUMNS","SHOW CREATE DATABASE","SHOW CREATE FUNCTION","SHOW CREATE PIPELINE","SHOW CREATE PROCEDURE","SHOW CREATE TABLE","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINES","SHOW ERRORS","SHOW FUNCTION CODE","SHOW FUNCTION STATUS","SHOW GRANTS","SHOW INDEX","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PLUGINS","SHOW PRIVILEGES","SHOW PROCEDURE CODE","SHOW PROCEDURE STATUS","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW RELAYLOG EVENTS","SHOW REPLICA STATUS","SHOW REPLICAS","SHOW SLAVE","SHOW SLAVE HOSTS","SHOW STATUS","SHOW TABLE STATUS","SHOW TABLES","SHOW VARIABLES","SHOW WARNINGS","SHUTDOWN","SNAPSHOT DATABASE","SOURCE_POS_WAIT","START GROUP_REPLICATION","START PIPELINE","START REPLICA","START SLAVE","START TRANSACTION","STOP GROUP_REPLICATION","STOP PIPELINE","STOP REPLICA","STOP REPLICATING","STOP SLAVE","TEST PIPELINE","UNLOCK INSTANCE","UNLOCK TABLES","USE","XA","ITERATE","LEAVE","LOOP","REPEAT","RETURN","WHILE"]),xN=S(["UNION [ALL | DISTINCT]","EXCEPT","INTERSECT","MINUS"]),KN=S(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),JN=S(["ON DELETE","ON UPDATE","CHARACTER SET","{ROWS | RANGE} BETWEEN","IDENTIFIED BY"]),$N={name:"singlestoredb",tokenizerOptions:{reservedSelect:WN,reservedClauses:[...XN,...Zi,...fT],reservedSetOperations:xN,reservedJoins:KN,reservedPhrases:JN,reservedKeywords:vN,reservedDataTypes:VN,reservedFunctionNames:wN,stringTypes:['""-qq-bs',"''-qq-bs",{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_$]+"},{quote:"``",prefixes:["@"],requirePrefix:!0}],lineCommentTypes:["--","#"],operators:[":=","&","|","^","~","<<",">>","<=>","&&","||","::","::$","::%",":>","!:>","*.*"],postProcess:gr},formatOptions:{alwaysDenseOperators:["::","::$","::%"],onelineClauses:[...Zi,...fT],tabularOnelineClauses:fT}},kN=["ABS","ACOS","ACOSH","ADD_MONTHS","ALL_USER_NAMES","ANY_VALUE","APPROX_COUNT_DISTINCT","APPROX_PERCENTILE","APPROX_PERCENTILE_ACCUMULATE","APPROX_PERCENTILE_COMBINE","APPROX_PERCENTILE_ESTIMATE","APPROX_TOP_K","APPROX_TOP_K_ACCUMULATE","APPROX_TOP_K_COMBINE","APPROX_TOP_K_ESTIMATE","APPROXIMATE_JACCARD_INDEX","APPROXIMATE_SIMILARITY","ARRAY_AGG","ARRAY_APPEND","ARRAY_CAT","ARRAY_COMPACT","ARRAY_CONSTRUCT","ARRAY_CONSTRUCT_COMPACT","ARRAY_CONTAINS","ARRAY_INSERT","ARRAY_INTERSECTION","ARRAY_POSITION","ARRAY_PREPEND","ARRAY_SIZE","ARRAY_SLICE","ARRAY_TO_STRING","ARRAY_UNION_AGG","ARRAY_UNIQUE_AGG","ARRAYS_OVERLAP","AS_ARRAY","AS_BINARY","AS_BOOLEAN","AS_CHAR","AS_VARCHAR","AS_DATE","AS_DECIMAL","AS_NUMBER","AS_DOUBLE","AS_REAL","AS_INTEGER","AS_OBJECT","AS_TIME","AS_TIMESTAMP_LTZ","AS_TIMESTAMP_NTZ","AS_TIMESTAMP_TZ","ASCII","ASIN","ASINH","ATAN","ATAN2","ATANH","AUTO_REFRESH_REGISTRATION_HISTORY","AUTOMATIC_CLUSTERING_HISTORY","AVG","BASE64_DECODE_BINARY","BASE64_DECODE_STRING","BASE64_ENCODE","BIT_LENGTH","BITAND","BITAND_AGG","BITMAP_BIT_POSITION","BITMAP_BUCKET_NUMBER","BITMAP_CONSTRUCT_AGG","BITMAP_COUNT","BITMAP_OR_AGG","BITNOT","BITOR","BITOR_AGG","BITSHIFTLEFT","BITSHIFTRIGHT","BITXOR","BITXOR_AGG","BOOLAND","BOOLAND_AGG","BOOLNOT","BOOLOR","BOOLOR_AGG","BOOLXOR","BOOLXOR_AGG","BUILD_SCOPED_FILE_URL","BUILD_STAGE_FILE_URL","CASE","CAST","CBRT","CEIL","CHARINDEX","CHECK_JSON","CHECK_XML","CHR","CHAR","COALESCE","COLLATE","COLLATION","COMPLETE_TASK_GRAPHS","COMPRESS","CONCAT","CONCAT_WS","CONDITIONAL_CHANGE_EVENT","CONDITIONAL_TRUE_EVENT","CONTAINS","CONVERT_TIMEZONE","COPY_HISTORY","CORR","COS","COSH","COT","COUNT","COUNT_IF","COVAR_POP","COVAR_SAMP","CUME_DIST","CURRENT_ACCOUNT","CURRENT_AVAILABLE_ROLES","CURRENT_CLIENT","CURRENT_DATABASE","CURRENT_DATE","CURRENT_IP_ADDRESS","CURRENT_REGION","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_SECONDARY_ROLES","CURRENT_SESSION","CURRENT_STATEMENT","CURRENT_TASK_GRAPHS","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TRANSACTION","CURRENT_USER","CURRENT_VERSION","CURRENT_WAREHOUSE","DATA_TRANSFER_HISTORY","DATABASE_REFRESH_HISTORY","DATABASE_REFRESH_PROGRESS","DATABASE_REFRESH_PROGRESS_BY_JOB","DATABASE_STORAGE_USAGE_HISTORY","DATE_FROM_PARTS","DATE_PART","DATE_TRUNC","DATEADD","DATEDIFF","DAYNAME","DECODE","DECOMPRESS_BINARY","DECOMPRESS_STRING","DECRYPT","DECRYPT_RAW","DEGREES","DENSE_RANK","DIV0","EDITDISTANCE","ENCRYPT","ENCRYPT_RAW","ENDSWITH","EQUAL_NULL","EXP","EXPLAIN_JSON","EXTERNAL_FUNCTIONS_HISTORY","EXTERNAL_TABLE_FILES","EXTERNAL_TABLE_FILE_REGISTRATION_HISTORY","EXTRACT","EXTRACT_SEMANTIC_CATEGORIES","FACTORIAL","FIRST_VALUE","FLATTEN","FLOOR","GENERATE_COLUMN_DESCRIPTION","GENERATOR","GET","GET_ABSOLUTE_PATH","GET_DDL","GET_IGNORE_CASE","GET_OBJECT_REFERENCES","GET_PATH","GET_PRESIGNED_URL","GET_RELATIVE_PATH","GET_STAGE_LOCATION","GETBIT","GREATEST","GROUPING","GROUPING_ID","HASH","HASH_AGG","HAVERSINE","HEX_DECODE_BINARY","HEX_DECODE_STRING","HEX_ENCODE","HLL","HLL_ACCUMULATE","HLL_COMBINE","HLL_ESTIMATE","HLL_EXPORT","HLL_IMPORT","HOUR","MINUTE","SECOND","IFF","IFNULL","ILIKE","ILIKE ANY","INFER_SCHEMA","INITCAP","INSERT","INVOKER_ROLE","INVOKER_SHARE","IS_ARRAY","IS_BINARY","IS_BOOLEAN","IS_CHAR","IS_VARCHAR","IS_DATE","IS_DATE_VALUE","IS_DECIMAL","IS_DOUBLE","IS_REAL","IS_GRANTED_TO_INVOKER_ROLE","IS_INTEGER","IS_NULL_VALUE","IS_OBJECT","IS_ROLE_IN_SESSION","IS_TIME","IS_TIMESTAMP_LTZ","IS_TIMESTAMP_NTZ","IS_TIMESTAMP_TZ","JAROWINKLER_SIMILARITY","JSON_EXTRACT_PATH_TEXT","KURTOSIS","LAG","LAST_DAY","LAST_QUERY_ID","LAST_TRANSACTION","LAST_VALUE","LEAD","LEAST","LEFT","LENGTH","LEN","LIKE","LIKE ALL","LIKE ANY","LISTAGG","LN","LOCALTIME","LOCALTIMESTAMP","LOG","LOGIN_HISTORY","LOGIN_HISTORY_BY_USER","LOWER","LPAD","LTRIM","MATERIALIZED_VIEW_REFRESH_HISTORY","MD5","MD5_HEX","MD5_BINARY","MD5_NUMBER \u2014 Obsoleted","MD5_NUMBER_LOWER64","MD5_NUMBER_UPPER64","MEDIAN","MIN","MAX","MINHASH","MINHASH_COMBINE","MOD","MODE","MONTHNAME","MONTHS_BETWEEN","NEXT_DAY","NORMAL","NTH_VALUE","NTILE","NULLIF","NULLIFZERO","NVL","NVL2","OBJECT_AGG","OBJECT_CONSTRUCT","OBJECT_CONSTRUCT_KEEP_NULL","OBJECT_DELETE","OBJECT_INSERT","OBJECT_KEYS","OBJECT_PICK","OCTET_LENGTH","PARSE_IP","PARSE_JSON","PARSE_URL","PARSE_XML","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","PI","PIPE_USAGE_HISTORY","POLICY_CONTEXT","POLICY_REFERENCES","POSITION","POW","POWER","PREVIOUS_DAY","QUERY_ACCELERATION_HISTORY","QUERY_HISTORY","QUERY_HISTORY_BY_SESSION","QUERY_HISTORY_BY_USER","QUERY_HISTORY_BY_WAREHOUSE","RADIANS","RANDOM","RANDSTR","RANK","RATIO_TO_REPORT","REGEXP","REGEXP_COUNT","REGEXP_INSTR","REGEXP_LIKE","REGEXP_REPLACE","REGEXP_SUBSTR","REGEXP_SUBSTR_ALL","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","REGR_VALX","REGR_VALY","REPEAT","REPLACE","REPLICATION_GROUP_REFRESH_HISTORY","REPLICATION_GROUP_REFRESH_PROGRESS","REPLICATION_GROUP_REFRESH_PROGRESS_BY_JOB","REPLICATION_GROUP_USAGE_HISTORY","REPLICATION_USAGE_HISTORY","REST_EVENT_HISTORY","RESULT_SCAN","REVERSE","RIGHT","RLIKE","ROUND","ROW_NUMBER","RPAD","RTRIM","RTRIMMED_LENGTH","SEARCH_OPTIMIZATION_HISTORY","SEQ1","SEQ2","SEQ4","SEQ8","SERVERLESS_TASK_HISTORY","SHA1","SHA1_HEX","SHA1_BINARY","SHA2","SHA2_HEX","SHA2_BINARY","SIGN","SIN","SINH","SKEW","SOUNDEX","SPACE","SPLIT","SPLIT_PART","SPLIT_TO_TABLE","SQRT","SQUARE","ST_AREA","ST_ASEWKB","ST_ASEWKT","ST_ASGEOJSON","ST_ASWKB","ST_ASBINARY","ST_ASWKT","ST_ASTEXT","ST_AZIMUTH","ST_CENTROID","ST_COLLECT","ST_CONTAINS","ST_COVEREDBY","ST_COVERS","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_DWITHIN","ST_ENDPOINT","ST_ENVELOPE","ST_GEOGFROMGEOHASH","ST_GEOGPOINTFROMGEOHASH","ST_GEOGRAPHYFROMWKB","ST_GEOGRAPHYFROMWKT","ST_GEOHASH","ST_GEOMETRYFROMWKB","ST_GEOMETRYFROMWKT","ST_HAUSDORFFDISTANCE","ST_INTERSECTION","ST_INTERSECTS","ST_LENGTH","ST_MAKEGEOMPOINT","ST_GEOM_POINT","ST_MAKELINE","ST_MAKEPOINT","ST_POINT","ST_MAKEPOLYGON","ST_POLYGON","ST_NPOINTS","ST_NUMPOINTS","ST_PERIMETER","ST_POINTN","ST_SETSRID","ST_SIMPLIFY","ST_SRID","ST_STARTPOINT","ST_SYMDIFFERENCE","ST_UNION","ST_WITHIN","ST_X","ST_XMAX","ST_XMIN","ST_Y","ST_YMAX","ST_YMIN","STAGE_DIRECTORY_FILE_REGISTRATION_HISTORY","STAGE_STORAGE_USAGE_HISTORY","STARTSWITH","STDDEV","STDDEV_POP","STDDEV_SAMP","STRIP_NULL_VALUE","STRTOK","STRTOK_SPLIT_TO_TABLE","STRTOK_TO_ARRAY","SUBSTR","SUBSTRING","SUM","SYSDATE","SYSTEM$ABORT_SESSION","SYSTEM$ABORT_TRANSACTION","SYSTEM$AUTHORIZE_PRIVATELINK","SYSTEM$AUTHORIZE_STAGE_PRIVATELINK_ACCESS","SYSTEM$BEHAVIOR_CHANGE_BUNDLE_STATUS","SYSTEM$CANCEL_ALL_QUERIES","SYSTEM$CANCEL_QUERY","SYSTEM$CLUSTERING_DEPTH","SYSTEM$CLUSTERING_INFORMATION","SYSTEM$CLUSTERING_RATIO ","SYSTEM$CURRENT_USER_TASK_NAME","SYSTEM$DATABASE_REFRESH_HISTORY ","SYSTEM$DATABASE_REFRESH_PROGRESS","SYSTEM$DATABASE_REFRESH_PROGRESS_BY_JOB ","SYSTEM$DISABLE_BEHAVIOR_CHANGE_BUNDLE","SYSTEM$DISABLE_DATABASE_REPLICATION","SYSTEM$ENABLE_BEHAVIOR_CHANGE_BUNDLE","SYSTEM$ESTIMATE_QUERY_ACCELERATION","SYSTEM$ESTIMATE_SEARCH_OPTIMIZATION_COSTS","SYSTEM$EXPLAIN_JSON_TO_TEXT","SYSTEM$EXPLAIN_PLAN_JSON","SYSTEM$EXTERNAL_TABLE_PIPE_STATUS","SYSTEM$GENERATE_SAML_CSR","SYSTEM$GENERATE_SCIM_ACCESS_TOKEN","SYSTEM$GET_AWS_SNS_IAM_POLICY","SYSTEM$GET_PREDECESSOR_RETURN_VALUE","SYSTEM$GET_PRIVATELINK","SYSTEM$GET_PRIVATELINK_AUTHORIZED_ENDPOINTS","SYSTEM$GET_PRIVATELINK_CONFIG","SYSTEM$GET_SNOWFLAKE_PLATFORM_INFO","SYSTEM$GET_TAG","SYSTEM$GET_TAG_ALLOWED_VALUES","SYSTEM$GET_TAG_ON_CURRENT_COLUMN","SYSTEM$GET_TAG_ON_CURRENT_TABLE","SYSTEM$GLOBAL_ACCOUNT_SET_PARAMETER","SYSTEM$LAST_CHANGE_COMMIT_TIME","SYSTEM$LINK_ACCOUNT_OBJECTS_BY_NAME","SYSTEM$MIGRATE_SAML_IDP_REGISTRATION","SYSTEM$PIPE_FORCE_RESUME","SYSTEM$PIPE_STATUS","SYSTEM$REVOKE_PRIVATELINK","SYSTEM$REVOKE_STAGE_PRIVATELINK_ACCESS","SYSTEM$SET_RETURN_VALUE","SYSTEM$SHOW_OAUTH_CLIENT_SECRETS","SYSTEM$STREAM_GET_TABLE_TIMESTAMP","SYSTEM$STREAM_HAS_DATA","SYSTEM$TASK_DEPENDENTS_ENABLE","SYSTEM$TYPEOF","SYSTEM$USER_TASK_CANCEL_ONGOING_EXECUTIONS","SYSTEM$VERIFY_EXTERNAL_OAUTH_TOKEN","SYSTEM$WAIT","SYSTEM$WHITELIST","SYSTEM$WHITELIST_PRIVATELINK","TAG_REFERENCES","TAG_REFERENCES_ALL_COLUMNS","TAG_REFERENCES_WITH_LINEAGE","TAN","TANH","TASK_DEPENDENTS","TASK_HISTORY","TIME_FROM_PARTS","TIME_SLICE","TIMEADD","TIMEDIFF","TIMESTAMP_FROM_PARTS","TIMESTAMPADD","TIMESTAMPDIFF","TO_ARRAY","TO_BINARY","TO_BOOLEAN","TO_CHAR","TO_VARCHAR","TO_DATE","DATE","TO_DECIMAL","TO_NUMBER","TO_NUMERIC","TO_DOUBLE","TO_GEOGRAPHY","TO_GEOMETRY","TO_JSON","TO_OBJECT","TO_TIME","TIME","TO_TIMESTAMP","TO_TIMESTAMP_LTZ","TO_TIMESTAMP_NTZ","TO_TIMESTAMP_TZ","TO_VARIANT","TO_XML","TRANSLATE","TRIM","TRUNCATE","TRUNC","TRUNC","TRY_BASE64_DECODE_BINARY","TRY_BASE64_DECODE_STRING","TRY_CAST","TRY_HEX_DECODE_BINARY","TRY_HEX_DECODE_STRING","TRY_PARSE_JSON","TRY_TO_BINARY","TRY_TO_BOOLEAN","TRY_TO_DATE","TRY_TO_DECIMAL","TRY_TO_NUMBER","TRY_TO_NUMERIC","TRY_TO_DOUBLE","TRY_TO_GEOGRAPHY","TRY_TO_GEOMETRY","TRY_TO_TIME","TRY_TO_TIMESTAMP","TRY_TO_TIMESTAMP_LTZ","TRY_TO_TIMESTAMP_NTZ","TRY_TO_TIMESTAMP_TZ","TYPEOF","UNICODE","UNIFORM","UPPER","UUID_STRING","VALIDATE","VALIDATE_PIPE_LOAD","VAR_POP","VAR_SAMP","VARIANCE","VARIANCE_SAMP","VARIANCE_POP","WAREHOUSE_LOAD_HISTORY","WAREHOUSE_METERING_HISTORY","WIDTH_BUCKET","XMLGET","YEAR","YEAROFWEEK","YEAROFWEEKISO","DAY","DAYOFMONTH","DAYOFWEEK","DAYOFWEEKISO","DAYOFYEAR","WEEK","WEEK","WEEKOFYEAR","WEEKISO","MONTH","QUARTER","ZEROIFNULL","ZIPF"],qN=["ACCOUNT","ALL","ALTER","AND","ANY","AS","BETWEEN","BY","CASE","CAST","CHECK","COLUMN","CONNECT","CONNECTION","CONSTRAINT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","DATABASE","DELETE","DISTINCT","DROP","ELSE","EXISTS","FALSE","FOLLOWING","FOR","FROM","FULL","GRANT","GROUP","GSCLUSTER","HAVING","ILIKE","IN","INCREMENT","INNER","INSERT","INTERSECT","INTO","IS","ISSUE","JOIN","LATERAL","LEFT","LIKE","LOCALTIME","LOCALTIMESTAMP","MINUS","NATURAL","NOT","NULL","OF","ON","OR","ORDER","ORGANIZATION","QUALIFY","REGEXP","REVOKE","RIGHT","RLIKE","ROW","ROWS","SAMPLE","SCHEMA","SELECT","SET","SOME","START","TABLE","TABLESAMPLE","THEN","TO","TRIGGER","TRUE","TRY_CAST","UNION","UNIQUE","UPDATE","USING","VALUES","VIEW","WHEN","WHENEVER","WHERE","WITH","COMMENT"],QN=["NUMBER","DECIMAL","NUMERIC","INT","INTEGER","BIGINT","SMALLINT","TINYINT","BYTEINT","FLOAT","FLOAT4","FLOAT8","DOUBLE","DOUBLE PRECISION","REAL","VARCHAR","CHAR","CHARACTER","STRING","TEXT","BINARY","VARBINARY","BOOLEAN","DATE","DATETIME","TIME","TIMESTAMP","TIMESTAMP_LTZ","TIMESTAMP_NTZ","TIMESTAMP","TIMESTAMP_TZ","VARIANT","OBJECT","ARRAY","GEOGRAPHY","GEOMETRY"],jN=S(["SELECT [ALL | DISTINCT]"]),ZN=S(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","QUALIFY","LIMIT","OFFSET","FETCH [FIRST | NEXT]","INSERT [OVERWRITE] [ALL INTO | INTO | ALL | FIRST]","{THEN | ELSE} INTO","VALUES","SET","CLUSTER BY","[WITH] {MASKING POLICY | TAG | ROW ACCESS POLICY}","COPY GRANTS","USING TEMPLATE","MERGE INTO","WHEN MATCHED [AND]","THEN {UPDATE SET | DELETE}","WHEN NOT MATCHED THEN INSERT"]),zi=S(["CREATE [OR REPLACE] [VOLATILE] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [LOCAL | GLOBAL] {TEMP|TEMPORARY} TABLE [IF NOT EXISTS]"]),dT=S(["CREATE [OR REPLACE] [SECURE] [RECURSIVE] VIEW [IF NOT EXISTS]","UPDATE","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS]","RENAME TO","SWAP WITH","[SUSPEND | RESUME] RECLUSTER","DROP CLUSTERING KEY","ADD [COLUMN]","RENAME COLUMN","{ALTER | MODIFY} [COLUMN]","DROP [COLUMN]","{ADD | ALTER | MODIFY | DROP} [CONSTRAINT]","RENAME CONSTRAINT","{ADD | DROP} SEARCH OPTIMIZATION","{SET | UNSET} TAG","{ADD | DROP} ROW ACCESS POLICY","DROP ALL ROW ACCESS POLICIES","{SET | DROP} DEFAULT","{SET | DROP} NOT NULL","[SET DATA] TYPE","UNSET COMMENT","{SET | UNSET} MASKING POLICY","TRUNCATE [TABLE] [IF EXISTS]","ALTER ACCOUNT","ALTER API INTEGRATION","ALTER CONNECTION","ALTER DATABASE","ALTER EXTERNAL TABLE","ALTER FAILOVER GROUP","ALTER FILE FORMAT","ALTER FUNCTION","ALTER INTEGRATION","ALTER MASKING POLICY","ALTER MATERIALIZED VIEW","ALTER NETWORK POLICY","ALTER NOTIFICATION INTEGRATION","ALTER PIPE","ALTER PROCEDURE","ALTER REPLICATION GROUP","ALTER RESOURCE MONITOR","ALTER ROLE","ALTER ROW ACCESS POLICY","ALTER SCHEMA","ALTER SECURITY INTEGRATION","ALTER SEQUENCE","ALTER SESSION","ALTER SESSION POLICY","ALTER SHARE","ALTER STAGE","ALTER STORAGE INTEGRATION","ALTER STREAM","ALTER TAG","ALTER TASK","ALTER USER","ALTER VIEW","ALTER WAREHOUSE","BEGIN","CALL","COMMIT","COPY INTO","CREATE ACCOUNT","CREATE API INTEGRATION","CREATE CONNECTION","CREATE DATABASE","CREATE EXTERNAL FUNCTION","CREATE EXTERNAL TABLE","CREATE FAILOVER GROUP","CREATE FILE FORMAT","CREATE FUNCTION","CREATE INTEGRATION","CREATE MANAGED ACCOUNT","CREATE MASKING POLICY","CREATE MATERIALIZED VIEW","CREATE NETWORK POLICY","CREATE NOTIFICATION INTEGRATION","CREATE PIPE","CREATE PROCEDURE","CREATE REPLICATION GROUP","CREATE RESOURCE MONITOR","CREATE ROLE","CREATE ROW ACCESS POLICY","CREATE SCHEMA","CREATE SECURITY INTEGRATION","CREATE SEQUENCE","CREATE SESSION POLICY","CREATE SHARE","CREATE STAGE","CREATE STORAGE INTEGRATION","CREATE STREAM","CREATE TAG","CREATE TASK","CREATE USER","CREATE WAREHOUSE","DELETE","DESCRIBE DATABASE","DESCRIBE EXTERNAL TABLE","DESCRIBE FILE FORMAT","DESCRIBE FUNCTION","DESCRIBE INTEGRATION","DESCRIBE MASKING POLICY","DESCRIBE MATERIALIZED VIEW","DESCRIBE NETWORK POLICY","DESCRIBE PIPE","DESCRIBE PROCEDURE","DESCRIBE RESULT","DESCRIBE ROW ACCESS POLICY","DESCRIBE SCHEMA","DESCRIBE SEQUENCE","DESCRIBE SESSION POLICY","DESCRIBE SHARE","DESCRIBE STAGE","DESCRIBE STREAM","DESCRIBE TABLE","DESCRIBE TASK","DESCRIBE TRANSACTION","DESCRIBE USER","DESCRIBE VIEW","DESCRIBE WAREHOUSE","DROP CONNECTION","DROP DATABASE","DROP EXTERNAL TABLE","DROP FAILOVER GROUP","DROP FILE FORMAT","DROP FUNCTION","DROP INTEGRATION","DROP MANAGED ACCOUNT","DROP MASKING POLICY","DROP MATERIALIZED VIEW","DROP NETWORK POLICY","DROP PIPE","DROP PROCEDURE","DROP REPLICATION GROUP","DROP RESOURCE MONITOR","DROP ROLE","DROP ROW ACCESS POLICY","DROP SCHEMA","DROP SEQUENCE","DROP SESSION POLICY","DROP SHARE","DROP STAGE","DROP STREAM","DROP TAG","DROP TASK","DROP USER","DROP VIEW","DROP WAREHOUSE","EXECUTE IMMEDIATE","EXECUTE TASK","EXPLAIN","GET","GRANT OWNERSHIP","GRANT ROLE","INSERT","LIST","MERGE","PUT","REMOVE","REVOKE ROLE","ROLLBACK","SHOW COLUMNS","SHOW CONNECTIONS","SHOW DATABASES","SHOW DATABASES IN FAILOVER GROUP","SHOW DATABASES IN REPLICATION GROUP","SHOW DELEGATED AUTHORIZATIONS","SHOW EXTERNAL FUNCTIONS","SHOW EXTERNAL TABLES","SHOW FAILOVER GROUPS","SHOW FILE FORMATS","SHOW FUNCTIONS","SHOW GLOBAL ACCOUNTS","SHOW GRANTS","SHOW INTEGRATIONS","SHOW LOCKS","SHOW MANAGED ACCOUNTS","SHOW MASKING POLICIES","SHOW MATERIALIZED VIEWS","SHOW NETWORK POLICIES","SHOW OBJECTS","SHOW ORGANIZATION ACCOUNTS","SHOW PARAMETERS","SHOW PIPES","SHOW PRIMARY KEYS","SHOW PROCEDURES","SHOW REGIONS","SHOW REPLICATION ACCOUNTS","SHOW REPLICATION DATABASES","SHOW REPLICATION GROUPS","SHOW RESOURCE MONITORS","SHOW ROLES","SHOW ROW ACCESS POLICIES","SHOW SCHEMAS","SHOW SEQUENCES","SHOW SESSION POLICIES","SHOW SHARES","SHOW SHARES IN FAILOVER GROUP","SHOW SHARES IN REPLICATION GROUP","SHOW STAGES","SHOW STREAMS","SHOW TABLES","SHOW TAGS","SHOW TASKS","SHOW TRANSACTIONS","SHOW USER FUNCTIONS","SHOW USERS","SHOW VARIABLES","SHOW VIEWS","SHOW WAREHOUSES","TRUNCATE MATERIALIZED VIEW","UNDROP DATABASE","UNDROP SCHEMA","UNDROP TABLE","UNDROP TAG","UNSET","USE DATABASE","USE ROLE","USE SCHEMA","USE SECONDARY ROLES","USE WAREHOUSE"]),zN=S(["UNION [ALL]","MINUS","EXCEPT","INTERSECT"]),el=S(["[INNER] JOIN","[NATURAL] {LEFT | RIGHT | FULL} [OUTER] JOIN","{CROSS | NATURAL} JOIN"]),tl=S(["{ROWS | RANGE} BETWEEN","ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]"]),El={name:"snowflake",tokenizerOptions:{reservedSelect:jN,reservedClauses:[...ZN,...zi,...dT],reservedSetOperations:zN,reservedJoins:el,reservedPhrases:tl,reservedKeywords:qN,reservedDataTypes:QN,reservedFunctionNames:kN,stringTypes:["$$","''-qq-bs"],identTypes:['""-qq'],variableTypes:[{regex:"[$][1-9]\\d*"},{regex:"[$][_a-zA-Z][_a-zA-Z0-9$]*"}],extraParens:["[]"],identChars:{rest:"$"},lineCommentTypes:["--","//"],operators:["%","::","||","=>"],propertyAccessOperators:[":"]},formatOptions:{alwaysDenseOperators:["::"],onelineClauses:[...zi,...dT],tabularOnelineClauses:dT}},lE=t=>t[t.length-1],Co=t=>t.sort((e,E)=>E.length-e.length||e.localeCompare(E)),mr=t=>t.replace(/\s+/gu," "),PT=t=>/\n/.test(t),Fe=t=>t.replace(/[.*+?^${}()|[\]\\]/gu,"\\$&"),eo=/\s+/uy,ft=t=>new RegExp(`(?:${t})`,"uy"),rl=t=>t.split("").map(e=>/ /gu.test(e)?"\\s+":`[${e.toUpperCase()}${e.toLowerCase()}]`).join(""),nl=t=>t+"(?:-"+t+")*",Tl=({prefixes:t,requirePrefix:e})=>`(?:${t.map(rl).join("|")}${e?"":"|"})`,sl=t=>new RegExp(`(?:${t.map(Fe).join("|")}).*?(?=\r
|\r|
|$)`,"uy"),to=(t,e=[])=>{let E=t==="open"?0:1,r=["()",...e].map(n=>n[E]);return ft(r.map(Fe).join("|"))},Eo=t=>ft(`${Co(t).map(Fe).join("|")}`),il=({rest:t,dashes:e})=>t||e?`(?![${t||""}${e?"-":""}])`:"",rt=(t,e={})=>{if(t.length===0)return/^\b$/u;let E=il(e),r=Co(t).map(Fe).join("|").replace(/ /gu,"\\s+");return new RegExp(`(?:${r})${E}\\b`,"iuy")},DT=(t,e)=>{if(!t.length)return;let E=t.map(Fe).join("|");return ft(`(?:${E})(?:${e})`)},ol=()=>{let t={"<":">","[":"]","(":")","{":"}"},e="{left}(?:(?!{right}').)*?{right}",E=Object.entries(t).map(([s,o])=>e.replace(/{left}/g,Fe(s)).replace(/{right}/g,Fe(o))),r=Fe(Object.keys(t).join(""));return`[Qq]'(?:${String.raw`(?<tag>[^\s${r}])(?:(?!\k<tag>').)*?\k<tag>`}|${E.join("|")})'`},ro={"``":"(?:`[^`]*`)+","[]":String.raw`(?:\[[^\]]*\])(?:\][^\]]*\])*`,'""-qq':String.raw`(?:"[^"]*")+`,'""-bs':String.raw`(?:"[^"\\]*(?:\\.[^"\\]*)*")`,'""-qq-bs':String.raw`(?:"[^"\\]*(?:\\.[^"\\]*)*")+`,'""-raw':String.raw`(?:"[^"]*")`,"''-qq":String.raw`(?:'[^']*')+`,"''-bs":String.raw`(?:'[^'\\]*(?:\\.[^'\\]*)*')`,"''-qq-bs":String.raw`(?:'[^'\\]*(?:\\.[^'\\]*)*')+`,"''-raw":String.raw`(?:'[^']*')`,$$:String.raw`(?<tag>\$\w*\$)[\s\S]*?\k<tag>`,"'''..'''":String.raw`'''[^\\]*?(?:\\.[^\\]*?)*?'''`,'""".."""':String.raw`"""[^\\]*?(?:\\.[^\\]*?)*?"""`,"{}":String.raw`(?:\{[^\}]*\})`,"q''":ol()},_o=t=>typeof t=="string"?ro[t]:"regex"in t?t.regex:Tl(t)+ro[t.quote],Rl=t=>ft(t.map(e=>"regex"in e?e.regex:_o(e)).join("|")),Lo=t=>t.map(_o).join("|"),no=t=>ft(Lo(t)),Al=(t={})=>ft(co(t)),co=({first:t,rest:e,dashes:E,allowFirstCharNumber:r}={})=>{let n="\\p{Alphabetic}\\p{Mark}_",T="\\p{Decimal_Number}",s=Fe(t??""),o=Fe(e??""),i=r?`[${n}${T}${s}][${n}${T}${o}]*`:`[${n}${s}][${n}${T}${o}]*`;return E?nl(i):i};function uo(t,e){let E=t.slice(0,e).split(/\n/);return{line:E.length,col:E[E.length-1].length+1}}var al=class{constructor(t,e){this.rules=t,this.dialectName=e,this.input="",this.index=0}tokenize(t){this.input=t,this.index=0;let e=[],E;for(;this.index<this.input.length;){let r=this.getWhitespace();if(this.index<this.input.length){if(E=this.getNextToken(),!E)throw this.createParseError();e.push(ie(Ee({},E),{precedingWhitespace:r}))}}return e}createParseError(){let t=this.input.slice(this.index,this.index+10),{line:e,col:E}=uo(this.input,this.index);return new Error(`Parse error: Unexpected "${t}" at line ${e} column ${E}.
${this.dialectInfo()}`)}dialectInfo(){return this.dialectName==="sql"?`This likely happens because you're using the default "sql" dialect.
If possible, please select a more specific dialect (like sqlite, postgresql, etc).`:`SQL dialect used: "${this.dialectName}".`}getWhitespace(){eo.lastIndex=this.index;let t=eo.exec(this.input);if(t)return this.index+=t[0].length,t[0]}getNextToken(){for(let t of this.rules){let e=this.match(t);if(e)return e}}match(t){t.regex.lastIndex=this.index;let e=t.regex.exec(this.input);if(e){let E=e[0],r={type:t.type,raw:E,text:t.text?t.text(E):E,start:this.index};return t.key&&(r.key=t.key(E)),this.index+=E.length,r}}},To=/\/\*/uy,Sl=/[\s\S]/uy,Ol=/\*\//uy,Il=class{constructor(){this.lastIndex=0}exec(t){let e="",E,r=0;if(E=this.matchSection(To,t))e+=E,r++;else return null;for(;r>0;)if(E=this.matchSection(To,t))e+=E,r++;else if(E=this.matchSection(Ol,t))e+=E,r--;else if(E=this.matchSection(Sl,t))e+=E;else return null;return[e]}matchSection(t,e){t.lastIndex=this.lastIndex;let E=t.exec(e);return E&&(this.lastIndex+=E[0].length),E?E[0]:null}},Nl=class{constructor(t,e){this.cfg=t,this.dialectName=e,this.rulesBeforeParams=this.buildRulesBeforeParams(t),this.rulesAfterParams=this.buildRulesAfterParams(t)}tokenize(t,e){let E=[...this.rulesBeforeParams,...this.buildParamRules(this.cfg,e),...this.rulesAfterParams],r=new al(E,this.dialectName).tokenize(t);return this.cfg.postProcess?this.cfg.postProcess(r):r}buildRulesBeforeParams(t){var e,E;return this.validRules([{type:"BLOCK_COMMENT",regex:/(\/\* *sql-formatter-disable *\*\/[\s\S]*?(?:\/\* *sql-formatter-enable *\*\/|$))/uy},{type:"BLOCK_COMMENT",regex:t.nestedBlockComments?new Il:/(\/\*[^]*?\*\/)/uy},{type:"LINE_COMMENT",regex:sl((e=t.lineCommentTypes)!=null?e:["--"])},{type:"QUOTED_IDENTIFIER",regex:no(t.identTypes)},{type:"NUMBER",regex:/(?:0x[0-9a-fA-F]+|0b[01]+|(?:-\s*)?[0-9]+(?:\.[0-9]*)?(?:[eE][-+]?[0-9]+(?:\.[0-9]+)?)?)(?![\w\p{Alphabetic}])/uy},{type:"RESERVED_PHRASE",regex:rt((E=t.reservedPhrases)!=null?E:[],t.identChars),text:j},{type:"CASE",regex:/CASE\b/iuy,text:j},{type:"END",regex:/END\b/iuy,text:j},{type:"BETWEEN",regex:/BETWEEN\b/iuy,text:j},{type:"LIMIT",regex:t.reservedClauses.includes("LIMIT")?/LIMIT\b/iuy:void 0,text:j},{type:"RESERVED_CLAUSE",regex:rt(t.reservedClauses,t.identChars),text:j},{type:"RESERVED_SELECT",regex:rt(t.reservedSelect,t.identChars),text:j},{type:"RESERVED_SET_OPERATION",regex:rt(t.reservedSetOperations,t.identChars),text:j},{type:"WHEN",regex:/WHEN\b/iuy,text:j},{type:"ELSE",regex:/ELSE\b/iuy,text:j},{type:"THEN",regex:/THEN\b/iuy,text:j},{type:"RESERVED_JOIN",regex:rt(t.reservedJoins,t.identChars),text:j},{type:"AND",regex:/AND\b/iuy,text:j},{type:"OR",regex:/OR\b/iuy,text:j},{type:"XOR",regex:t.supportsXor?/XOR\b/iuy:void 0,text:j},{type:"RESERVED_FUNCTION_NAME",regex:rt(t.reservedFunctionNames,t.identChars),text:j},{type:"RESERVED_DATA_TYPE",regex:rt(t.reservedDataTypes,t.identChars),text:j},{type:"RESERVED_KEYWORD",regex:rt(t.reservedKeywords,t.identChars),text:j}])}buildRulesAfterParams(t){var e,E;return this.validRules([{type:"VARIABLE",regex:t.variableTypes?Rl(t.variableTypes):void 0},{type:"STRING",regex:no(t.stringTypes)},{type:"IDENTIFIER",regex:Al(t.identChars)},{type:"DELIMITER",regex:/[;]/uy},{type:"COMMA",regex:/[,]/y},{type:"OPEN_PAREN",regex:to("open",t.extraParens)},{type:"CLOSE_PAREN",regex:to("close",t.extraParens)},{type:"OPERATOR",regex:Eo(["+","-","/",">","<","=","<>","<=",">=","!=",...(e=t.operators)!=null?e:[]])},{type:"ASTERISK",regex:/[*]/uy},{type:"PROPERTY_ACCESS_OPERATOR",regex:Eo([".",...(E=t.propertyAccessOperators)!=null?E:[]])}])}buildParamRules(t,e){var E,r,n,T,s;let o={named:e?.named||((E=t.paramTypes)==null?void 0:E.named)||[],quoted:e?.quoted||((r=t.paramTypes)==null?void 0:r.quoted)||[],numbered:e?.numbered||((n=t.paramTypes)==null?void 0:n.numbered)||[],positional:typeof e?.positional=="boolean"?e.positional:(T=t.paramTypes)==null?void 0:T.positional,custom:e?.custom||((s=t.paramTypes)==null?void 0:s.custom)||[]};return this.validRules([{type:"NAMED_PARAMETER",regex:DT(o.named,co(t.paramChars||t.identChars)),key:i=>i.slice(1)},{type:"QUOTED_PARAMETER",regex:DT(o.quoted,Lo(t.identTypes)),key:i=>(({tokenKey:R,quoteChar:A})=>R.replace(new RegExp(Fe("\\"+A),"gu"),A))({tokenKey:i.slice(2,-1),quoteChar:i.slice(-1)})},{type:"NUMBERED_PARAMETER",regex:DT(o.numbered,"[0-9]+"),key:i=>i.slice(1)},{type:"POSITIONAL_PARAMETER",regex:o.positional?/[?]/y:void 0},...o.custom.map(i=>{var R;return{type:"CUSTOM_PARAMETER",regex:ft(i.regex),key:(R=i.key)!=null?R:A=>A}})])}validRules(t){return t.filter(e=>!!e.regex)}},j=t=>mr(t.toUpperCase()),so=new Map,ll=t=>{let e=so.get(t);return e||(e=Cl(t),so.set(t,e)),e},Cl=t=>({tokenizer:new Nl(t.tokenizerOptions,t.name),formatOptions:_l(t.formatOptions)}),_l=t=>{var e;return{alwaysDenseOperators:t.alwaysDenseOperators||[],onelineClauses:Object.fromEntries(t.onelineClauses.map(E=>[E,!0])),tabularOnelineClauses:Object.fromEntries(((e=t.tabularOnelineClauses)!=null?e:t.onelineClauses).map(E=>[E,!0]))}};function Ll(t){return t.indentStyle==="tabularLeft"||t.indentStyle==="tabularRight"?" ".repeat(10):t.useTabs?"	":" ".repeat(t.tabWidth)}function vt(t){return t.indentStyle==="tabularLeft"||t.indentStyle==="tabularRight"}var cl=class{constructor(t){this.params=t,this.index=0}get({key:t,text:e}){return this.params?t?this.params[t]:this.params[this.index++]:e}getPositionalParameterIndex(){return this.index}setPositionalParameterIndex(t){this.index=t}};function ul(t){return t.map(fl).map(dl).map(Pl).map(Dl).map(pl)}var fl=(t,e,E)=>{if(lo(t.type)){let r=hl(E,e);if(r&&r.type==="PROPERTY_ACCESS_OPERATOR")return ie(Ee({},t),{type:"IDENTIFIER",text:t.raw})}return t},dl=(t,e,E)=>{if(t.type==="RESERVED_FUNCTION_NAME"){let r=CE(E,e);if(!r||!Po(r))return ie(Ee({},t),{type:"RESERVED_KEYWORD"})}return t},Pl=(t,e,E)=>{if(t.type==="RESERVED_DATA_TYPE"){let r=CE(E,e);if(r&&Po(r))return ie(Ee({},t),{type:"RESERVED_PARAMETERIZED_DATA_TYPE"})}return t},Dl=(t,e,E)=>{if(t.type==="IDENTIFIER"){let r=CE(E,e);if(r&&Do(r))return ie(Ee({},t),{type:"ARRAY_IDENTIFIER"})}return t},pl=(t,e,E)=>{if(t.type==="RESERVED_DATA_TYPE"){let r=CE(E,e);if(r&&Do(r))return ie(Ee({},t),{type:"ARRAY_KEYWORD"})}return t},hl=(t,e)=>CE(t,e,-1),CE=(t,e,E=1)=>{let r=1;for(;t[e+r*E]&&Ml(t[e+r*E]);)r++;return t[e+r*E]},Po=t=>t.type==="OPEN_PAREN"&&t.text==="(",Do=t=>t.type==="OPEN_PAREN"&&t.text==="[",Ml=t=>t.type==="BLOCK_COMMENT"||t.type==="LINE_COMMENT",po=class{constructor(t){this.tokenize=t,this.index=0,this.tokens=[],this.input=""}reset(t,e){this.input=t,this.index=0,this.tokens=this.tokenize(t)}next(){return this.tokens[this.index++]}save(){}formatError(t){let{line:e,col:E}=uo(this.input,t.start);return`Parse error at token: ${t.text} at line ${e} column ${E}`}has(t){return t in Io}};function pT(t){return t[0]}var f=new po(t=>[]),ct=([[t]])=>t,Z=t=>({type:"keyword",tokenType:t.type,text:t.text,raw:t.raw}),io=t=>({type:"data_type",text:t.text,raw:t.raw}),z=(t,{leading:e,trailing:E})=>(e?.length&&(t=ie(Ee({},t),{leadingComments:e})),E?.length&&(t=ie(Ee({},t),{trailingComments:E})),t),ml=(t,{leading:e,trailing:E})=>{if(e?.length){let[r,...n]=t;t=[z(r,{leading:e}),...n]}if(E?.length){let r=t.slice(0,-1),n=t[t.length-1];t=[...r,z(n,{trailing:E})]}return t},Ul={Lexer:f,ParserRules:[{name:"main$ebnf$1",symbols:[]},{name:"main$ebnf$1",symbols:["main$ebnf$1","statement"],postprocess:t=>t[0].concat([t[1]])},{name:"main",symbols:["main$ebnf$1"],postprocess:([t])=>{let e=t[t.length-1];return e&&!e.hasSemicolon?e.children.length>0?t:t.slice(0,-1):t}},{name:"statement$subexpression$1",symbols:[f.has("DELIMITER")?{type:"DELIMITER"}:DELIMITER]},{name:"statement$subexpression$1",symbols:[f.has("EOF")?{type:"EOF"}:EOF]},{name:"statement",symbols:["expressions_or_clauses","statement$subexpression$1"],postprocess:([t,[e]])=>({type:"statement",children:t,hasSemicolon:e.type==="DELIMITER"})},{name:"expressions_or_clauses$ebnf$1",symbols:[]},{name:"expressions_or_clauses$ebnf$1",symbols:["expressions_or_clauses$ebnf$1","free_form_sql"],postprocess:t=>t[0].concat([t[1]])},{name:"expressions_or_clauses$ebnf$2",symbols:[]},{name:"expressions_or_clauses$ebnf$2",symbols:["expressions_or_clauses$ebnf$2","clause"],postprocess:t=>t[0].concat([t[1]])},{name:"expressions_or_clauses",symbols:["expressions_or_clauses$ebnf$1","expressions_or_clauses$ebnf$2"],postprocess:([t,e])=>[...t,...e]},{name:"clause$subexpression$1",symbols:["limit_clause"]},{name:"clause$subexpression$1",symbols:["select_clause"]},{name:"clause$subexpression$1",symbols:["other_clause"]},{name:"clause$subexpression$1",symbols:["set_operation"]},{name:"clause",symbols:["clause$subexpression$1"],postprocess:ct},{name:"limit_clause$ebnf$1$subexpression$1$ebnf$1",symbols:["free_form_sql"]},{name:"limit_clause$ebnf$1$subexpression$1$ebnf$1",symbols:["limit_clause$ebnf$1$subexpression$1$ebnf$1","free_form_sql"],postprocess:t=>t[0].concat([t[1]])},{name:"limit_clause$ebnf$1$subexpression$1",symbols:[f.has("COMMA")?{type:"COMMA"}:COMMA,"limit_clause$ebnf$1$subexpression$1$ebnf$1"]},{name:"limit_clause$ebnf$1",symbols:["limit_clause$ebnf$1$subexpression$1"],postprocess:pT},{name:"limit_clause$ebnf$1",symbols:[],postprocess:()=>null},{name:"limit_clause",symbols:[f.has("LIMIT")?{type:"LIMIT"}:LIMIT,"_","expression_chain_","limit_clause$ebnf$1"],postprocess:([t,e,E,r])=>{if(r){let[n,T]=r;return{type:"limit_clause",limitKw:z(Z(t),{trailing:e}),offset:E,count:T}}else return{type:"limit_clause",limitKw:z(Z(t),{trailing:e}),count:E}}},{name:"select_clause$subexpression$1$ebnf$1",symbols:[]},{name:"select_clause$subexpression$1$ebnf$1",symbols:["select_clause$subexpression$1$ebnf$1","free_form_sql"],postprocess:t=>t[0].concat([t[1]])},{name:"select_clause$subexpression$1",symbols:["all_columns_asterisk","select_clause$subexpression$1$ebnf$1"]},{name:"select_clause$subexpression$1$ebnf$2",symbols:[]},{name:"select_clause$subexpression$1$ebnf$2",symbols:["select_clause$subexpression$1$ebnf$2","free_form_sql"],postprocess:t=>t[0].concat([t[1]])},{name:"select_clause$subexpression$1",symbols:["asteriskless_free_form_sql","select_clause$subexpression$1$ebnf$2"]},{name:"select_clause",symbols:[f.has("RESERVED_SELECT")?{type:"RESERVED_SELECT"}:RESERVED_SELECT,"select_clause$subexpression$1"],postprocess:([t,[e,E]])=>({type:"clause",nameKw:Z(t),children:[e,...E]})},{name:"select_clause",symbols:[f.has("RESERVED_SELECT")?{type:"RESERVED_SELECT"}:RESERVED_SELECT],postprocess:([t])=>({type:"clause",nameKw:Z(t),children:[]})},{name:"all_columns_asterisk",symbols:[f.has("ASTERISK")?{type:"ASTERISK"}:ASTERISK],postprocess:()=>({type:"all_columns_asterisk"})},{name:"other_clause$ebnf$1",symbols:[]},{name:"other_clause$ebnf$1",symbols:["other_clause$ebnf$1","free_form_sql"],postprocess:t=>t[0].concat([t[1]])},{name:"other_clause",symbols:[f.has("RESERVED_CLAUSE")?{type:"RESERVED_CLAUSE"}:RESERVED_CLAUSE,"other_clause$ebnf$1"],postprocess:([t,e])=>({type:"clause",nameKw:Z(t),children:e})},{name:"set_operation$ebnf$1",symbols:[]},{name:"set_operation$ebnf$1",symbols:["set_operation$ebnf$1","free_form_sql"],postprocess:t=>t[0].concat([t[1]])},{name:"set_operation",symbols:[f.has("RESERVED_SET_OPERATION")?{type:"RESERVED_SET_OPERATION"}:RESERVED_SET_OPERATION,"set_operation$ebnf$1"],postprocess:([t,e])=>({type:"set_operation",nameKw:Z(t),children:e})},{name:"expression_chain_$ebnf$1",symbols:["expression_with_comments_"]},{name:"expression_chain_$ebnf$1",symbols:["expression_chain_$ebnf$1","expression_with_comments_"],postprocess:t=>t[0].concat([t[1]])},{name:"expression_chain_",symbols:["expression_chain_$ebnf$1"],postprocess:pT},{name:"expression_chain$ebnf$1",symbols:[]},{name:"expression_chain$ebnf$1",symbols:["expression_chain$ebnf$1","_expression_with_comments"],postprocess:t=>t[0].concat([t[1]])},{name:"expression_chain",symbols:["expression","expression_chain$ebnf$1"],postprocess:([t,e])=>[t,...e]},{name:"andless_expression_chain$ebnf$1",symbols:[]},{name:"andless_expression_chain$ebnf$1",symbols:["andless_expression_chain$ebnf$1","_andless_expression_with_comments"],postprocess:t=>t[0].concat([t[1]])},{name:"andless_expression_chain",symbols:["andless_expression","andless_expression_chain$ebnf$1"],postprocess:([t,e])=>[t,...e]},{name:"expression_with_comments_",symbols:["expression","_"],postprocess:([t,e])=>z(t,{trailing:e})},{name:"_expression_with_comments",symbols:["_","expression"],postprocess:([t,e])=>z(e,{leading:t})},{name:"_andless_expression_with_comments",symbols:["_","andless_expression"],postprocess:([t,e])=>z(e,{leading:t})},{name:"free_form_sql$subexpression$1",symbols:["asteriskless_free_form_sql"]},{name:"free_form_sql$subexpression$1",symbols:["asterisk"]},{name:"free_form_sql",symbols:["free_form_sql$subexpression$1"],postprocess:ct},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["asteriskless_andless_expression"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["logic_operator"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["comma"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["comment"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["other_keyword"]},{name:"asteriskless_free_form_sql",symbols:["asteriskless_free_form_sql$subexpression$1"],postprocess:ct},{name:"expression$subexpression$1",symbols:["andless_expression"]},{name:"expression$subexpression$1",symbols:["logic_operator"]},{name:"expression",symbols:["expression$subexpression$1"],postprocess:ct},{name:"andless_expression$subexpression$1",symbols:["asteriskless_andless_expression"]},{name:"andless_expression$subexpression$1",symbols:["asterisk"]},{name:"andless_expression",symbols:["andless_expression$subexpression$1"],postprocess:ct},{name:"asteriskless_andless_expression$subexpression$1",symbols:["atomic_expression"]},{name:"asteriskless_andless_expression$subexpression$1",symbols:["between_predicate"]},{name:"asteriskless_andless_expression$subexpression$1",symbols:["case_expression"]},{name:"asteriskless_andless_expression",symbols:["asteriskless_andless_expression$subexpression$1"],postprocess:ct},{name:"atomic_expression$subexpression$1",symbols:["array_subscript"]},{name:"atomic_expression$subexpression$1",symbols:["function_call"]},{name:"atomic_expression$subexpression$1",symbols:["property_access"]},{name:"atomic_expression$subexpression$1",symbols:["parenthesis"]},{name:"atomic_expression$subexpression$1",symbols:["curly_braces"]},{name:"atomic_expression$subexpression$1",symbols:["square_brackets"]},{name:"atomic_expression$subexpression$1",symbols:["operator"]},{name:"atomic_expression$subexpression$1",symbols:["identifier"]},{name:"atomic_expression$subexpression$1",symbols:["parameter"]},{name:"atomic_expression$subexpression$1",symbols:["literal"]},{name:"atomic_expression$subexpression$1",symbols:["data_type"]},{name:"atomic_expression$subexpression$1",symbols:["keyword"]},{name:"atomic_expression",symbols:["atomic_expression$subexpression$1"],postprocess:ct},{name:"array_subscript",symbols:[f.has("ARRAY_IDENTIFIER")?{type:"ARRAY_IDENTIFIER"}:ARRAY_IDENTIFIER,"_","square_brackets"],postprocess:([t,e,E])=>({type:"array_subscript",array:z({type:"identifier",quoted:!1,text:t.text},{trailing:e}),parenthesis:E})},{name:"array_subscript",symbols:[f.has("ARRAY_KEYWORD")?{type:"ARRAY_KEYWORD"}:ARRAY_KEYWORD,"_","square_brackets"],postprocess:([t,e,E])=>({type:"array_subscript",array:z(Z(t),{trailing:e}),parenthesis:E})},{name:"function_call",symbols:[f.has("RESERVED_FUNCTION_NAME")?{type:"RESERVED_FUNCTION_NAME"}:RESERVED_FUNCTION_NAME,"_","parenthesis"],postprocess:([t,e,E])=>({type:"function_call",nameKw:z(Z(t),{trailing:e}),parenthesis:E})},{name:"parenthesis",symbols:[{literal:"("},"expressions_or_clauses",{literal:")"}],postprocess:([t,e,E])=>({type:"parenthesis",children:e,openParen:"(",closeParen:")"})},{name:"curly_braces$ebnf$1",symbols:[]},{name:"curly_braces$ebnf$1",symbols:["curly_braces$ebnf$1","free_form_sql"],postprocess:t=>t[0].concat([t[1]])},{name:"curly_braces",symbols:[{literal:"{"},"curly_braces$ebnf$1",{literal:"}"}],postprocess:([t,e,E])=>({type:"parenthesis",children:e,openParen:"{",closeParen:"}"})},{name:"square_brackets$ebnf$1",symbols:[]},{name:"square_brackets$ebnf$1",symbols:["square_brackets$ebnf$1","free_form_sql"],postprocess:t=>t[0].concat([t[1]])},{name:"square_brackets",symbols:[{literal:"["},"square_brackets$ebnf$1",{literal:"]"}],postprocess:([t,e,E])=>({type:"parenthesis",children:e,openParen:"[",closeParen:"]"})},{name:"property_access$subexpression$1",symbols:["identifier"]},{name:"property_access$subexpression$1",symbols:["array_subscript"]},{name:"property_access$subexpression$1",symbols:["all_columns_asterisk"]},{name:"property_access$subexpression$1",symbols:["parameter"]},{name:"property_access",symbols:["atomic_expression","_",f.has("PROPERTY_ACCESS_OPERATOR")?{type:"PROPERTY_ACCESS_OPERATOR"}:PROPERTY_ACCESS_OPERATOR,"_","property_access$subexpression$1"],postprocess:([t,e,E,r,[n]])=>({type:"property_access",object:z(t,{trailing:e}),operator:E.text,property:z(n,{leading:r})})},{name:"between_predicate",symbols:[f.has("BETWEEN")?{type:"BETWEEN"}:BETWEEN,"_","andless_expression_chain","_",f.has("AND")?{type:"AND"}:AND,"_","andless_expression"],postprocess:([t,e,E,r,n,T,s])=>({type:"between_predicate",betweenKw:Z(t),expr1:ml(E,{leading:e,trailing:r}),andKw:Z(n),expr2:[z(s,{leading:T})]})},{name:"case_expression$ebnf$1",symbols:["expression_chain_"],postprocess:pT},{name:"case_expression$ebnf$1",symbols:[],postprocess:()=>null},{name:"case_expression$ebnf$2",symbols:[]},{name:"case_expression$ebnf$2",symbols:["case_expression$ebnf$2","case_clause"],postprocess:t=>t[0].concat([t[1]])},{name:"case_expression",symbols:[f.has("CASE")?{type:"CASE"}:CASE,"_","case_expression$ebnf$1","case_expression$ebnf$2",f.has("END")?{type:"END"}:END],postprocess:([t,e,E,r,n])=>({type:"case_expression",caseKw:z(Z(t),{trailing:e}),endKw:Z(n),expr:E||[],clauses:r})},{name:"case_clause",symbols:[f.has("WHEN")?{type:"WHEN"}:WHEN,"_","expression_chain_",f.has("THEN")?{type:"THEN"}:THEN,"_","expression_chain_"],postprocess:([t,e,E,r,n,T])=>({type:"case_when",whenKw:z(Z(t),{trailing:e}),thenKw:z(Z(r),{trailing:n}),condition:E,result:T})},{name:"case_clause",symbols:[f.has("ELSE")?{type:"ELSE"}:ELSE,"_","expression_chain_"],postprocess:([t,e,E])=>({type:"case_else",elseKw:z(Z(t),{trailing:e}),result:E})},{name:"comma$subexpression$1",symbols:[f.has("COMMA")?{type:"COMMA"}:COMMA]},{name:"comma",symbols:["comma$subexpression$1"],postprocess:([[t]])=>({type:"comma"})},{name:"asterisk$subexpression$1",symbols:[f.has("ASTERISK")?{type:"ASTERISK"}:ASTERISK]},{name:"asterisk",symbols:["asterisk$subexpression$1"],postprocess:([[t]])=>({type:"operator",text:t.text})},{name:"operator$subexpression$1",symbols:[f.has("OPERATOR")?{type:"OPERATOR"}:OPERATOR]},{name:"operator",symbols:["operator$subexpression$1"],postprocess:([[t]])=>({type:"operator",text:t.text})},{name:"identifier$subexpression$1",symbols:[f.has("IDENTIFIER")?{type:"IDENTIFIER"}:IDENTIFIER]},{name:"identifier$subexpression$1",symbols:[f.has("QUOTED_IDENTIFIER")?{type:"QUOTED_IDENTIFIER"}:QUOTED_IDENTIFIER]},{name:"identifier$subexpression$1",symbols:[f.has("VARIABLE")?{type:"VARIABLE"}:VARIABLE]},{name:"identifier",symbols:["identifier$subexpression$1"],postprocess:([[t]])=>({type:"identifier",quoted:t.type!=="IDENTIFIER",text:t.text})},{name:"parameter$subexpression$1",symbols:[f.has("NAMED_PARAMETER")?{type:"NAMED_PARAMETER"}:NAMED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[f.has("QUOTED_PARAMETER")?{type:"QUOTED_PARAMETER"}:QUOTED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[f.has("NUMBERED_PARAMETER")?{type:"NUMBERED_PARAMETER"}:NUMBERED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[f.has("POSITIONAL_PARAMETER")?{type:"POSITIONAL_PARAMETER"}:POSITIONAL_PARAMETER]},{name:"parameter$subexpression$1",symbols:[f.has("CUSTOM_PARAMETER")?{type:"CUSTOM_PARAMETER"}:CUSTOM_PARAMETER]},{name:"parameter",symbols:["parameter$subexpression$1"],postprocess:([[t]])=>({type:"parameter",key:t.key,text:t.text})},{name:"literal$subexpression$1",symbols:[f.has("NUMBER")?{type:"NUMBER"}:NUMBER]},{name:"literal$subexpression$1",symbols:[f.has("STRING")?{type:"STRING"}:STRING]},{name:"literal",symbols:["literal$subexpression$1"],postprocess:([[t]])=>({type:"literal",text:t.text})},{name:"keyword$subexpression$1",symbols:[f.has("RESERVED_KEYWORD")?{type:"RESERVED_KEYWORD"}:RESERVED_KEYWORD]},{name:"keyword$subexpression$1",symbols:[f.has("RESERVED_PHRASE")?{type:"RESERVED_PHRASE"}:RESERVED_PHRASE]},{name:"keyword$subexpression$1",symbols:[f.has("RESERVED_JOIN")?{type:"RESERVED_JOIN"}:RESERVED_JOIN]},{name:"keyword",symbols:["keyword$subexpression$1"],postprocess:([[t]])=>Z(t)},{name:"data_type$subexpression$1",symbols:[f.has("RESERVED_DATA_TYPE")?{type:"RESERVED_DATA_TYPE"}:RESERVED_DATA_TYPE]},{name:"data_type",symbols:["data_type$subexpression$1"],postprocess:([[t]])=>io(t)},{name:"data_type",symbols:[f.has("RESERVED_PARAMETERIZED_DATA_TYPE")?{type:"RESERVED_PARAMETERIZED_DATA_TYPE"}:RESERVED_PARAMETERIZED_DATA_TYPE,"_","parenthesis"],postprocess:([t,e,E])=>({type:"parameterized_data_type",dataType:z(io(t),{trailing:e}),parenthesis:E})},{name:"logic_operator$subexpression$1",symbols:[f.has("AND")?{type:"AND"}:AND]},{name:"logic_operator$subexpression$1",symbols:[f.has("OR")?{type:"OR"}:OR]},{name:"logic_operator$subexpression$1",symbols:[f.has("XOR")?{type:"XOR"}:XOR]},{name:"logic_operator",symbols:["logic_operator$subexpression$1"],postprocess:([[t]])=>Z(t)},{name:"other_keyword$subexpression$1",symbols:[f.has("WHEN")?{type:"WHEN"}:WHEN]},{name:"other_keyword$subexpression$1",symbols:[f.has("THEN")?{type:"THEN"}:THEN]},{name:"other_keyword$subexpression$1",symbols:[f.has("ELSE")?{type:"ELSE"}:ELSE]},{name:"other_keyword$subexpression$1",symbols:[f.has("END")?{type:"END"}:END]},{name:"other_keyword",symbols:["other_keyword$subexpression$1"],postprocess:([[t]])=>Z(t)},{name:"_$ebnf$1",symbols:[]},{name:"_$ebnf$1",symbols:["_$ebnf$1","comment"],postprocess:t=>t[0].concat([t[1]])},{name:"_",symbols:["_$ebnf$1"],postprocess:([t])=>t},{name:"comment",symbols:[f.has("LINE_COMMENT")?{type:"LINE_COMMENT"}:LINE_COMMENT],postprocess:([t])=>({type:"line_comment",text:t.text,precedingWhitespace:t.precedingWhitespace})},{name:"comment",symbols:[f.has("BLOCK_COMMENT")?{type:"BLOCK_COMMENT"}:BLOCK_COMMENT],postprocess:([t])=>({type:"block_comment",text:t.text,precedingWhitespace:t.precedingWhitespace})},{name:"comment",symbols:[f.has("DISABLE_COMMENT")?{type:"DISABLE_COMMENT"}:DISABLE_COMMENT],postprocess:([t])=>({type:"disable_comment",text:t.text,precedingWhitespace:t.precedingWhitespace})}],ParserStart:"main"},gl=Ul,{Parser:Gl,Grammar:yl}=fo.default;function Bl(t){let e={},E=new po(n=>[...ul(t.tokenize(n,e)),No(n.length)]),r=new Gl(yl.fromCompiled(gl),{lexer:E});return{parse:(n,T)=>{e=T;let{results:s}=r.feed(n);if(s.length===1)return s[0];throw s.length===0?new Error("Parse error: Invalid SQL"):new Error(`Parse error: Ambiguous grammar
${JSON.stringify(s,void 0,2)}`)}}}var ho=class{constructor(t){this.indentation=t,this.items=[]}add(...t){for(let e of t)switch(e){case 0:this.items.push(0);break;case 1:this.trimHorizontalWhitespace();break;case 2:this.trimWhitespace();break;case 3:this.trimHorizontalWhitespace(),this.addNewline(3);break;case 4:this.trimHorizontalWhitespace(),this.addNewline(4);break;case 5:this.addIndentation();break;case 6:this.items.push(6);break;default:this.items.push(e)}}trimHorizontalWhitespace(){for(;Fl(lE(this.items));)this.items.pop()}trimWhitespace(){for(;Hl(lE(this.items));)this.items.pop()}addNewline(t){if(this.items.length>0)switch(lE(this.items)){case 3:this.items.pop(),this.items.push(t);break;case 4:break;default:this.items.push(t);break}}addIndentation(){for(let t=0;t<this.indentation.getLevel();t++)this.items.push(6)}toString(){return this.items.map(t=>this.itemToString(t)).join("")}getLayoutItems(){return this.items}itemToString(t){switch(t){case 0:return" ";case 3:case 4:return`
`;case 6:return this.indentation.getSingleIndent();default:return t}}},Fl=t=>t===0||t===6,Hl=t=>t===0||t===6||t===3;function oo(t,e){if(e==="standard")return t;let E=[];return t.length>=10&&t.includes(" ")&&([t,...E]=t.split(" ")),e==="tabularLeft"?t=t.padEnd(9," "):t=t.padStart(9," "),t+["",...E].join(" ")}function Ro(t){return QS(t)||t==="RESERVED_CLAUSE"||t==="RESERVED_SELECT"||t==="RESERVED_SET_OPERATION"||t==="RESERVED_JOIN"||t==="LIMIT"}var hT="top-level",Yl="block-level",Mo=class{constructor(t){this.indent=t,this.indentTypes=[]}getSingleIndent(){return this.indent}getLevel(){return this.indentTypes.length}increaseTopLevel(){this.indentTypes.push(hT)}increaseBlockLevel(){this.indentTypes.push(Yl)}decreaseTopLevel(){this.indentTypes.length>0&&lE(this.indentTypes)===hT&&this.indentTypes.pop()}decreaseBlockLevel(){for(;this.indentTypes.length>0&&this.indentTypes.pop()===hT;);}},bl=class extends ho{constructor(t){super(new Mo("")),this.expressionWidth=t,this.length=0,this.trailingSpace=!1}add(...t){if(t.forEach(e=>this.addToLength(e)),this.length>this.expressionWidth)throw new MT;super.add(...t)}addToLength(t){if(typeof t=="string")this.length+=t.length,this.trailingSpace=!1;else{if(t===4||t===3)throw new MT;t===5||t===6||t===0?this.trailingSpace||(this.length++,this.trailingSpace=!0):(t===2||t===1)&&this.trailingSpace&&(this.trailingSpace=!1,this.length--)}}},MT=class extends Error{},vl=class mT{constructor({cfg:e,dialectCfg:E,params:r,layout:n,inline:T=!1}){this.inline=!1,this.nodes=[],this.index=-1,this.cfg=e,this.dialectCfg=E,this.inline=T,this.params=r,this.layout=n}format(e){for(this.nodes=e,this.index=0;this.index<this.nodes.length;this.index++)this.formatNode(this.nodes[this.index]);return this.layout}formatNode(e){this.formatComments(e.leadingComments),this.formatNodeWithoutComments(e),this.formatComments(e.trailingComments)}formatNodeWithoutComments(e){switch(e.type){case"function_call":return this.formatFunctionCall(e);case"parameterized_data_type":return this.formatParameterizedDataType(e);case"array_subscript":return this.formatArraySubscript(e);case"property_access":return this.formatPropertyAccess(e);case"parenthesis":return this.formatParenthesis(e);case"between_predicate":return this.formatBetweenPredicate(e);case"case_expression":return this.formatCaseExpression(e);case"case_when":return this.formatCaseWhen(e);case"case_else":return this.formatCaseElse(e);case"clause":return this.formatClause(e);case"set_operation":return this.formatSetOperation(e);case"limit_clause":return this.formatLimitClause(e);case"all_columns_asterisk":return this.formatAllColumnsAsterisk(e);case"literal":return this.formatLiteral(e);case"identifier":return this.formatIdentifier(e);case"parameter":return this.formatParameter(e);case"operator":return this.formatOperator(e);case"comma":return this.formatComma(e);case"line_comment":return this.formatLineComment(e);case"block_comment":return this.formatBlockComment(e);case"disable_comment":return this.formatBlockComment(e);case"data_type":return this.formatDataType(e);case"keyword":return this.formatKeywordNode(e)}}formatFunctionCall(e){this.withComments(e.nameKw,()=>{this.layout.add(this.showFunctionKw(e.nameKw))}),this.formatNode(e.parenthesis)}formatParameterizedDataType(e){this.withComments(e.dataType,()=>{this.layout.add(this.showDataType(e.dataType))}),this.formatNode(e.parenthesis)}formatArraySubscript(e){let E;switch(e.array.type){case"data_type":E=this.showDataType(e.array);break;case"keyword":E=this.showKw(e.array);break;default:E=this.showIdentifier(e.array);break}this.withComments(e.array,()=>{this.layout.add(E)}),this.formatNode(e.parenthesis)}formatPropertyAccess(e){this.formatNode(e.object),this.layout.add(1,e.operator),this.formatNode(e.property)}formatParenthesis(e){let E=this.formatInlineExpression(e.children);E?(this.layout.add(e.openParen),this.layout.add(...E.getLayoutItems()),this.layout.add(1,e.closeParen,0)):(this.layout.add(e.openParen,3),vt(this.cfg)?(this.layout.add(5),this.layout=this.formatSubExpression(e.children)):(this.layout.indentation.increaseBlockLevel(),this.layout.add(5),this.layout=this.formatSubExpression(e.children),this.layout.indentation.decreaseBlockLevel()),this.layout.add(3,5,e.closeParen,0))}formatBetweenPredicate(e){this.layout.add(this.showKw(e.betweenKw),0),this.layout=this.formatSubExpression(e.expr1),this.layout.add(1,0,this.showNonTabularKw(e.andKw),0),this.layout=this.formatSubExpression(e.expr2),this.layout.add(0)}formatCaseExpression(e){this.formatNode(e.caseKw),this.layout.indentation.increaseBlockLevel(),this.layout=this.formatSubExpression(e.expr),this.layout=this.formatSubExpression(e.clauses),this.layout.indentation.decreaseBlockLevel(),this.layout.add(3,5),this.formatNode(e.endKw)}formatCaseWhen(e){this.layout.add(3,5),this.formatNode(e.whenKw),this.layout=this.formatSubExpression(e.condition),this.formatNode(e.thenKw),this.layout=this.formatSubExpression(e.result)}formatCaseElse(e){this.layout.add(3,5),this.formatNode(e.elseKw),this.layout=this.formatSubExpression(e.result)}formatClause(e){this.isOnelineClause(e)?this.formatClauseInOnelineStyle(e):vt(this.cfg)?this.formatClauseInTabularStyle(e):this.formatClauseInIndentedStyle(e)}isOnelineClause(e){return vt(this.cfg)?this.dialectCfg.tabularOnelineClauses[e.nameKw.text]:this.dialectCfg.onelineClauses[e.nameKw.text]}formatClauseInIndentedStyle(e){this.layout.add(3,5,this.showKw(e.nameKw),3),this.layout.indentation.increaseTopLevel(),this.layout.add(5),this.layout=this.formatSubExpression(e.children),this.layout.indentation.decreaseTopLevel()}formatClauseInOnelineStyle(e){this.layout.add(3,5,this.showKw(e.nameKw),0),this.layout=this.formatSubExpression(e.children)}formatClauseInTabularStyle(e){this.layout.add(3,5,this.showKw(e.nameKw),0),this.layout.indentation.increaseTopLevel(),this.layout=this.formatSubExpression(e.children),this.layout.indentation.decreaseTopLevel()}formatSetOperation(e){this.layout.add(3,5,this.showKw(e.nameKw),3),this.layout.add(5),this.layout=this.formatSubExpression(e.children)}formatLimitClause(e){this.withComments(e.limitKw,()=>{this.layout.add(3,5,this.showKw(e.limitKw))}),this.layout.indentation.increaseTopLevel(),vt(this.cfg)?this.layout.add(0):this.layout.add(3,5),e.offset?(this.layout=this.formatSubExpression(e.offset),this.layout.add(1,",",0),this.layout=this.formatSubExpression(e.count)):this.layout=this.formatSubExpression(e.count),this.layout.indentation.decreaseTopLevel()}formatAllColumnsAsterisk(e){this.layout.add("*",0)}formatLiteral(e){this.layout.add(e.text,0)}formatIdentifier(e){this.layout.add(this.showIdentifier(e),0)}formatParameter(e){this.layout.add(this.params.get(e),0)}formatOperator({text:e}){this.cfg.denseOperators||this.dialectCfg.alwaysDenseOperators.includes(e)?this.layout.add(1,e):e===":"?this.layout.add(1,e,0):this.layout.add(e,0)}formatComma(e){this.inline?this.layout.add(1,",",0):this.layout.add(1,",",3,5)}withComments(e,E){this.formatComments(e.leadingComments),E(),this.formatComments(e.trailingComments)}formatComments(e){e&&e.forEach(E=>{E.type==="line_comment"?this.formatLineComment(E):this.formatBlockComment(E)})}formatLineComment(e){PT(e.precedingWhitespace||"")?this.layout.add(3,5,e.text,4,5):this.layout.getLayoutItems().length>0?this.layout.add(2,0,e.text,4,5):this.layout.add(e.text,4,5)}formatBlockComment(e){e.type==="block_comment"&&this.isMultilineBlockComment(e)?(this.splitBlockComment(e.text).forEach(E=>{this.layout.add(3,5,E)}),this.layout.add(3,5)):this.layout.add(e.text,0)}isMultilineBlockComment(e){return PT(e.text)||PT(e.precedingWhitespace||"")}isDocComment(e){let E=e.split(/\n/);return/^\/\*\*?$/.test(E[0])&&E.slice(1,E.length-1).every(r=>/^\s*\*/.test(r))&&/^\s*\*\/$/.test(lE(E))}splitBlockComment(e){return this.isDocComment(e)?e.split(/\n/).map(E=>/^\s*\*/.test(E)?" "+E.replace(/^\s*/,""):E):e.split(/\n/).map(E=>E.replace(/^\s*/,""))}formatSubExpression(e){return new mT({cfg:this.cfg,dialectCfg:this.dialectCfg,params:this.params,layout:this.layout,inline:this.inline}).format(e)}formatInlineExpression(e){let E=this.params.getPositionalParameterIndex();try{return new mT({cfg:this.cfg,dialectCfg:this.dialectCfg,params:this.params,layout:new bl(this.cfg.expressionWidth),inline:!0}).format(e)}catch(r){if(r instanceof MT){this.params.setPositionalParameterIndex(E);return}else throw r}}formatKeywordNode(e){switch(e.tokenType){case"RESERVED_JOIN":return this.formatJoin(e);case"AND":case"OR":case"XOR":return this.formatLogicalOperator(e);default:return this.formatKeyword(e)}}formatJoin(e){vt(this.cfg)?(this.layout.indentation.decreaseTopLevel(),this.layout.add(3,5,this.showKw(e),0),this.layout.indentation.increaseTopLevel()):this.layout.add(3,5,this.showKw(e),0)}formatKeyword(e){this.layout.add(this.showKw(e),0)}formatLogicalOperator(e){this.cfg.logicalOperatorNewline==="before"?vt(this.cfg)?(this.layout.indentation.decreaseTopLevel(),this.layout.add(3,5,this.showKw(e),0),this.layout.indentation.increaseTopLevel()):this.layout.add(3,5,this.showKw(e),0):this.layout.add(this.showKw(e),3,5)}formatDataType(e){this.layout.add(this.showDataType(e),0)}showKw(e){return Ro(e.tokenType)?oo(this.showNonTabularKw(e),this.cfg.indentStyle):this.showNonTabularKw(e)}showNonTabularKw(e){switch(this.cfg.keywordCase){case"preserve":return mr(e.raw);case"upper":return e.text;case"lower":return e.text.toLowerCase()}}showFunctionKw(e){return Ro(e.tokenType)?oo(this.showNonTabularFunctionKw(e),this.cfg.indentStyle):this.showNonTabularFunctionKw(e)}showNonTabularFunctionKw(e){switch(this.cfg.functionCase){case"preserve":return mr(e.raw);case"upper":return e.text;case"lower":return e.text.toLowerCase()}}showIdentifier(e){if(e.quoted)return e.text;switch(this.cfg.identifierCase){case"preserve":return e.text;case"upper":return e.text.toUpperCase();case"lower":return e.text.toLowerCase()}}showDataType(e){switch(this.cfg.dataTypeCase){case"preserve":return mr(e.raw);case"upper":return e.text;case"lower":return e.text.toLowerCase()}}},Vl=class{constructor(t,e){this.dialect=t,this.cfg=e,this.params=new cl(this.cfg.params)}format(t){let e=this.parse(t);return this.formatAst(e).trimEnd()}parse(t){return Bl(this.dialect.tokenizer).parse(t,this.cfg.paramTypes||{})}formatAst(t){return t.map(e=>this.formatStatement(e)).join(`
`.repeat(this.cfg.linesBetweenQueries+1))}formatStatement(t){let e=new vl({cfg:this.cfg,dialectCfg:this.dialect.formatOptions,params:this.params,layout:new ho(new Mo(Ll(this.cfg)))}).format(t.children);return t.hasSemicolon&&(this.cfg.newlineBeforeSemicolon?e.add(3,";"):e.add(2,";")),e.toString()}},UT=class extends Error{};function wl(t){let e=["multilineLists","newlineBeforeOpenParen","newlineBeforeCloseParen","aliasAs","commaPosition","tabulateAlias"];for(let E of e)if(E in t)throw new UT(`${E} config is no more supported.`);if(t.expressionWidth<=0)throw new UT(`expressionWidth config must be positive number. Received ${t.expressionWidth} instead.`);return t.params&&!Wl(t.params)&&console.warn('WARNING: All "params" option values should be strings.'),t}function Wl(t){return(t instanceof Array?t:Object.values(t)).every(E=>typeof E=="string")}var mo={bigquery:"bigquery",db2:"db2",db2i:"db2i",hive:"hive",mariadb:"mariadb",mysql:"mysql",n1ql:"n1ql",plsql:"plsql",postgresql:"postgresql",redshift:"redshift",spark:"spark",sqlite:"sqlite",sql:"sql",tidb:"tidb",trino:"trino",transactsql:"transactsql",tsql:"transactsql",singlestoredb:"singlestoredb",snowflake:"snowflake"},Xl=Object.keys(mo),xl={tabWidth:2,useTabs:!1,keywordCase:"preserve",identifierCase:"preserve",dataTypeCase:"preserve",functionCase:"preserve",indentStyle:"standard",logicalOperatorNewline:"before",expressionWidth:50,linesBetweenQueries:1,denseOperators:!1,newlineBeforeSemicolon:!1},Uo=(t,e={})=>{if(typeof e.language=="string"&&!Xl.includes(e.language))throw new UT(`Unsupported SQL dialect: ${e.language}`);let E=mo[e.language||"sql"];return Kl(t,ie(Ee({},e),{dialect:Oo[E]}))},Kl=(t,e)=>{var E=e,{dialect:r}=E,n=VS(E,["dialect"]);if(typeof t!="string")throw new Error("Invalid query argument. Expected string, instead got "+typeof t);let T=wl(Ee(Ee({},xl),n));return new Vl(ll(r),T).format(t)};var go=(()=>{let e=class e{constructor(){this.favoriteSeason="",this.seasons=["Prettify","Uglify"],this.original=""}onChange(r){this.original=Uo(this.original)}};e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=b({type:e,selectors:[["app-dev-tools-formatters-sql"]],standalone:!0,features:[V],decls:3,vars:1,consts:[[1,"parent"],[1,"item"],["type","text",2,"width","100%","height","100%","min-height","300px",3,"ngModelChange","ngModel"]],template:function(n,T){n&1&&(L(0,"div",0)(1,"div",1)(2,"textarea",2),Re("ngModelChange",function(o){return T.onChange(o)}),K("ngModelChange",function(o){return x(T.original,o)||(T.original=o),o}),c()()()),n&2&&(B(2),X("ngModel",T.original))},dependencies:[ae,Ce,Ne,Se,Oe,Ie,Ae,le]});let t=e;return t})();var Go=(()=>{let e=class e{constructor(){}ngOnInit(){}};e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=b({type:e,selectors:[["app-dev-tools-formatters"]],standalone:!0,features:[V],decls:11,vars:0,consts:[[1,"tab-wrap"],["checked","","id","tab1","name","tabGroup2","type","radio",1,"tab"],["for","tab1"],["id","tab5","name","tabGroup2","type","radio",1,"tab"],["for","tab5"],[1,"tab__content"]],template:function(n,T){n&1&&(L(0,"div",0),Y(1,"input",1),L(2,"label",2),F(3,"JSON"),c(),Y(4,"input",3),L(5,"label",4),F(6,"SQL"),c(),L(7,"div",5),Y(8,"app-dev-tools-formatters-json"),c(),L(9,"div",5),Y(10,"app-dev-tools-formatters-sql"),c()())},dependencies:[gi,go],styles:[".tab-wrap[_ngcontent-%COMP%]{transition:.3s box-shadow ease;border-radius:6px;max-width:100%;display:flex;flex-wrap:wrap;position:relative;list-style:none;background-color:#fff;margin:0;box-shadow:0 1px 3px #0000001f,0 1px 2px #0000003d}.tab-wrap[_ngcontent-%COMP%]:hover{box-shadow:0 12px 23px #0000003b,0 10px 10px #00000030}.tab[_ngcontent-%COMP%]{display:none}.tab[_ngcontent-%COMP%]:checked:nth-of-type(1) ~ .tab__content[_ngcontent-%COMP%]:nth-of-type(1){opacity:1;transition:.5s opacity ease-in,.8s transform ease;position:relative;top:0;z-index:100;transform:translateY(0);text-shadow:0 0 0}.tab[_ngcontent-%COMP%]:checked:nth-of-type(2) ~ .tab__content[_ngcontent-%COMP%]:nth-of-type(2){opacity:1;transition:.5s opacity ease-in,.8s transform ease;position:relative;top:0;z-index:100;transform:translateY(0);text-shadow:0 0 0}.tab[_ngcontent-%COMP%]:checked:nth-of-type(3) ~ .tab__content[_ngcontent-%COMP%]:nth-of-type(3){opacity:1;transition:.5s opacity ease-in,.8s transform ease;position:relative;top:0;z-index:100;transform:translateY(0);text-shadow:0 0 0}.tab[_ngcontent-%COMP%]:checked:nth-of-type(4) ~ .tab__content[_ngcontent-%COMP%]:nth-of-type(4){opacity:1;transition:.5s opacity ease-in,.8s transform ease;position:relative;top:0;z-index:100;transform:translateY(0);text-shadow:0 0 0}.tab[_ngcontent-%COMP%]:checked:nth-of-type(5) ~ .tab__content[_ngcontent-%COMP%]:nth-of-type(5){opacity:1;transition:.5s opacity ease-in,.8s transform ease;position:relative;top:0;z-index:100;transform:translateY(0);text-shadow:0 0 0}.tab[_ngcontent-%COMP%]:first-of-type:not(:last-of-type) + label[_ngcontent-%COMP%]{border-top-right-radius:0;border-bottom-right-radius:0}.tab[_ngcontent-%COMP%]:not(:first-of-type):not(:last-of-type) + label[_ngcontent-%COMP%]{border-radius:0}.tab[_ngcontent-%COMP%]:last-of-type:not(:first-of-type) + label[_ngcontent-%COMP%]{border-top-left-radius:0;border-bottom-left-radius:0}.tab[_ngcontent-%COMP%]:checked + label[_ngcontent-%COMP%]{background-color:#fff;box-shadow:0 -1px #fff inset;cursor:default}.tab[_ngcontent-%COMP%]:checked + label[_ngcontent-%COMP%]:hover{box-shadow:0 -1px #fff inset;background-color:#fff}.tab[_ngcontent-%COMP%] + label[_ngcontent-%COMP%]{box-shadow:0 -1px #eee inset;border-radius:6px 6px 0 0;cursor:pointer;display:block;text-decoration:none;color:#333;flex-grow:3;background-color:#f2f2f2;-webkit-user-select:none;user-select:none;text-align:center;transition:.3s background-color ease,.3s box-shadow ease;height:50px;box-sizing:border-box;padding:15px}.tab[_ngcontent-%COMP%] + label[_ngcontent-%COMP%]:hover{background-color:#f9f9f9;box-shadow:0 1px #f4f4f4 inset}.tab__content[_ngcontent-%COMP%]{padding:10px 25px;background-color:transparent;position:absolute;width:100%;z-index:-1;opacity:0;left:0;transform:translateY(-3px);border-radius:6px}body[_ngcontent-%COMP%]{font-family:Helvetica,sans-serif;background-color:#e7e7e7;color:#777;padding:30px 0;font-weight:300}.container[_ngcontent-%COMP%]{margin:0 auto;display:block;max-width:800px}.container[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]:not(.tab-wrap){padding:0 80px}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%]{margin:0;color:#444;text-align:center;font-weight:400}h2[_ngcontent-%COMP%]{font-size:1em;margin-bottom:30px}h3[_ngcontent-%COMP%]{font-weight:400}p[_ngcontent-%COMP%]{line-height:1.6;margin-bottom:20px}"]});let t=e;return t})();var ER=hE(tR());var rR=(()=>{let e=class e{constructor(){this.favoriteSeason="",this.seasons=["Prettify","Uglify"],this.original=""}onChange(){let r=new ER.LoremIpsum({sentencesPerParagraph:{max:8,min:4},wordsPerSentence:{max:16,min:4}});this.original=r.generateParagraphs(5)}};e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=b({type:e,selectors:[["app-dev-tools-generators-lorem-ipsum"]],standalone:!0,features:[V],decls:8,vars:1,consts:[[2,"display","flex","flex-direction","row-reverse","padding","12px"],["extended","","mat-fab","",3,"click"],[1,"parent"],[1,"item"],["type","text",2,"width","100%","height","100%","min-height","300px",3,"ngModelChange","ngModel"]],template:function(n,T){n&1&&(L(0,"div",0)(1,"button",1),Re("click",function(){return T.onChange()}),L(2,"mat-icon"),F(3,"edit_note"),c(),F(4," Generate "),c()(),L(5,"div",2)(6,"div",3)(7,"textarea",4),K("ngModelChange",function(o){return x(T.original,o)||(T.original=o),o}),c()()()),n&2&&(B(7),X("ngModel",T.original))},dependencies:[ae,Ce,Ne,Se,Oe,Ie,Ae,UE,le,gE]});let t=e;return t})();var RA=hE(sA(),1);function U_(t,e){if(t&1&&Y(0,"canvas",1),t&2){let E=mE();_s(E.styleClass),fe("qrCode",E.value)("qrCodeErrorCorrectionLevel",E.errorCorrectionLevel)("qrCodeCenterImageSrc",E.centerImageSrc)("qrCodeCenterImageWidth",E.centerImageSize)("qrCodeCenterImageHeight",E.centerImageSize)("qrCodeMargin",E.margin)("width",E.size)("height",E.size)("ngStyle",E.style)("darkColor",E.darkColor)("lightColor",E.lightColor)}}var iA=/^#(?:[0-9a-fA-F]{3,4}){1,2}$/,g_=(()=>{let e=class e{constructor(r){this.viewContainerRef=r,this.errorCorrectionLevel=e.DEFAULT_ERROR_CORRECTION_LEVEL,this.darkColor="#000000FF",this.lightColor="#FFFFFFFF",this.margin=16}ngOnChanges(){return $t(this,null,function*(){if(!this.value)return;this.version&&this.version>40?(console.warn("[qrCode] max version is 40, clamping"),this.version=40):this.version&&this.version<1?(console.warn("[qrCode] min version is 1, clamping"),this.version=1):this.version!==void 0&&isNaN(this.version)&&(console.warn("[qrCode] version should be set to a number, defaulting to auto"),this.version=void 0);let r=this.viewContainerRef.element.nativeElement;if(!r)return;let n=r.getContext("2d");n&&n.clearRect(0,0,n.canvas.width,n.canvas.height);let T=this.errorCorrectionLevel??e.DEFAULT_ERROR_CORRECTION_LEVEL,s=iA.test(this.darkColor)?this.darkColor:void 0,o=iA.test(this.lightColor)?this.lightColor:void 0;cs()&&(!s&&this.darkColor&&console.error("[ng-qrcode] darkColor set to invalid value, must be RGBA hex color string, eg: #3050A1FF"),!o&&this.lightColor&&console.error("[ng-qrcode] lightColor set to invalid value, must be RGBA hex color string, eg: #3050A130")),yield RA.default.toCanvas(r,this.value,{version:this.version,errorCorrectionLevel:T,width:this.width,margin:this.margin,color:{dark:s,light:o}});let i=this.centerImageSrc,R=oA(this.centerImageWidth,e.DEFAULT_CENTER_IMAGE_SIZE),A=oA(this.centerImageHeight,e.DEFAULT_CENTER_IMAGE_SIZE);if(i&&n){this.centerImage||(this.centerImage=new Image(R,A));let a=this.centerImage;i!==this.centerImage.src&&(a.src=i),R!==this.centerImage.width&&(a.width=R),A!==this.centerImage.height&&(a.height=A);let O=()=>{n.drawImage(a,r.width/2-R/2,r.height/2-A/2,R,A)};a.onload=O,a.complete&&O()}})}};e.DEFAULT_ERROR_CORRECTION_LEVEL="M",e.DEFAULT_CENTER_IMAGE_SIZE=40,e.\u0275fac=function(n){return new(n||e)(ls(Cs))},e.\u0275dir=Is({type:e,selectors:[["canvas","qrCode",""]],inputs:{value:[0,"qrCode","value"],version:[0,"qrCodeVersion","version"],errorCorrectionLevel:[0,"qrCodeErrorCorrectionLevel","errorCorrectionLevel"],width:"width",height:"height",darkColor:"darkColor",lightColor:"lightColor",centerImageSrc:[0,"qrCodeCenterImageSrc","centerImageSrc"],centerImageWidth:[0,"qrCodeCenterImageWidth","centerImageWidth"],centerImageHeight:[0,"qrCodeCenterImageHeight","centerImageHeight"],margin:[0,"qrCodeMargin","margin"]},features:[Ns]});let t=e;return t})();function oA(t,e){return t===void 0||t===""?e:typeof t=="string"?parseInt(t,10):t}var AA=(()=>{let e=class e{};e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=b({type:e,selectors:[["qr-code"]],inputs:{value:"value",size:"size",style:"style",styleClass:"styleClass",darkColor:"darkColor",lightColor:"lightColor",errorCorrectionLevel:"errorCorrectionLevel",centerImageSrc:"centerImageSrc",centerImageSize:"centerImageSize",margin:"margin"},decls:1,vars:1,consts:[[3,"qrCode","qrCodeErrorCorrectionLevel","qrCodeCenterImageSrc","qrCodeCenterImageWidth","qrCodeCenterImageHeight","qrCodeMargin","width","height","class","ngStyle","darkColor","lightColor"],[3,"qrCode","qrCodeErrorCorrectionLevel","qrCodeCenterImageSrc","qrCodeCenterImageWidth","qrCodeCenterImageHeight","qrCodeMargin","width","height","ngStyle","darkColor","lightColor"]],template:function(n,T){n&1&&ME(0,U_,1,13,"canvas",0),n&2&&Ls(T.value?0:-1)},dependencies:[fs,g_],encapsulation:2});let t=e;return t})(),aA=(()=>{let e=class e{};e.\u0275fac=function(n){return new(n||e)},e.\u0275mod=Os({type:e}),e.\u0275inj=Ss({imports:[ds]});let t=e;return t})();function y_(t,e){if(t&1&&(L(0,"mat-radio-button",2),F(1),c()),t&2){let E=e.$implicit;fe("value",E),B(),$e(E)}}function B_(t,e){if(t&1&&(L(0,"div",7),Y(1,"qr-code",8),c()),t&2){let E=mE();B(),fe("value",E.original)}}var SA=(()=>{let e=class e{constructor(){this.favoriteSeason="",this.seasons=["XML","YML"],this.original="",this.result=""}onChange(r){}};e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=b({type:e,selectors:[["app-dev-tools-generators-qr"]],standalone:!0,features:[V],decls:8,vars:3,consts:[[2,"display","flex","flex-direction","row-reverse","padding-right","12px"],["aria-labelledby","example-radio-group-label",1,"example-radio-group",3,"ngModelChange","ngModel"],[1,"example-radio-button",3,"value"],[1,"parent"],[1,"item"],["type","text",2,"width","100%","height","100%",3,"ngModelChange","ngModel"],["class","item last",4,"ngIf"],[1,"item","last"],["size","300","errorCorrectionLevel","M",3,"value"]],template:function(n,T){n&1&&(L(0,"div",0)(1,"mat-radio-group",1),Re("ngModelChange",function(o){return T.onChange(o)}),K("ngModelChange",function(o){return x(T.favoriteSeason,o)||(T.favoriteSeason=o),o}),Ke(2,y_,2,2,"mat-radio-button",2,xe),c()(),L(4,"div",3)(5,"div",4)(6,"textarea",5),K("ngModelChange",function(o){return x(T.original,o)||(T.original=o),o}),c()(),ME(7,B_,2,1,"div",6),c()),n&2&&(B(),X("ngModel",T.favoriteSeason),B(),Je(T.seasons),B(4),X("ngModel",T.original),B(),fe("ngIf",T.original))},dependencies:[ae,Ce,Ne,Se,Oe,Ie,Ae,le,ke,qe,aA,AA,us],styles:[".parent[_ngcontent-%COMP%]{display:flex;font-family:arial,sans-serif}.item[_ngcontent-%COMP%]{width:50%;padding:2em;color:#fff;background:#eee;min-height:500px}.last[_ngcontent-%COMP%]{color:#222;background:#eee}@media screen and (max-width: 600px){.parent[_ngcontent-%COMP%]{flex-direction:column-reverse}.item[_ngcontent-%COMP%]{width:auto;min-height:200px}.last[_ngcontent-%COMP%]{background:#a00}}"]});let t=e;return t})();function F_(t,e){if(t&1&&(L(0,"mat-radio-button",2),F(1),c()),t&2){let E=e.$implicit;fe("value",E),B(),$e(E)}}var OA=(()=>{let e=class e{constructor(){this.favoriteSeason="",this.seasons=["Prettify","Uglify"],this.original=""}onChange(r){let n=JSON.parse(this.original);r==="Prettify"?this.original=JSON.stringify(n,null,2):r==="Uglify"&&(this.original=JSON.stringify(JSON.parse(this.original)))}};e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=b({type:e,selectors:[["app-dev-tools-generators-random"]],standalone:!0,features:[V],decls:7,vars:2,consts:[[2,"display","flex","flex-direction","row-reverse","padding-right","12px"],["aria-labelledby","example-radio-group-label",1,"example-radio-group",3,"ngModelChange","ngModel"],[1,"example-radio-button",3,"value"],[1,"parent"],[1,"item"],["type","text",2,"width","100%","height","100%","min-height","300px",3,"ngModelChange","ngModel"]],template:function(n,T){n&1&&(L(0,"div",0)(1,"mat-radio-group",1),Re("ngModelChange",function(o){return T.onChange(o)}),K("ngModelChange",function(o){return x(T.favoriteSeason,o)||(T.favoriteSeason=o),o}),Ke(2,F_,2,2,"mat-radio-button",2,xe),c()(),L(4,"div",3)(5,"div",4)(6,"textarea",5),K("ngModelChange",function(o){return x(T.original,o)||(T.original=o),o}),c()()()),n&2&&(B(),X("ngModel",T.favoriteSeason),B(),Je(T.seasons),B(4),X("ngModel",T.original))},dependencies:[ae,Ce,Ne,Se,Oe,Ie,Ae,le,ke,qe]});let t=e;return t})();var re=[];for(rn=0;rn<256;++rn)re.push((rn+256).toString(16).slice(1));var rn;function IA(t,e=0){return(re[t[e+0]]+re[t[e+1]]+re[t[e+2]]+re[t[e+3]]+"-"+re[t[e+4]]+re[t[e+5]]+"-"+re[t[e+6]]+re[t[e+7]]+"-"+re[t[e+8]]+re[t[e+9]]+"-"+re[t[e+10]]+re[t[e+11]]+re[t[e+12]]+re[t[e+13]]+re[t[e+14]]+re[t[e+15]]).toLowerCase()}var nn,H_=new Uint8Array(16);function is(){if(!nn&&(nn=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!nn))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return nn(H_)}var Y_=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),os={randomUUID:Y_};function b_(t,e,E){if(os.randomUUID&&!e&&!t)return os.randomUUID();t=t||{};var r=t.random||(t.rng||is)();if(r[6]=r[6]&15|64,r[8]=r[8]&63|128,e){E=E||0;for(var n=0;n<16;++n)e[E+n]=r[n];return e}return IA(r)}var Rs=b_;var NA=(()=>{let e=class e{constructor(){this.favoriteSeason="",this.seasons=["Prettify","Uglify"],this.original=""}onChange(){for(let r=0;r<50;r++)this.original=Rs()+`
`+this.original}};e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=b({type:e,selectors:[["app-dev-tools-generators-uuid"]],standalone:!0,features:[V],decls:8,vars:1,consts:[[2,"display","flex","flex-direction","row-reverse","padding","12px"],["extended","","mat-fab","",3,"click"],[1,"parent"],[1,"item"],["type","text",2,"width","100%","height","100%","min-height","300px",3,"ngModelChange","ngModel"]],template:function(n,T){n&1&&(L(0,"div",0)(1,"button",1),Re("click",function(){return T.onChange()}),L(2,"mat-icon"),F(3,"edit_note"),c(),F(4," Generate "),c()(),L(5,"div",2)(6,"div",3)(7,"textarea",4),K("ngModelChange",function(o){return x(T.original,o)||(T.original=o),o}),c()()()),n&2&&(B(7),X("ngModel",T.original))},dependencies:[ae,Ce,Ne,Se,Oe,Ie,Ae,UE,le,gE]});let t=e;return t})();var lA=(()=>{let e=class e{constructor(){}ngOnInit(){}};e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=b({type:e,selectors:[["app-dev-tools-generators"]],standalone:!0,features:[V],decls:21,vars:0,consts:[[1,"tab-wrap"],["checked","","id","tab1","name","tabGroup2","type","radio",1,"tab"],["for","tab1"],["id","tab5","name","tabGroup2","type","radio",1,"tab"],["for","tab5"],["id","random","name","tabGroup2","type","radio",1,"tab"],["for","random"],["id","uuid","name","tabGroup2","type","radio",1,"tab"],["for","uuid"],[1,"tab__content"]],template:function(n,T){n&1&&(L(0,"div",0),Y(1,"input",1),L(2,"label",2),F(3,"Lorem Ipsum"),c(),Y(4,"input",3),L(5,"label",4),F(6,"QR"),c(),Y(7,"input",5),L(8,"label",6),F(9,"Random"),c(),Y(10,"input",7),L(11,"label",8),F(12,"UUID"),c(),L(13,"div",9),Y(14,"app-dev-tools-generators-lorem-ipsum"),c(),L(15,"div",9),Y(16,"app-dev-tools-generators-qr"),c(),L(17,"div",9),Y(18,"app-dev-tools-generators-random"),c(),L(19,"div",9),Y(20,"app-dev-tools-generators-uuid"),c()())},dependencies:[rR,SA,OA,NA],styles:[".tab-wrap[_ngcontent-%COMP%]{transition:.3s box-shadow ease;border-radius:6px;max-width:100%;display:flex;flex-wrap:wrap;position:relative;list-style:none;background-color:#fff;margin:0;box-shadow:0 1px 3px #0000001f,0 1px 2px #0000003d}.tab-wrap[_ngcontent-%COMP%]:hover{box-shadow:0 12px 23px #0000003b,0 10px 10px #00000030}.tab[_ngcontent-%COMP%]{display:none}.tab[_ngcontent-%COMP%]:checked:nth-of-type(1) ~ .tab__content[_ngcontent-%COMP%]:nth-of-type(1){opacity:1;transition:.5s opacity ease-in,.8s transform ease;position:relative;top:0;z-index:100;transform:translateY(0);text-shadow:0 0 0}.tab[_ngcontent-%COMP%]:checked:nth-of-type(2) ~ .tab__content[_ngcontent-%COMP%]:nth-of-type(2){opacity:1;transition:.5s opacity ease-in,.8s transform ease;position:relative;top:0;z-index:100;transform:translateY(0);text-shadow:0 0 0}.tab[_ngcontent-%COMP%]:checked:nth-of-type(3) ~ .tab__content[_ngcontent-%COMP%]:nth-of-type(3){opacity:1;transition:.5s opacity ease-in,.8s transform ease;position:relative;top:0;z-index:100;transform:translateY(0);text-shadow:0 0 0}.tab[_ngcontent-%COMP%]:checked:nth-of-type(4) ~ .tab__content[_ngcontent-%COMP%]:nth-of-type(4){opacity:1;transition:.5s opacity ease-in,.8s transform ease;position:relative;top:0;z-index:100;transform:translateY(0);text-shadow:0 0 0}.tab[_ngcontent-%COMP%]:checked:nth-of-type(5) ~ .tab__content[_ngcontent-%COMP%]:nth-of-type(5){opacity:1;transition:.5s opacity ease-in,.8s transform ease;position:relative;top:0;z-index:100;transform:translateY(0);text-shadow:0 0 0}.tab[_ngcontent-%COMP%]:first-of-type:not(:last-of-type) + label[_ngcontent-%COMP%]{border-top-right-radius:0;border-bottom-right-radius:0}.tab[_ngcontent-%COMP%]:not(:first-of-type):not(:last-of-type) + label[_ngcontent-%COMP%]{border-radius:0}.tab[_ngcontent-%COMP%]:last-of-type:not(:first-of-type) + label[_ngcontent-%COMP%]{border-top-left-radius:0;border-bottom-left-radius:0}.tab[_ngcontent-%COMP%]:checked + label[_ngcontent-%COMP%]{background-color:#fff;box-shadow:0 -1px #fff inset;cursor:default}.tab[_ngcontent-%COMP%]:checked + label[_ngcontent-%COMP%]:hover{box-shadow:0 -1px #fff inset;background-color:#fff}.tab[_ngcontent-%COMP%] + label[_ngcontent-%COMP%]{box-shadow:0 -1px #eee inset;border-radius:6px 6px 0 0;cursor:pointer;display:block;text-decoration:none;color:#333;flex-grow:3;background-color:#f2f2f2;-webkit-user-select:none;user-select:none;text-align:center;transition:.3s background-color ease,.3s box-shadow ease;height:50px;box-sizing:border-box;padding:15px}.tab[_ngcontent-%COMP%] + label[_ngcontent-%COMP%]:hover{background-color:#f9f9f9;box-shadow:0 1px #f4f4f4 inset}.tab__content[_ngcontent-%COMP%]{padding:10px 25px;background-color:transparent;position:absolute;width:100%;z-index:-1;opacity:0;left:0;transform:translateY(-3px);border-radius:6px}body[_ngcontent-%COMP%]{font-family:Helvetica,sans-serif;background-color:#e7e7e7;color:#777;padding:30px 0;font-weight:300}.container[_ngcontent-%COMP%]{margin:0 auto;display:block;max-width:800px}.container[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]:not(.tab-wrap){padding:0 80px}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%]{margin:0;color:#444;text-align:center;font-weight:400}h2[_ngcontent-%COMP%]{font-size:1em;margin-bottom:30px}h3[_ngcontent-%COMP%]{font-weight:400}p[_ngcontent-%COMP%]{line-height:1.6;margin-bottom:20px}"]});let t=e;return t})();var Qh=[{path:"",redirectTo:"converts",pathMatch:"full"},{path:"converts",component:mi},{path:"hashing",component:Ui},{path:"formatters",component:Go},{path:"generators",component:lA},{path:"**",redirectTo:""}];export{Qh as routes};
